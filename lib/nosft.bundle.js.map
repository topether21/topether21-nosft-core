{
  "version": 3,
  "sources": ["../node_modules/@esbuild-plugins/node-globals-polyfill/process.js", "../node_modules/@esbuild-plugins/node-globals-polyfill/Buffer.js", "../node_modules/@esbuild-plugins/node-globals-polyfill/_buffer.js", "../node_modules/@scure/bip39/wordlists/english.js", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/_assert.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/crypto.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/utils.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/hmac.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/pbkdf2.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/sha256.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/_u64.ts", "../node_modules/@scure/bip39/node_modules/@noble/hashes/src/sha512.ts", "../node_modules/@scure/base/lib/index.js", "../node_modules/@scure/bip39/index.js", "../node_modules/bitcoinjs-lib/src/networks.js", "../node_modules/bitcoinjs-lib/src/bip66.js", "../node_modules/bitcoinjs-lib/src/ops.js", "../node_modules/bitcoinjs-lib/src/push_data.js", "../node_modules/bitcoinjs-lib/src/script_number.js", "node-modules-polyfills:buffer", "node-modules-polyfills-commonjs:buffer", "../node_modules/typeforce/native.js", "../node_modules/typeforce/errors.js", "../node_modules/typeforce/extra.js", "../node_modules/typeforce/index.js", "../node_modules/bitcoinjs-lib/src/types.js", "../node_modules/bitcoinjs-lib/src/script_signature.js", "../node_modules/bitcoinjs-lib/src/script.js", "../node_modules/bitcoinjs-lib/src/payments/lazy.js", "../node_modules/bitcoinjs-lib/src/payments/embed.js", "../node_modules/bitcoinjs-lib/src/payments/p2ms.js", "../node_modules/bitcoinjs-lib/src/payments/p2pk.js", "../node_modules/inherits/inherits_browser.js", "../node_modules/safe-buffer/index.js", "node-modules-polyfills:events", "node-modules-polyfills-commonjs:events", "../node_modules/readable-stream/lib/internal/streams/stream-browser.js", "node-modules-polyfills:process", "../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js", "node-modules-polyfills:util", "node-modules-polyfills-commonjs:util", "../node_modules/readable-stream/lib/internal/streams/buffer_list.js", "../node_modules/readable-stream/lib/internal/streams/destroy.js", "../node_modules/readable-stream/errors-browser.js", "../node_modules/readable-stream/lib/internal/streams/state.js", "../node_modules/util-deprecate/browser.js", "../node_modules/readable-stream/lib/_stream_writable.js", "../node_modules/readable-stream/lib/_stream_duplex.js", "../node_modules/string_decoder/lib/string_decoder.js", "../node_modules/readable-stream/lib/internal/streams/end-of-stream.js", "../node_modules/readable-stream/lib/internal/streams/async_iterator.js", "../node_modules/readable-stream/lib/internal/streams/from-browser.js", "../node_modules/readable-stream/lib/_stream_readable.js", "../node_modules/readable-stream/lib/_stream_transform.js", "../node_modules/readable-stream/lib/_stream_passthrough.js", "../node_modules/readable-stream/lib/internal/streams/pipeline.js", "../node_modules/readable-stream/readable-browser.js", "../node_modules/hash-base/index.js", "../node_modules/md5.js/index.js", "../node_modules/ripemd160/index.js", "../node_modules/sha.js/hash.js", "../node_modules/sha.js/sha.js", "../node_modules/sha.js/sha1.js", "../node_modules/sha.js/sha256.js", "../node_modules/sha.js/sha224.js", "../node_modules/sha.js/sha512.js", "../node_modules/sha.js/sha384.js", "../node_modules/sha.js/index.js", "../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/buffer-list.js", "node-modules-polyfills:string_decoder", "../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/readable.js", "../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/writable.js", "../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/duplex.js", "../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/transform.js", "../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough.js", "node-modules-polyfills:stream", "node-modules-polyfills-commonjs:stream", "node-modules-polyfills-commonjs:string_decoder", "../node_modules/cipher-base/index.js", "../node_modules/create-hash/browser.js", "../node_modules/bitcoinjs-lib/src/crypto.js", "../node_modules/base-x/src/index.js", "../node_modules/bs58/index.js", "../node_modules/bs58check/base.js", "../node_modules/bs58check/index.js", "../node_modules/bitcoinjs-lib/src/payments/p2pkh.js", "../node_modules/bitcoinjs-lib/src/payments/p2sh.js", "../node_modules/bech32/dist/index.js", "../node_modules/bitcoinjs-lib/src/payments/p2wpkh.js", "../node_modules/bitcoinjs-lib/src/payments/p2wsh.js", "../node_modules/bitcoinjs-lib/src/ecc_lib.js", "../node_modules/varuint-bitcoin/index.js", "../node_modules/bitcoinjs-lib/src/bufferutils.js", "../node_modules/bitcoinjs-lib/src/payments/bip341.js", "../node_modules/bitcoinjs-lib/src/payments/p2tr.js", "../node_modules/bitcoinjs-lib/src/payments/index.js", "../node_modules/bitcoinjs-lib/src/address.js", "../node_modules/bitcoinjs-lib/src/merkle.js", "../node_modules/bitcoinjs-lib/src/transaction.js", "../node_modules/bitcoinjs-lib/src/block.js", "../node_modules/bip174/src/lib/typeFields.js", "../node_modules/bip174/src/lib/converter/global/globalXpub.js", "../node_modules/bip174/src/lib/converter/global/unsignedTx.js", "../node_modules/bip174/src/lib/converter/input/finalScriptSig.js", "../node_modules/bip174/src/lib/converter/input/finalScriptWitness.js", "../node_modules/bip174/src/lib/converter/input/nonWitnessUtxo.js", "../node_modules/bip174/src/lib/converter/input/partialSig.js", "../node_modules/bip174/src/lib/converter/input/porCommitment.js", "../node_modules/bip174/src/lib/converter/input/sighashType.js", "../node_modules/bip174/src/lib/converter/input/tapKeySig.js", "../node_modules/bip174/src/lib/converter/input/tapLeafScript.js", "../node_modules/bip174/src/lib/converter/input/tapMerkleRoot.js", "../node_modules/bip174/src/lib/converter/input/tapScriptSig.js", "../node_modules/bip174/src/lib/converter/varint.js", "../node_modules/bip174/src/lib/converter/tools.js", "../node_modules/bip174/src/lib/converter/input/witnessUtxo.js", "../node_modules/bip174/src/lib/converter/output/tapTree.js", "../node_modules/bip174/src/lib/converter/shared/bip32Derivation.js", "../node_modules/bip174/src/lib/converter/shared/checkPubkey.js", "../node_modules/bip174/src/lib/converter/shared/redeemScript.js", "../node_modules/bip174/src/lib/converter/shared/tapBip32Derivation.js", "../node_modules/bip174/src/lib/converter/shared/tapInternalKey.js", "../node_modules/bip174/src/lib/converter/shared/witnessScript.js", "../node_modules/bip174/src/lib/converter/index.js", "../node_modules/bip174/src/lib/parser/fromBuffer.js", "../node_modules/bip174/src/lib/parser/toBuffer.js", "../node_modules/bip174/src/lib/parser/index.js", "../node_modules/bip174/src/lib/combiner/index.js", "../node_modules/bip174/src/lib/utils.js", "../node_modules/bip174/src/lib/psbt.js", "../node_modules/bitcoinjs-lib/src/psbt/psbtutils.js", "../node_modules/bitcoinjs-lib/src/psbt/bip371.js", "../node_modules/bitcoinjs-lib/src/psbt.js", "../node_modules/bitcoinjs-lib/src/index.js", "../index.ts", "../src/services/nosft.ts", "../src/utils/httpService.ts", "../node_modules/axios/index.js", "../node_modules/axios/lib/axios.js", "../node_modules/axios/lib/utils.js", "../node_modules/axios/lib/helpers/bind.js", "../node_modules/axios/lib/core/Axios.js", "../node_modules/axios/lib/helpers/buildURL.js", "../node_modules/axios/lib/helpers/AxiosURLSearchParams.js", "../node_modules/axios/lib/helpers/toFormData.js", "../node_modules/axios/lib/core/AxiosError.js", "../node_modules/axios/lib/helpers/null.js", "../node_modules/axios/lib/core/InterceptorManager.js", "../node_modules/axios/lib/core/dispatchRequest.js", "../node_modules/axios/lib/core/transformData.js", "../node_modules/axios/lib/defaults/index.js", "../node_modules/axios/lib/defaults/transitional.js", "../node_modules/axios/lib/helpers/toURLEncodedForm.js", "../node_modules/axios/lib/platform/index.js", "../node_modules/axios/lib/platform/browser/index.js", "../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js", "../node_modules/axios/lib/platform/browser/classes/FormData.js", "../node_modules/axios/lib/platform/browser/classes/Blob.js", "../node_modules/axios/lib/helpers/formDataToJSON.js", "../node_modules/axios/lib/core/AxiosHeaders.js", "../node_modules/axios/lib/helpers/parseHeaders.js", "../node_modules/axios/lib/cancel/isCancel.js", "../node_modules/axios/lib/cancel/CanceledError.js", "../node_modules/axios/lib/adapters/adapters.js", "../node_modules/axios/lib/adapters/xhr.js", "../node_modules/axios/lib/core/settle.js", "../node_modules/axios/lib/helpers/cookies.js", "../node_modules/axios/lib/core/buildFullPath.js", "../node_modules/axios/lib/helpers/isAbsoluteURL.js", "../node_modules/axios/lib/helpers/combineURLs.js", "../node_modules/axios/lib/helpers/isURLSameOrigin.js", "../node_modules/axios/lib/helpers/parseProtocol.js", "../node_modules/axios/lib/helpers/speedometer.js", "../node_modules/axios/lib/core/mergeConfig.js", "../node_modules/axios/lib/helpers/validator.js", "../node_modules/axios/lib/env/data.js", "../node_modules/axios/lib/cancel/CancelToken.js", "../node_modules/axios/lib/helpers/spread.js", "../node_modules/axios/lib/helpers/isAxiosError.js", "../node_modules/axios/lib/helpers/HttpStatusCode.js", "../src/config/constants.ts", "../src/services/relay.ts", "../node_modules/nostr-tools/lib/esm/nostr.mjs", "../node_modules/@noble/secp256k1/lib/esm/index.js", "node-modules-polyfills:crypto", "../node_modules/@noble/hashes/esm/sha256.js", "../node_modules/@noble/hashes/esm/_sha2.js", "../node_modules/@noble/hashes/esm/utils.js", "../node_modules/@noble/hashes/esm/cryptoBrowser.js", "../node_modules/@scure/base/lib/esm/index.js", "../node_modules/@scure/bip32/index.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/hmac.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/_assert.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/utils.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/crypto.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/ripemd160.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/sha256.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/sha512.ts", "../node_modules/@scure/bip32/node_modules/@noble/hashes/src/_u64.ts", "../node_modules/@noble/curves/src/secp256k1.ts", "../node_modules/@noble/curves/node_modules/@noble/hashes/src/sha256.ts", "../node_modules/@noble/curves/node_modules/@noble/hashes/src/_sha2.ts", "../node_modules/@noble/curves/node_modules/@noble/hashes/src/_assert.ts", "../node_modules/@noble/curves/node_modules/@noble/hashes/src/utils.ts", "../node_modules/@noble/curves/node_modules/@noble/hashes/src/crypto.ts", "../node_modules/@noble/curves/src/abstract/modular.ts", "../node_modules/@noble/curves/src/abstract/utils.ts", "../node_modules/@noble/curves/src/abstract/weierstrass.ts", "../node_modules/@noble/curves/src/abstract/curve.ts", "../node_modules/@noble/curves/src/abstract/hash-to-curve.ts", "../node_modules/@noble/curves/src/_shortw_utils.ts", "../node_modules/@noble/curves/node_modules/@noble/hashes/src/hmac.ts", "../node_modules/@noble/hashes/esm/hmac.js", "../src/services/open-ordex.ts", "../src/types/open-order.ts", "../src/types/relay.ts"],
  "sourcesContent": ["// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined')\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined')\n}\nvar cachedSetTimeout = defaultSetTimout\nvar cachedClearTimeout = defaultClearTimeout\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0)\n    }\n    // if setTimeout wasn't available but was latter defined\n    if (\n        (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&\n        setTimeout\n    ) {\n        cachedSetTimeout = setTimeout\n        return setTimeout(fun, 0)\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0)\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0)\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0)\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker)\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if (\n        (cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) &&\n        clearTimeout\n    ) {\n        cachedClearTimeout = clearTimeout\n        return clearTimeout(marker)\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker)\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker)\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker)\n        }\n    }\n}\nvar queue = []\nvar draining = false\nvar currentQueue\nvar queueIndex = -1\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return\n    }\n    draining = false\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue)\n    } else {\n        queueIndex = -1\n    }\n    if (queue.length) {\n        drainQueue()\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return\n    }\n    var timeout = runTimeout(cleanUpNextTick)\n    draining = true\n\n    var len = queue.length\n    while (len) {\n        currentQueue = queue\n        queue = []\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run()\n            }\n        }\n        queueIndex = -1\n        len = queue.length\n    }\n    currentQueue = null\n    draining = false\n    runClearTimeout(timeout)\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1)\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i]\n        }\n    }\n    queue.push(new Item(fun, args))\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue)\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun\n    this.array = array\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array)\n}\nvar title = 'browser'\nvar platform = 'browser'\nvar browser = true\nvar env = {}\nvar argv = []\nvar version = '' // empty string to avoid regexp issues\nvar versions = {}\nvar release = {}\nvar config = {}\n\nfunction noop() {}\n\nvar on = noop\nvar addListener = noop\nvar once = noop\nvar off = noop\nvar removeListener = noop\nvar removeAllListeners = noop\nvar emit = noop\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported')\n}\n\nfunction cwd() {\n    return '/'\n}\nfunction chdir(dir) {\n    throw new Error('process.chdir is not supported')\n}\nfunction umask() {\n    return 0\n}\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {}\nvar performanceNow =\n    performance.now ||\n    performance.mozNow ||\n    performance.msNow ||\n    performance.oNow ||\n    performance.webkitNow ||\n    function() {\n        return new Date().getTime()\n    }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp) {\n    var clocktime = performanceNow.call(performance) * 1e-3\n    var seconds = Math.floor(clocktime)\n    var nanoseconds = Math.floor((clocktime % 1) * 1e9)\n    if (previousTimestamp) {\n        seconds = seconds - previousTimestamp[0]\n        nanoseconds = nanoseconds - previousTimestamp[1]\n        if (nanoseconds < 0) {\n            seconds--\n            nanoseconds += 1e9\n        }\n    }\n    return [seconds, nanoseconds]\n}\n\nvar startTime = new Date()\nfunction uptime() {\n    var currentTime = new Date()\n    var dif = currentTime - startTime\n    return dif / 1000\n}\n\nexport var process = {\n    nextTick: nextTick,\n    title: title,\n    browser: browser,\n    env: env,\n    argv: argv,\n    version: version,\n    versions: versions,\n    on: on,\n    addListener: addListener,\n    once: once,\n    off: off,\n    removeListener: removeListener,\n    removeAllListeners: removeAllListeners,\n    emit: emit,\n    binding: binding,\n    cwd: cwd,\n    chdir: chdir,\n    umask: umask,\n    hrtime: hrtime,\n    platform: platform,\n    release: release,\n    config: config,\n    uptime: uptime,\n}\n\n// replace process.env.VAR with define\n\nconst defines = {}\nObject.keys(defines).forEach((key) => {\n    const segs = key.split('.')\n    let target = process\n    for (let i = 0; i < segs.length; i++) {\n        const seg = segs[i]\n        if (i === segs.length - 1) {\n            target[seg] = defines[key]\n        } else {\n            target = target[seg] || (target[seg] = {})\n        }\n    }\n})\n", "// taken from https://github.com/calvinmetcalf/buffer-es6\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\nvar inited = false\nfunction init() {\n    inited = true\n    var code =\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    for (var i = 0, len = code.length; i < len; ++i) {\n        lookup[i] = code[i]\n        revLookup[code.charCodeAt(i)] = i\n    }\n\n    revLookup['-'.charCodeAt(0)] = 62\n    revLookup['_'.charCodeAt(0)] = 63\n}\n\nfunction base64toByteArray(b64) {\n    if (!inited) {\n        init()\n    }\n    var i, j, l, tmp, placeHolders, arr\n    var len = b64.length\n\n    if (len % 4 > 0) {\n        throw new Error('Invalid string. Length must be a multiple of 4')\n    }\n\n    // the number of equal signs (place holders)\n    // if there are two placeholders, than the two characters before it\n    // represent one byte\n    // if there is only one, then the three characters before it represent 2 bytes\n    // this is just a cheap hack to not do indexOf twice\n    placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n    // base64 is 4/3 + up to two characters of the original data\n    arr = new Arr((len * 3) / 4 - placeHolders)\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    l = placeHolders > 0 ? len - 4 : len\n\n    var L = 0\n\n    for (i = 0, j = 0; i < l; i += 4, j += 3) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 18) |\n            (revLookup[b64.charCodeAt(i + 1)] << 12) |\n            (revLookup[b64.charCodeAt(i + 2)] << 6) |\n            revLookup[b64.charCodeAt(i + 3)]\n        arr[L++] = (tmp >> 16) & 0xff\n        arr[L++] = (tmp >> 8) & 0xff\n        arr[L++] = tmp & 0xff\n    }\n\n    if (placeHolders === 2) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 2) |\n            (revLookup[b64.charCodeAt(i + 1)] >> 4)\n        arr[L++] = tmp & 0xff\n    } else if (placeHolders === 1) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 10) |\n            (revLookup[b64.charCodeAt(i + 1)] << 4) |\n            (revLookup[b64.charCodeAt(i + 2)] >> 2)\n        arr[L++] = (tmp >> 8) & 0xff\n        arr[L++] = tmp & 0xff\n    }\n\n    return arr\n}\n\nfunction tripletToBase64(num) {\n    return (\n        lookup[(num >> 18) & 0x3f] +\n        lookup[(num >> 12) & 0x3f] +\n        lookup[(num >> 6) & 0x3f] +\n        lookup[num & 0x3f]\n    )\n}\n\nfunction encodeChunk(uint8, start, end) {\n    var tmp\n    var output = []\n    for (var i = start; i < end; i += 3) {\n        tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2]\n        output.push(tripletToBase64(tmp))\n    }\n    return output.join('')\n}\n\nfunction base64fromByteArray(uint8) {\n    if (!inited) {\n        init()\n    }\n    var tmp\n    var len = uint8.length\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    var output = ''\n    var parts = []\n    var maxChunkLength = 16383 // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n        parts.push(\n            encodeChunk(\n                uint8,\n                i,\n                i + maxChunkLength > len2 ? len2 : i + maxChunkLength,\n            ),\n        )\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1]\n        output += lookup[tmp >> 2]\n        output += lookup[(tmp << 4) & 0x3f]\n        output += '=='\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n        output += lookup[tmp >> 10]\n        output += lookup[(tmp >> 4) & 0x3f]\n        output += lookup[(tmp << 2) & 0x3f]\n        output += '='\n    }\n\n    parts.push(output)\n\n    return parts.join('')\n}\n\nvar INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT =\n    global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : true\n\nfunction kMaxLength() {\n    return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff\n}\n\nfunction createBuffer(that, length) {\n    if (kMaxLength() < length) {\n        throw new RangeError('Invalid typed array length')\n    }\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = new Uint8Array(length)\n        that.__proto__ = Buffer.prototype\n    } else {\n        // Fallback: Return an object instance of the Buffer class\n        if (that === null) {\n            that = new Buffer(length)\n        }\n        that.length = length\n    }\n\n    return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nexport function Buffer(arg, encodingOrOffset, length) {\n    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, encodingOrOffset, length)\n    }\n\n    // Common case.\n    if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') {\n            throw new Error(\n                'If encoding is specified then the first argument must be a string',\n            )\n        }\n        return allocUnsafe(this, arg)\n    }\n    return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function(arr) {\n    arr.__proto__ = Buffer.prototype\n    return arr\n}\n\nfunction from(that, value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number')\n    }\n\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, encodingOrOffset, length)\n    }\n\n    if (typeof value === 'string') {\n        return fromString(that, value, encodingOrOffset)\n    }\n\n    return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function(value, encodingOrOffset, length) {\n    return from(null, value, encodingOrOffset, length)\n}\n\nBuffer.kMaxLength = kMaxLength()\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n    Buffer.prototype.__proto__ = Uint8Array.prototype\n    Buffer.__proto__ = Uint8Array\n    if (\n        typeof Symbol !== 'undefined' &&\n        Symbol.species &&\n        Buffer[Symbol.species] === Buffer\n    ) {\n        // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n        // Object.defineProperty(Buffer, Symbol.species, {\n        //   value: null,\n        //   configurable: true\n        // })\n    }\n}\n\nfunction assertSize(size) {\n    if (typeof size !== 'number') {\n        throw new TypeError('\"size\" argument must be a number')\n    } else if (size < 0) {\n        throw new RangeError('\"size\" argument must not be negative')\n    }\n}\n\nfunction alloc(that, size, fill, encoding) {\n    assertSize(size)\n    if (size <= 0) {\n        return createBuffer(that, size)\n    }\n    if (fill !== undefined) {\n        // Only pay attention to encoding if it's a string. This\n        // prevents accidentally sending in a number that would\n        // be interpretted as a start offset.\n        return typeof encoding === 'string'\n            ? createBuffer(that, size).fill(fill, encoding)\n            : createBuffer(that, size).fill(fill)\n    }\n    return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function(size, fill, encoding) {\n    return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe(that, size) {\n    assertSize(size)\n    that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n    if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n            that[i] = 0\n        }\n    }\n    return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function(size) {\n    return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function(size) {\n    return allocUnsafe(null, size)\n}\n\nfunction fromString(that, string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n        encoding = 'utf8'\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n        throw new TypeError('\"encoding\" must be a valid string encoding')\n    }\n\n    var length = byteLength(string, encoding) | 0\n    that = createBuffer(that, length)\n\n    var actual = that.write(string, encoding)\n\n    if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        that = that.slice(0, actual)\n    }\n\n    return that\n}\n\nfunction fromArrayLike(that, array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0\n    that = createBuffer(that, length)\n    for (var i = 0; i < length; i += 1) {\n        that[i] = array[i] & 255\n    }\n    return that\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n    array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError(\"'offset' is out of bounds\")\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError(\"'length' is out of bounds\")\n    }\n\n    if (byteOffset === undefined && length === undefined) {\n        array = new Uint8Array(array)\n    } else if (length === undefined) {\n        array = new Uint8Array(array, byteOffset)\n    } else {\n        array = new Uint8Array(array, byteOffset, length)\n    }\n\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = array\n        that.__proto__ = Buffer.prototype\n    } else {\n        // Fallback: Return an object instance of the Buffer class\n        that = fromArrayLike(that, array)\n    }\n    return that\n}\n\nfunction fromObject(that, obj) {\n    if (internalIsBuffer(obj)) {\n        var len = checked(obj.length) | 0\n        that = createBuffer(that, len)\n\n        if (that.length === 0) {\n            return that\n        }\n\n        obj.copy(that, 0, 0, len)\n        return that\n    }\n\n    if (obj) {\n        if (\n            (typeof ArrayBuffer !== 'undefined' &&\n                obj.buffer instanceof ArrayBuffer) ||\n            'length' in obj\n        ) {\n            if (typeof obj.length !== 'number' || isnan(obj.length)) {\n                return createBuffer(that, 0)\n            }\n            return fromArrayLike(that, obj)\n        }\n\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n            return fromArrayLike(that, obj.data)\n        }\n    }\n\n    throw new TypeError(\n        'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.',\n    )\n}\n\nfunction checked(length) {\n    // Note: cannot use `length < kMaxLength()` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= kMaxLength()) {\n        throw new RangeError(\n            'Attempt to allocate Buffer larger than maximum ' +\n                'size: 0x' +\n                kMaxLength().toString(16) +\n                ' bytes',\n        )\n    }\n    return length | 0\n}\n\nexport function SlowBuffer(length) {\n    if (+length != length) {\n        // eslint-disable-line eqeqeq\n        length = 0\n    }\n    return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer\nfunction internalIsBuffer(b) {\n    return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare(a, b) {\n    if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n        throw new TypeError('Arguments must be Buffers')\n    }\n\n    if (a === b) return 0\n\n    var x = a.length\n    var y = b.length\n\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n            x = a[i]\n            y = b[i]\n            break\n        }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n}\n\nBuffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return true\n        default:\n            return false\n    }\n}\n\nBuffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n\n    if (list.length === 0) {\n        return Buffer.alloc(0)\n    }\n\n    var i\n    if (length === undefined) {\n        length = 0\n        for (i = 0; i < list.length; ++i) {\n            length += list[i].length\n        }\n    }\n\n    var buffer = Buffer.allocUnsafe(length)\n    var pos = 0\n    for (i = 0; i < list.length; ++i) {\n        var buf = list[i]\n        if (!internalIsBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers')\n        }\n        buf.copy(buffer, pos)\n        pos += buf.length\n    }\n    return buffer\n}\n\nfunction byteLength(string, encoding) {\n    if (internalIsBuffer(string)) {\n        return string.length\n    }\n    if (\n        typeof ArrayBuffer !== 'undefined' &&\n        typeof ArrayBuffer.isView === 'function' &&\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)\n    ) {\n        return string.byteLength\n    }\n    if (typeof string !== 'string') {\n        string = '' + string\n    }\n\n    var len = string.length\n    if (len === 0) return 0\n\n    // Use a for loop to avoid recursion\n    var loweredCase = false\n    for (;;) {\n        switch (encoding) {\n            case 'ascii':\n            case 'latin1':\n            case 'binary':\n                return len\n            case 'utf8':\n            case 'utf-8':\n            case undefined:\n                return utf8ToBytes(string).length\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n                return len * 2\n            case 'hex':\n                return len >>> 1\n            case 'base64':\n                return base64ToBytes(string).length\n            default:\n                if (loweredCase) return utf8ToBytes(string).length // assume utf8\n                encoding = ('' + encoding).toLowerCase()\n                loweredCase = true\n        }\n    }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString(encoding, start, end) {\n    var loweredCase = false\n\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) {\n        start = 0\n    }\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) {\n        return ''\n    }\n\n    if (end === undefined || end > this.length) {\n        end = this.length\n    }\n\n    if (end <= 0) {\n        return ''\n    }\n\n    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0\n    start >>>= 0\n\n    if (end <= start) {\n        return ''\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    while (true) {\n        switch (encoding) {\n            case 'hex':\n                return hexSlice(this, start, end)\n\n            case 'utf8':\n            case 'utf-8':\n                return utf8Slice(this, start, end)\n\n            case 'ascii':\n                return asciiSlice(this, start, end)\n\n            case 'latin1':\n            case 'binary':\n                return latin1Slice(this, start, end)\n\n            case 'base64':\n                return base64Slice(this, start, end)\n\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n                return utf16leSlice(this, start, end)\n\n            default:\n                if (loweredCase)\n                    throw new TypeError('Unknown encoding: ' + encoding)\n                encoding = (encoding + '').toLowerCase()\n                loweredCase = true\n        }\n    }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap(b, n, m) {\n    var i = b[n]\n    b[n] = b[m]\n    b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16() {\n    var len = this.length\n    if (len % 2 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 16-bits')\n    }\n    for (var i = 0; i < len; i += 2) {\n        swap(this, i, i + 1)\n    }\n    return this\n}\n\nBuffer.prototype.swap32 = function swap32() {\n    var len = this.length\n    if (len % 4 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 32-bits')\n    }\n    for (var i = 0; i < len; i += 4) {\n        swap(this, i, i + 3)\n        swap(this, i + 1, i + 2)\n    }\n    return this\n}\n\nBuffer.prototype.swap64 = function swap64() {\n    var len = this.length\n    if (len % 8 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 64-bits')\n    }\n    for (var i = 0; i < len; i += 8) {\n        swap(this, i, i + 7)\n        swap(this, i + 1, i + 6)\n        swap(this, i + 2, i + 5)\n        swap(this, i + 3, i + 4)\n    }\n    return this\n}\n\nBuffer.prototype.toString = function toString() {\n    var length = this.length | 0\n    if (length === 0) return ''\n    if (arguments.length === 0) return utf8Slice(this, 0, length)\n    return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals(b) {\n    if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n    if (this === b) return true\n    return Buffer.compare(this, b) === 0\n}\n\n\nBuffer.prototype.compare = function compare(\n    target,\n    start,\n    end,\n    thisStart,\n    thisEnd,\n) {\n    if (!internalIsBuffer(target)) {\n        throw new TypeError('Argument must be a Buffer')\n    }\n\n    if (start === undefined) {\n        start = 0\n    }\n    if (end === undefined) {\n        end = target ? target.length : 0\n    }\n    if (thisStart === undefined) {\n        thisStart = 0\n    }\n    if (thisEnd === undefined) {\n        thisEnd = this.length\n    }\n\n    if (\n        start < 0 ||\n        end > target.length ||\n        thisStart < 0 ||\n        thisEnd > this.length\n    ) {\n        throw new RangeError('out of range index')\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n        return 0\n    }\n    if (thisStart >= thisEnd) {\n        return -1\n    }\n    if (start >= end) {\n        return 1\n    }\n\n    start >>>= 0\n    end >>>= 0\n    thisStart >>>= 0\n    thisEnd >>>= 0\n\n    if (this === target) return 0\n\n    var x = thisEnd - thisStart\n    var y = end - start\n    var len = Math.min(x, y)\n\n    var thisCopy = this.slice(thisStart, thisEnd)\n    var targetCopy = target.slice(start, end)\n\n    for (var i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n            x = thisCopy[i]\n            y = targetCopy[i]\n            break\n        }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1\n\n    // Normalize byteOffset\n    if (typeof byteOffset === 'string') {\n        encoding = byteOffset\n        byteOffset = 0\n    } else if (byteOffset > 0x7fffffff) {\n        byteOffset = 0x7fffffff\n    } else if (byteOffset < -0x80000000) {\n        byteOffset = -0x80000000\n    }\n    byteOffset = +byteOffset // Coerce to Number.\n    if (isNaN(byteOffset)) {\n        // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n        byteOffset = dir ? 0 : buffer.length - 1\n    }\n\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1\n        else byteOffset = buffer.length - 1\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0\n        else return -1\n    }\n\n    // Normalize val\n    if (typeof val === 'string') {\n        val = Buffer.from(val, encoding)\n    }\n\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if (internalIsBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) {\n            return -1\n        }\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n    } else if (typeof val === 'number') {\n        val = val & 0xff // Search for a byte value [0-255]\n        if (\n            Buffer.TYPED_ARRAY_SUPPORT &&\n            typeof Uint8Array.prototype.indexOf === 'function'\n        ) {\n            if (dir) {\n                return Uint8Array.prototype.indexOf.call(\n                    buffer,\n                    val,\n                    byteOffset,\n                )\n            } else {\n                return Uint8Array.prototype.lastIndexOf.call(\n                    buffer,\n                    val,\n                    byteOffset,\n                )\n            }\n        }\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n    }\n\n    throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1\n    var arrLength = arr.length\n    var valLength = val.length\n\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase()\n        if (\n            encoding === 'ucs2' ||\n            encoding === 'ucs-2' ||\n            encoding === 'utf16le' ||\n            encoding === 'utf-16le'\n        ) {\n            if (arr.length < 2 || val.length < 2) {\n                return -1\n            }\n            indexSize = 2\n            arrLength /= 2\n            valLength /= 2\n            byteOffset /= 2\n        }\n    }\n\n    function read(buf, i) {\n        if (indexSize === 1) {\n            return buf[i]\n        } else {\n            return buf.readUInt16BE(i * indexSize)\n        }\n    }\n\n    var i\n    if (dir) {\n        var foundIndex = -1\n        for (i = byteOffset; i < arrLength; i++) {\n            if (\n                read(arr, i) ===\n                read(val, foundIndex === -1 ? 0 : i - foundIndex)\n            ) {\n                if (foundIndex === -1) foundIndex = i\n                if (i - foundIndex + 1 === valLength)\n                    return foundIndex * indexSize\n            } else {\n                if (foundIndex !== -1) i -= i - foundIndex\n                foundIndex = -1\n            }\n        }\n    } else {\n        if (byteOffset + valLength > arrLength)\n            byteOffset = arrLength - valLength\n        for (i = byteOffset; i >= 0; i--) {\n            var found = true\n            for (var j = 0; j < valLength; j++) {\n                if (read(arr, i + j) !== read(val, j)) {\n                    found = false\n                    break\n                }\n            }\n            if (found) return i\n        }\n    }\n\n    return -1\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0\n    var remaining = buf.length - offset\n    if (!length) {\n        length = remaining\n    } else {\n        length = Number(length)\n        if (length > remaining) {\n            length = remaining\n        }\n    }\n\n    // must be an even number of digits\n    var strLen = string.length\n    if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n    if (length > strLen / 2) {\n        length = strLen / 2\n    }\n    for (var i = 0; i < length; ++i) {\n        var parsed = parseInt(string.substr(i * 2, 2), 16)\n        if (isNaN(parsed)) return i\n        buf[offset + i] = parsed\n    }\n    return i\n}\n\nfunction utf8Write(buf, string, offset, length) {\n    return blitBuffer(\n        utf8ToBytes(string, buf.length - offset),\n        buf,\n        offset,\n        length,\n    )\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write(buf, string, offset, length) {\n    return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n    return blitBuffer(\n        utf16leToBytes(string, buf.length - offset),\n        buf,\n        offset,\n        length,\n    )\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = 'utf8'\n        length = this.length\n        offset = 0\n        // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset\n        length = this.length\n        offset = 0\n        // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset | 0\n        if (isFinite(length)) {\n            length = length | 0\n            if (encoding === undefined) encoding = 'utf8'\n        } else {\n            encoding = length\n            length = undefined\n        }\n        // legacy write(string, encoding, offset, length) - remove in v0.13\n    } else {\n        throw new Error(\n            'Buffer.write(string, encoding, offset[, length]) is no longer supported',\n        )\n    }\n\n    var remaining = this.length - offset\n    if (length === undefined || length > remaining) length = remaining\n\n    if (\n        (string.length > 0 && (length < 0 || offset < 0)) ||\n        offset > this.length\n    ) {\n        throw new RangeError('Attempt to write outside buffer bounds')\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    var loweredCase = false\n    for (;;) {\n        switch (encoding) {\n            case 'hex':\n                return hexWrite(this, string, offset, length)\n\n            case 'utf8':\n            case 'utf-8':\n                return utf8Write(this, string, offset, length)\n\n            case 'ascii':\n                return asciiWrite(this, string, offset, length)\n\n            case 'latin1':\n            case 'binary':\n                return latin1Write(this, string, offset, length)\n\n            case 'base64':\n                // Warning: maxLength not taken into account in base64Write\n                return base64Write(this, string, offset, length)\n\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n                return ucs2Write(this, string, offset, length)\n\n            default:\n                if (loweredCase)\n                    throw new TypeError('Unknown encoding: ' + encoding)\n                encoding = ('' + encoding).toLowerCase()\n                loweredCase = true\n        }\n    }\n}\n\nBuffer.prototype.toJSON = function toJSON() {\n    return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0),\n    }\n}\n\nfunction base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n        return base64fromByteArray(buf)\n    } else {\n        return base64fromByteArray(buf.slice(start, end))\n    }\n}\n\nfunction utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end)\n    var res = []\n\n    var i = start\n    while (i < end) {\n        var firstByte = buf[i]\n        var codePoint = null\n        var bytesPerSequence =\n            firstByte > 0xef\n                ? 4\n                : firstByte > 0xdf\n                ? 3\n                : firstByte > 0xbf\n                ? 2\n                : 1\n\n        if (i + bytesPerSequence <= end) {\n            var secondByte, thirdByte, fourthByte, tempCodePoint\n\n            switch (bytesPerSequence) {\n                case 1:\n                    if (firstByte < 0x80) {\n                        codePoint = firstByte\n                    }\n                    break\n                case 2:\n                    secondByte = buf[i + 1]\n                    if ((secondByte & 0xc0) === 0x80) {\n                        tempCodePoint =\n                            ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f)\n                        if (tempCodePoint > 0x7f) {\n                            codePoint = tempCodePoint\n                        }\n                    }\n                    break\n                case 3:\n                    secondByte = buf[i + 1]\n                    thirdByte = buf[i + 2]\n                    if (\n                        (secondByte & 0xc0) === 0x80 &&\n                        (thirdByte & 0xc0) === 0x80\n                    ) {\n                        tempCodePoint =\n                            ((firstByte & 0xf) << 0xc) |\n                            ((secondByte & 0x3f) << 0x6) |\n                            (thirdByte & 0x3f)\n                        if (\n                            tempCodePoint > 0x7ff &&\n                            (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)\n                        ) {\n                            codePoint = tempCodePoint\n                        }\n                    }\n                    break\n                case 4:\n                    secondByte = buf[i + 1]\n                    thirdByte = buf[i + 2]\n                    fourthByte = buf[i + 3]\n                    if (\n                        (secondByte & 0xc0) === 0x80 &&\n                        (thirdByte & 0xc0) === 0x80 &&\n                        (fourthByte & 0xc0) === 0x80\n                    ) {\n                        tempCodePoint =\n                            ((firstByte & 0xf) << 0x12) |\n                            ((secondByte & 0x3f) << 0xc) |\n                            ((thirdByte & 0x3f) << 0x6) |\n                            (fourthByte & 0x3f)\n                        if (\n                            tempCodePoint > 0xffff &&\n                            tempCodePoint < 0x110000\n                        ) {\n                            codePoint = tempCodePoint\n                        }\n                    }\n            }\n        }\n\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xfffd\n            bytesPerSequence = 1\n        } else if (codePoint > 0xffff) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000\n            res.push(((codePoint >>> 10) & 0x3ff) | 0xd800)\n            codePoint = 0xdc00 | (codePoint & 0x3ff)\n        }\n\n        res.push(codePoint)\n        i += bytesPerSequence\n    }\n\n    return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray(codePoints) {\n    var len = codePoints.length\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    }\n\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    var res = ''\n    var i = 0\n    while (i < len) {\n        res += String.fromCharCode.apply(\n            String,\n            codePoints.slice(i, (i += MAX_ARGUMENTS_LENGTH)),\n        )\n    }\n    return res\n}\n\nfunction asciiSlice(buf, start, end) {\n    var ret = ''\n    end = Math.min(buf.length, end)\n\n    for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 0x7f)\n    }\n    return ret\n}\n\nfunction latin1Slice(buf, start, end) {\n    var ret = ''\n    end = Math.min(buf.length, end)\n\n    for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i])\n    }\n    return ret\n}\n\nfunction hexSlice(buf, start, end) {\n    var len = buf.length\n\n    if (!start || start < 0) start = 0\n    if (!end || end < 0 || end > len) end = len\n\n    var out = ''\n    for (var i = start; i < end; ++i) {\n        out += toHex(buf[i])\n    }\n    return out\n}\n\nfunction utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end)\n    var res = ''\n    for (var i = 0; i < bytes.length; i += 2) {\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n    }\n    return res\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n    var len = this.length\n    start = ~~start\n    end = end === undefined ? len : ~~end\n\n    if (start < 0) {\n        start += len\n        if (start < 0) start = 0\n    } else if (start > len) {\n        start = len\n    }\n\n    if (end < 0) {\n        end += len\n        if (end < 0) end = 0\n    } else if (end > len) {\n        end = len\n    }\n\n    if (end < start) end = start\n\n    var newBuf\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end)\n        newBuf.__proto__ = Buffer.prototype\n    } else {\n        var sliceLen = end - start\n        newBuf = new Buffer(sliceLen, undefined)\n        for (var i = 0; i < sliceLen; ++i) {\n            newBuf[i] = this[i + start]\n        }\n    }\n\n    return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0)\n        throw new RangeError('offset is not uint')\n    if (offset + ext > length)\n        throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(\n    offset,\n    byteLength,\n    noAssert,\n) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n    var val = this[offset]\n    var mul = 1\n    var i = 0\n    while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul\n    }\n\n    return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE(\n    offset,\n    byteLength,\n    noAssert,\n) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) {\n        checkOffset(offset, byteLength, this.length)\n    }\n\n    var val = this[offset + --byteLength]\n    var mul = 1\n    while (byteLength > 0 && (mul *= 0x100)) {\n        val += this[offset + --byteLength] * mul\n    }\n\n    return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 1, this.length)\n    return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        (this[offset] | (this[offset + 1] << 8) | (this[offset + 2] << 16)) +\n        this[offset + 3] * 0x1000000\n    )\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        this[offset] * 0x1000000 +\n        ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3])\n    )\n}\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n    var val = this[offset]\n    var mul = 1\n    var i = 0\n    while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul\n    }\n    mul *= 0x80\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n    return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n    var i = byteLength\n    var mul = 1\n    var val = this[offset + --i]\n    while (i > 0 && (mul *= 0x100)) {\n        val += this[offset + --i] * mul\n    }\n    mul *= 0x80\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n    return val\n}\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 1, this.length)\n    if (!(this[offset] & 0x80)) return this[offset]\n    return (0xff - this[offset] + 1) * -1\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    var val = this[offset] | (this[offset + 1] << 8)\n    return val & 0x8000 ? val | 0xffff0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    var val = this[offset + 1] | (this[offset] << 8)\n    return val & 0x8000 ? val | 0xffff0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        this[offset] |\n        (this[offset + 1] << 8) |\n        (this[offset + 2] << 16) |\n        (this[offset + 3] << 24)\n    )\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        (this[offset] << 24) |\n        (this[offset + 1] << 16) |\n        (this[offset + 2] << 8) |\n        this[offset + 3]\n    )\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n    return ieee754read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n    return ieee754read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 8, this.length)\n    return ieee754read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 8, this.length)\n    return ieee754read(this, offset, false, 52, 8)\n}\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n    if (!internalIsBuffer(buf))\n        throw new TypeError('\"buffer\" argument must be a Buffer instance')\n    if (value > max || value < min)\n        throw new RangeError('\"value\" argument is out of bounds')\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1\n        checkInt(this, value, offset, byteLength, maxBytes, 0)\n    }\n\n    var mul = 1\n    var i = 0\n    this[offset] = value & 0xff\n    while (++i < byteLength && (mul *= 0x100)) {\n        this[offset + i] = (value / mul) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1\n        checkInt(this, value, offset, byteLength, maxBytes, 0)\n    }\n\n    var i = byteLength - 1\n    var mul = 1\n    this[offset + i] = value & 0xff\n    while (--i >= 0 && (mul *= 0x100)) {\n        this[offset + i] = (value / mul) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n    this[offset] = value & 0xff\n    return offset + 1\n}\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffff + value + 1\n    for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n        buf[offset + i] =\n            (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n            ((littleEndian ? i : 1 - i) * 8)\n    }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff\n        this[offset + 1] = value >>> 8\n    } else {\n        objectWriteUInt16(this, value, offset, true)\n    }\n    return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8\n        this[offset + 1] = value & 0xff\n    } else {\n        objectWriteUInt16(this, value, offset, false)\n    }\n    return offset + 2\n}\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffffffff + value + 1\n    for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n        buf[offset + i] = (value >>> ((littleEndian ? i : 3 - i) * 8)) & 0xff\n    }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset + 3] = value >>> 24\n        this[offset + 2] = value >>> 16\n        this[offset + 1] = value >>> 8\n        this[offset] = value & 0xff\n    } else {\n        objectWriteUInt32(this, value, offset, true)\n    }\n    return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24\n        this[offset + 1] = value >>> 16\n        this[offset + 2] = value >>> 8\n        this[offset + 3] = value & 0xff\n    } else {\n        objectWriteUInt32(this, value, offset, false)\n    }\n    return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1)\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit)\n    }\n\n    var i = 0\n    var mul = 1\n    var sub = 0\n    this[offset] = value & 0xff\n    while (++i < byteLength && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n            sub = 1\n        }\n        this[offset + i] = (((value / mul) >> 0) - sub) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1)\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit)\n    }\n\n    var i = byteLength - 1\n    var mul = 1\n    var sub = 0\n    this[offset + i] = value & 0xff\n    while (--i >= 0 && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n            sub = 1\n        }\n        this[offset + i] = (((value / mul) >> 0) - sub) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n    if (value < 0) value = 0xff + value + 1\n    this[offset] = value & 0xff\n    return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff\n        this[offset + 1] = value >>> 8\n    } else {\n        objectWriteUInt16(this, value, offset, true)\n    }\n    return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8\n        this[offset + 1] = value & 0xff\n    } else {\n        objectWriteUInt16(this, value, offset, false)\n    }\n    return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff\n        this[offset + 1] = value >>> 8\n        this[offset + 2] = value >>> 16\n        this[offset + 3] = value >>> 24\n    } else {\n        objectWriteUInt32(this, value, offset, true)\n    }\n    return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n    if (value < 0) value = 0xffffffff + value + 1\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24\n        this[offset + 1] = value >>> 16\n        this[offset + 2] = value >>> 8\n        this[offset + 3] = value & 0xff\n    } else {\n        objectWriteUInt32(this, value, offset, false)\n    }\n    return offset + 4\n}\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n    if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n        checkIEEE754(\n            buf,\n            value,\n            offset,\n            4,\n            3.4028234663852886e38,\n            -3.4028234663852886e38,\n        )\n    }\n    ieee754write(buf, value, offset, littleEndian, 23, 4)\n    return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n        checkIEEE754(\n            buf,\n            value,\n            offset,\n            8,\n            1.7976931348623157e308,\n            -1.7976931348623157e308,\n        )\n    }\n    ieee754write(buf, value, offset, littleEndian, 52, 8)\n    return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(\n    value,\n    offset,\n    noAssert,\n) {\n    return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(\n    value,\n    offset,\n    noAssert,\n) {\n    return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!start) start = 0\n    if (!end && end !== 0) end = this.length\n    if (targetStart >= target.length) targetStart = target.length\n    if (!targetStart) targetStart = 0\n    if (end > 0 && end < start) end = start\n\n    // Copy 0 bytes; we're done\n    if (end === start) return 0\n    if (target.length === 0 || this.length === 0) return 0\n\n    // Fatal error conditions\n    if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds')\n    }\n    if (start < 0 || start >= this.length)\n        throw new RangeError('sourceStart out of bounds')\n    if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n    // Are we oob?\n    if (end > this.length) end = this.length\n    if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start\n    }\n\n    var len = end - start\n    var i\n\n    if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n            target[i + targetStart] = this[i + start]\n        }\n    } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n            target[i + targetStart] = this[i + start]\n        }\n    } else {\n        Uint8Array.prototype.set.call(\n            target,\n            this.subarray(start, start + len),\n            targetStart,\n        )\n    }\n\n    return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n        if (typeof start === 'string') {\n            encoding = start\n            start = 0\n            end = this.length\n        } else if (typeof end === 'string') {\n            encoding = end\n            end = this.length\n        }\n        if (val.length === 1) {\n            var code = val.charCodeAt(0)\n            if (code < 256) {\n                val = code\n            }\n        }\n        if (encoding !== undefined && typeof encoding !== 'string') {\n            throw new TypeError('encoding must be a string')\n        }\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n            throw new TypeError('Unknown encoding: ' + encoding)\n        }\n    } else if (typeof val === 'number') {\n        val = val & 255\n    }\n\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index')\n    }\n\n    if (end <= start) {\n        return this\n    }\n\n    start = start >>> 0\n    end = end === undefined ? this.length : end >>> 0\n\n    if (!val) val = 0\n\n    var i\n    if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n            this[i] = val\n        }\n    } else {\n        var bytes = internalIsBuffer(val)\n            ? val\n            : utf8ToBytes(new Buffer(val, encoding).toString())\n        var len = bytes.length\n        for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len]\n        }\n    }\n\n    return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean(str) {\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return ''\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while (str.length % 4 !== 0) {\n        str = str + '='\n    }\n    return str\n}\n\nfunction stringtrim(str) {\n    if (str.trim) return str.trim()\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex(n) {\n    if (n < 16) return '0' + n.toString(16)\n    return n.toString(16)\n}\n\nfunction utf8ToBytes(string, units) {\n    units = units || Infinity\n    var codePoint\n    var length = string.length\n    var leadSurrogate = null\n    var bytes = []\n\n    for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i)\n\n        // is surrogate component\n        if (codePoint > 0xd7ff && codePoint < 0xe000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xdbff) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n                    continue\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n                    continue\n                }\n\n                // valid lead\n                leadSurrogate = codePoint\n\n                continue\n            }\n\n            // 2 leads in a row\n            if (codePoint < 0xdc00) {\n                if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n                leadSurrogate = codePoint\n                continue\n            }\n\n            // valid surrogate pair\n            codePoint =\n                (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) +\n                0x10000\n        } else if (leadSurrogate) {\n            // valid bmp char, but last char was a lead\n            if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n        }\n\n        leadSurrogate = null\n\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break\n            bytes.push(codePoint)\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break\n            bytes.push((codePoint >> 0x6) | 0xc0, (codePoint & 0x3f) | 0x80)\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break\n            bytes.push(\n                (codePoint >> 0xc) | 0xe0,\n                ((codePoint >> 0x6) & 0x3f) | 0x80,\n                (codePoint & 0x3f) | 0x80,\n            )\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break\n            bytes.push(\n                (codePoint >> 0x12) | 0xf0,\n                ((codePoint >> 0xc) & 0x3f) | 0x80,\n                ((codePoint >> 0x6) & 0x3f) | 0x80,\n                (codePoint & 0x3f) | 0x80,\n            )\n        } else {\n            throw new Error('Invalid code point')\n        }\n    }\n\n    return bytes\n}\n\nfunction asciiToBytes(str) {\n    var byteArray = []\n    for (var i = 0; i < str.length; ++i) {\n        // Node's code seems to be doing this and not & 0x7F..\n        byteArray.push(str.charCodeAt(i) & 0xff)\n    }\n    return byteArray\n}\n\nfunction utf16leToBytes(str, units) {\n    var c, hi, lo\n    var byteArray = []\n    for (var i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0) break\n\n        c = str.charCodeAt(i)\n        hi = c >> 8\n        lo = c % 256\n        byteArray.push(lo)\n        byteArray.push(hi)\n    }\n\n    return byteArray\n}\n\nfunction base64ToBytes(str) {\n    return base64toByteArray(base64clean(str))\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length) break\n        dst[i + offset] = src[i]\n    }\n    return i\n}\n\nfunction isnan(val) {\n    return val !== val // eslint-disable-line no-self-compare\n}\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n    return (\n        obj != null &&\n        (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n    )\n}\n\nfunction isFastBuffer(obj) {\n    return (\n        !!obj.constructor &&\n        typeof obj.constructor.isBuffer === 'function' &&\n        obj.constructor.isBuffer(obj)\n    )\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj) {\n    return (\n        typeof obj.readFloatLE === 'function' &&\n        typeof obj.slice === 'function' &&\n        isFastBuffer(obj.slice(0, 0))\n    )\n}\n\nfunction ieee754read(buffer, offset, isLE, mLen, nBytes) {\n    var e, m\n    var eLen = nBytes * 8 - mLen - 1\n    var eMax = (1 << eLen) - 1\n    var eBias = eMax >> 1\n    var nBits = -7\n    var i = isLE ? nBytes - 1 : 0\n    var d = isLE ? -1 : 1\n    var s = buffer[offset + i]\n\n    i += d\n\n    e = s & ((1 << -nBits) - 1)\n    s >>= -nBits\n    nBits += eLen\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    m = e & ((1 << -nBits) - 1)\n    e >>= -nBits\n    nBits += mLen\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    if (e === 0) {\n        e = 1 - eBias\n    } else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity\n    } else {\n        m = m + Math.pow(2, mLen)\n        e = e - eBias\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction ieee754write(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c\n    var eLen = nBytes * 8 - mLen - 1\n    var eMax = (1 << eLen) - 1\n    var eBias = eMax >> 1\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0\n    var i = isLE ? 0 : nBytes - 1\n    var d = isLE ? 1 : -1\n    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n    value = Math.abs(value)\n\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0\n        e = eMax\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2)\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--\n            c *= 2\n        }\n        if (e + eBias >= 1) {\n            value += rt / c\n        } else {\n            value += rt * Math.pow(2, 1 - eBias)\n        }\n        if (value * c >= 2) {\n            e++\n            c /= 2\n        }\n\n        if (e + eBias >= eMax) {\n            m = 0\n            e = eMax\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen)\n            e = e + eBias\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n            e = 0\n        }\n    }\n\n    for (\n        ;\n        mLen >= 8;\n        buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8\n    ) {}\n\n    e = (e << mLen) | m\n    eLen += mLen\n    for (\n        ;\n        eLen > 0;\n        buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8\n    ) {}\n\n    buffer[offset + i - d] |= s * 128\n}\n", "export { Buffer } from '_node-buffer-polyfill_.js'\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n", "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "import assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assert.hash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, (i) => {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", "const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n", "\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.testnet = exports.regtest = exports.bitcoin = void 0;\nexports.bitcoin = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bc',\n  bip32: {\n    public: 0x0488b21e,\n    private: 0x0488ade4,\n  },\n  pubKeyHash: 0x00,\n  scriptHash: 0x05,\n  wif: 0x80,\n};\nexports.regtest = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'bcrt',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\nexports.testnet = {\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n',\n  bech32: 'tb',\n  bip32: {\n    public: 0x043587cf,\n    private: 0x04358394,\n  },\n  pubKeyHash: 0x6f,\n  scriptHash: 0xc4,\n  wif: 0xef,\n};\n", "'use strict';\n// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = exports.check = void 0;\nfunction check(buffer) {\n  if (buffer.length < 8) return false;\n  if (buffer.length > 72) return false;\n  if (buffer[0] !== 0x30) return false;\n  if (buffer[1] !== buffer.length - 2) return false;\n  if (buffer[2] !== 0x02) return false;\n  const lenR = buffer[3];\n  if (lenR === 0) return false;\n  if (5 + lenR >= buffer.length) return false;\n  if (buffer[4 + lenR] !== 0x02) return false;\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) return false;\n  if (6 + lenR + lenS !== buffer.length) return false;\n  if (buffer[4] & 0x80) return false;\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80)) return false;\n  if (buffer[lenR + 6] & 0x80) return false;\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    return false;\n  return true;\n}\nexports.check = check;\nfunction decode(buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short');\n  if (buffer.length > 72) throw new Error('DER sequence length is too long');\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence');\n  if (buffer[1] !== buffer.length - 2)\n    throw new Error('DER sequence length is invalid');\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer');\n  const lenR = buffer[3];\n  if (lenR === 0) throw new Error('R length is zero');\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long');\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)');\n  const lenS = buffer[5 + lenR];\n  if (lenS === 0) throw new Error('S length is zero');\n  if (6 + lenR + lenS !== buffer.length) throw new Error('S length is invalid');\n  if (buffer[4] & 0x80) throw new Error('R value is negative');\n  if (lenR > 1 && buffer[4] === 0x00 && !(buffer[5] & 0x80))\n    throw new Error('R value excessively padded');\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative');\n  if (lenS > 1 && buffer[lenR + 6] === 0x00 && !(buffer[lenR + 7] & 0x80))\n    throw new Error('S value excessively padded');\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR),\n  };\n}\nexports.decode = decode;\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n */\nfunction encode(r, s) {\n  const lenR = r.length;\n  const lenS = s.length;\n  if (lenR === 0) throw new Error('R length is zero');\n  if (lenS === 0) throw new Error('S length is zero');\n  if (lenR > 33) throw new Error('R length is too long');\n  if (lenS > 33) throw new Error('S length is too long');\n  if (r[0] & 0x80) throw new Error('R value is negative');\n  if (s[0] & 0x80) throw new Error('S value is negative');\n  if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80))\n    throw new Error('R value excessively padded');\n  if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80))\n    throw new Error('S value excessively padded');\n  const signature = Buffer.allocUnsafe(6 + lenR + lenS);\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30;\n  signature[1] = signature.length - 2;\n  signature[2] = 0x02;\n  signature[3] = r.length;\n  r.copy(signature, 4);\n  signature[4 + lenR] = 0x02;\n  signature[5 + lenR] = s.length;\n  s.copy(signature, 6 + lenR);\n  return signature;\n}\nexports.encode = encode;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.REVERSE_OPS = exports.OPS = void 0;\nconst OPS = {\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n  OP_WITHIN: 165,\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  OP_NOP3: 178,\n  OP_CHECKSEQUENCEVERIFY: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n  OP_CHECKSIGADD: 186,\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255,\n};\nexports.OPS = OPS;\nconst REVERSE_OPS = {};\nexports.REVERSE_OPS = REVERSE_OPS;\nfor (const op of Object.keys(OPS)) {\n  const code = OPS[op];\n  REVERSE_OPS[code] = op;\n}\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.decode = exports.encode = exports.encodingLength = void 0;\nconst ops_1 = require('./ops');\nfunction encodingLength(i) {\n  return i < ops_1.OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n}\nexports.encodingLength = encodingLength;\nfunction encode(buffer, num, offset) {\n  const size = encodingLength(num);\n  // ~6 bit\n  if (size === 1) {\n    buffer.writeUInt8(num, offset);\n    // 8 bit\n  } else if (size === 2) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA1, offset);\n    buffer.writeUInt8(num, offset + 1);\n    // 16 bit\n  } else if (size === 3) {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA2, offset);\n    buffer.writeUInt16LE(num, offset + 1);\n    // 32 bit\n  } else {\n    buffer.writeUInt8(ops_1.OPS.OP_PUSHDATA4, offset);\n    buffer.writeUInt32LE(num, offset + 1);\n  }\n  return size;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n  const opcode = buffer.readUInt8(offset);\n  let num;\n  let size;\n  // ~6 bit\n  if (opcode < ops_1.OPS.OP_PUSHDATA1) {\n    num = opcode;\n    size = 1;\n    // 8 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA1) {\n    if (offset + 2 > buffer.length) return null;\n    num = buffer.readUInt8(offset + 1);\n    size = 2;\n    // 16 bit\n  } else if (opcode === ops_1.OPS.OP_PUSHDATA2) {\n    if (offset + 3 > buffer.length) return null;\n    num = buffer.readUInt16LE(offset + 1);\n    size = 3;\n    // 32 bit\n  } else {\n    if (offset + 5 > buffer.length) return null;\n    if (opcode !== ops_1.OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n    num = buffer.readUInt32LE(offset + 1);\n    size = 5;\n  }\n  return {\n    opcode,\n    number: num,\n    size,\n  };\n}\nexports.decode = decode;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = void 0;\nfunction decode(buffer, maxLength, minimal) {\n  maxLength = maxLength || 4;\n  minimal = minimal === undefined ? true : minimal;\n  const length = buffer.length;\n  if (length === 0) return 0;\n  if (length > maxLength) throw new TypeError('Script number overflow');\n  if (minimal) {\n    if ((buffer[length - 1] & 0x7f) === 0) {\n      if (length <= 1 || (buffer[length - 2] & 0x80) === 0)\n        throw new Error('Non-minimally encoded script number');\n    }\n  }\n  // 40-bit\n  if (length === 5) {\n    const a = buffer.readUInt32LE(0);\n    const b = buffer.readUInt8(4);\n    if (b & 0x80) return -((b & ~0x80) * 0x100000000 + a);\n    return b * 0x100000000 + a;\n  }\n  // 32-bit / 24-bit / 16-bit / 8-bit\n  let result = 0;\n  for (let i = 0; i < length; ++i) {\n    result |= buffer[i] << (8 * i);\n  }\n  if (buffer[length - 1] & 0x80)\n    return -(result & ~(0x80 << (8 * (length - 1))));\n  return result;\n}\nexports.decode = decode;\nfunction scriptNumSize(i) {\n  return i > 0x7fffffff\n    ? 5\n    : i > 0x7fffff\n    ? 4\n    : i > 0x7fff\n    ? 3\n    : i > 0x7f\n    ? 2\n    : i > 0x00\n    ? 1\n    : 0;\n}\nfunction encode(_number) {\n  let value = Math.abs(_number);\n  const size = scriptNumSize(value);\n  const buffer = Buffer.allocUnsafe(size);\n  const negative = _number < 0;\n  for (let i = 0; i < size; ++i) {\n    buffer.writeUInt8(value & 0xff, i);\n    value >>= 8;\n  }\n  if (buffer[size - 1] & 0x80) {\n    buffer.writeUInt8(negative ? 0x80 : 0x00, size - 1);\n  } else if (negative) {\n    buffer[size - 1] |= 0x80;\n  }\n  return buffer;\n}\nexports.encode = encode;\n", "var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nexport { Buffer, INSPECT_MAX_BYTES, SlowBuffer, isBuffer, _kMaxLength as kMaxLength };\n", "\nconst polyfill = require('buffer')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "var types = {\n  Array: function (value) { return value !== null && value !== undefined && value.constructor === Array },\n  Boolean: function (value) { return typeof value === 'boolean' },\n  Function: function (value) { return typeof value === 'function' },\n  Nil: function (value) { return value === undefined || value === null },\n  Number: function (value) { return typeof value === 'number' },\n  Object: function (value) { return typeof value === 'object' },\n  String: function (value) { return typeof value === 'string' },\n  '': function () { return true }\n}\n\n// TODO: deprecate\ntypes.Null = types.Nil\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t\n  }.bind(null, typeName)\n}\n\nmodule.exports = types\n", "var native = require('./native')\n\nfunction getTypeName (fn) {\n  return fn.name || fn.toString().match(/function (.*?)\\s*\\(/)[1]\n}\n\nfunction getValueTypeName (value) {\n  return native.Nil(value) ? '' : getTypeName(value.constructor)\n}\n\nfunction getValue (value) {\n  if (native.Function(value)) return ''\n  if (native.String(value)) return JSON.stringify(value)\n  if (value && native.Object(value)) return ''\n  return value\n}\n\nfunction captureStackTrace (e, t) {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(e, t)\n  }\n}\n\nfunction tfJSON (type) {\n  if (native.Function(type)) return type.toJSON ? type.toJSON() : getTypeName(type)\n  if (native.Array(type)) return 'Array'\n  if (type && native.Object(type)) return 'Object'\n\n  return type !== undefined ? type : ''\n}\n\nfunction tfErrorString (type, value, valueTypeName) {\n  var valueJson = getValue(value)\n\n  return 'Expected ' + tfJSON(type) + ', got' +\n    (valueTypeName !== '' ? ' ' + valueTypeName : '') +\n    (valueJson !== '' ? ' ' + valueJson : '')\n}\n\nfunction TfTypeError (type, value, valueTypeName) {\n  valueTypeName = valueTypeName || getValueTypeName(value)\n  this.message = tfErrorString(type, value, valueTypeName)\n\n  captureStackTrace(this, TfTypeError)\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfTypeError.prototype = Object.create(Error.prototype)\nTfTypeError.prototype.constructor = TfTypeError\n\nfunction tfPropertyErrorString (type, label, name, value, valueTypeName) {\n  var description = '\" of type '\n  if (label === 'key') description = '\" with key type '\n\n  return tfErrorString('property \"' + tfJSON(name) + description + tfJSON(type), value, valueTypeName)\n}\n\nfunction TfPropertyTypeError (type, property, label, value, valueTypeName) {\n  if (type) {\n    valueTypeName = valueTypeName || getValueTypeName(value)\n    this.message = tfPropertyErrorString(type, label, property, value, valueTypeName)\n  } else {\n    this.message = 'Unexpected property \"' + property + '\"'\n  }\n\n  captureStackTrace(this, TfTypeError)\n  this.__label = label\n  this.__property = property\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfPropertyTypeError.prototype = Object.create(Error.prototype)\nTfPropertyTypeError.prototype.constructor = TfTypeError\n\nfunction tfCustomError (expected, actual) {\n  return new TfTypeError(expected, {}, actual)\n}\n\nfunction tfSubError (e, property, label) {\n  // sub child?\n  if (e instanceof TfPropertyTypeError) {\n    property = property + '.' + e.__property\n\n    e = new TfPropertyTypeError(\n      e.__type, property, e.__label, e.__value, e.__valueTypeName\n    )\n\n  // child?\n  } else if (e instanceof TfTypeError) {\n    e = new TfPropertyTypeError(\n      e.__type, property, label, e.__value, e.__valueTypeName\n    )\n  }\n\n  captureStackTrace(e)\n  return e\n}\n\nmodule.exports = {\n  TfTypeError: TfTypeError,\n  TfPropertyTypeError: TfPropertyTypeError,\n  tfCustomError: tfCustomError,\n  tfSubError: tfSubError,\n  tfJSON: tfJSON,\n  getValueTypeName: getValueTypeName\n}\n", "var NATIVE = require('./native')\nvar ERRORS = require('./errors')\n\nfunction _Buffer (value) {\n  return Buffer.isBuffer(value)\n}\n\nfunction Hex (value) {\n  return typeof value === 'string' && /^([0-9a-f]{2})+$/i.test(value)\n}\n\nfunction _LengthN (type, length) {\n  var name = type.toJSON()\n\n  function Length (value) {\n    if (!type(value)) return false\n    if (value.length === length) return true\n\n    throw ERRORS.tfCustomError(name + '(Length: ' + length + ')', name + '(Length: ' + value.length + ')')\n  }\n  Length.toJSON = function () { return name }\n\n  return Length\n}\n\nvar _ArrayN = _LengthN.bind(null, NATIVE.Array)\nvar _BufferN = _LengthN.bind(null, _Buffer)\nvar _HexN = _LengthN.bind(null, Hex)\nvar _StringN = _LengthN.bind(null, NATIVE.String)\n\nfunction Range (a, b, f) {\n  f = f || NATIVE.Number\n  function _range (value, strict) {\n    return f(value, strict) && (value > a) && (value < b)\n  }\n  _range.toJSON = function () {\n    return `${f.toJSON()} between [${a}, ${b}]`\n  }\n  return _range\n}\n\nvar INT53_MAX = Math.pow(2, 53) - 1\n\nfunction Finite (value) {\n  return typeof value === 'number' && isFinite(value)\n}\nfunction Int8 (value) { return ((value << 24) >> 24) === value }\nfunction Int16 (value) { return ((value << 16) >> 16) === value }\nfunction Int32 (value) { return (value | 0) === value }\nfunction Int53 (value) {\n  return typeof value === 'number' &&\n    value >= -INT53_MAX &&\n    value <= INT53_MAX &&\n    Math.floor(value) === value\n}\nfunction UInt8 (value) { return (value & 0xff) === value }\nfunction UInt16 (value) { return (value & 0xffff) === value }\nfunction UInt32 (value) { return (value >>> 0) === value }\nfunction UInt53 (value) {\n  return typeof value === 'number' &&\n    value >= 0 &&\n    value <= INT53_MAX &&\n    Math.floor(value) === value\n}\n\nvar types = {\n  ArrayN: _ArrayN,\n  Buffer: _Buffer,\n  BufferN: _BufferN,\n  Finite: Finite,\n  Hex: Hex,\n  HexN: _HexN,\n  Int8: Int8,\n  Int16: Int16,\n  Int32: Int32,\n  Int53: Int53,\n  Range: Range,\n  StringN: _StringN,\n  UInt8: UInt8,\n  UInt16: UInt16,\n  UInt32: UInt32,\n  UInt53: UInt53\n}\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t\n  }.bind(null, typeName)\n}\n\nmodule.exports = types\n", "var ERRORS = require('./errors')\nvar NATIVE = require('./native')\n\n// short-hand\nvar tfJSON = ERRORS.tfJSON\nvar TfTypeError = ERRORS.TfTypeError\nvar TfPropertyTypeError = ERRORS.TfPropertyTypeError\nvar tfSubError = ERRORS.tfSubError\nvar getValueTypeName = ERRORS.getValueTypeName\n\nvar TYPES = {\n  arrayOf: function arrayOf (type, options) {\n    type = compile(type)\n    options = options || {}\n\n    function _arrayOf (array, strict) {\n      if (!NATIVE.Array(array)) return false\n      if (NATIVE.Nil(array)) return false\n      if (options.minLength !== undefined && array.length < options.minLength) return false\n      if (options.maxLength !== undefined && array.length > options.maxLength) return false\n      if (options.length !== undefined && array.length !== options.length) return false\n\n      return array.every(function (value, i) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _arrayOf.toJSON = function () {\n      var str = '[' + tfJSON(type) + ']'\n      if (options.length !== undefined) {\n        str += '{' + options.length + '}'\n      } else if (options.minLength !== undefined || options.maxLength !== undefined) {\n        str += '{' +\n          (options.minLength === undefined ? 0 : options.minLength) + ',' +\n          (options.maxLength === undefined ? Infinity : options.maxLength) + '}'\n      }\n      return str\n    }\n\n    return _arrayOf\n  },\n\n  maybe: function maybe (type) {\n    type = compile(type)\n\n    function _maybe (value, strict) {\n      return NATIVE.Nil(value) || type(value, strict, maybe)\n    }\n    _maybe.toJSON = function () { return '?' + tfJSON(type) }\n\n    return _maybe\n  },\n\n  map: function map (propertyType, propertyKeyType) {\n    propertyType = compile(propertyType)\n    if (propertyKeyType) propertyKeyType = compile(propertyKeyType)\n\n    function _map (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      for (var propertyName in value) {\n        try {\n          if (propertyKeyType) {\n            typeforce(propertyKeyType, propertyName, strict)\n          }\n        } catch (e) {\n          throw tfSubError(e, propertyName, 'key')\n        }\n\n        try {\n          var propertyValue = value[propertyName]\n          typeforce(propertyType, propertyValue, strict)\n        } catch (e) {\n          throw tfSubError(e, propertyName)\n        }\n      }\n\n      return true\n    }\n\n    if (propertyKeyType) {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyKeyType) + ': ' + tfJSON(propertyType) + '}'\n      }\n    } else {\n      _map.toJSON = function () { return '{' + tfJSON(propertyType) + '}' }\n    }\n\n    return _map\n  },\n\n  object: function object (uncompiled) {\n    var type = {}\n\n    for (var typePropertyName in uncompiled) {\n      type[typePropertyName] = compile(uncompiled[typePropertyName])\n    }\n\n    function _object (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      var propertyName\n\n      try {\n        for (propertyName in type) {\n          var propertyType = type[propertyName]\n          var propertyValue = value[propertyName]\n\n          typeforce(propertyType, propertyValue, strict)\n        }\n      } catch (e) {\n        throw tfSubError(e, propertyName)\n      }\n\n      if (strict) {\n        for (propertyName in value) {\n          if (type[propertyName]) continue\n\n          throw new TfPropertyTypeError(undefined, propertyName)\n        }\n      }\n\n      return true\n    }\n    _object.toJSON = function () { return tfJSON(type) }\n\n    return _object\n  },\n\n  anyOf: function anyOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _anyOf (value, strict) {\n      return types.some(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _anyOf.toJSON = function () { return types.map(tfJSON).join('|') }\n\n    return _anyOf\n  },\n\n  allOf: function allOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _allOf (value, strict) {\n      return types.every(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _allOf.toJSON = function () { return types.map(tfJSON).join(' & ') }\n\n    return _allOf\n  },\n\n  quacksLike: function quacksLike (type) {\n    function _quacksLike (value) {\n      return type === getValueTypeName(value)\n    }\n    _quacksLike.toJSON = function () { return type }\n\n    return _quacksLike\n  },\n\n  tuple: function tuple () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _tuple (values, strict) {\n      if (NATIVE.Nil(values)) return false\n      if (NATIVE.Nil(values.length)) return false\n      if (strict && (values.length !== types.length)) return false\n\n      return types.every(function (type, i) {\n        try {\n          return typeforce(type, values[i], strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _tuple.toJSON = function () { return '(' + types.map(tfJSON).join(', ') + ')' }\n\n    return _tuple\n  },\n\n  value: function value (expected) {\n    function _value (actual) {\n      return actual === expected\n    }\n    _value.toJSON = function () { return expected }\n\n    return _value\n  }\n}\n\n// TODO: deprecate\nTYPES.oneOf = TYPES.anyOf\n\nfunction compile (type) {\n  if (NATIVE.String(type)) {\n    if (type[0] === '?') return TYPES.maybe(type.slice(1))\n\n    return NATIVE[type] || TYPES.quacksLike(type)\n  } else if (type && NATIVE.Object(type)) {\n    if (NATIVE.Array(type)) {\n      if (type.length !== 1) throw new TypeError('Expected compile() parameter of type Array of length 1')\n      return TYPES.arrayOf(type[0])\n    }\n\n    return TYPES.object(type)\n  } else if (NATIVE.Function(type)) {\n    return type\n  }\n\n  return TYPES.value(type)\n}\n\nfunction typeforce (type, value, strict, surrogate) {\n  if (NATIVE.Function(type)) {\n    if (type(value, strict)) return true\n\n    throw new TfTypeError(surrogate || type, value)\n  }\n\n  // JIT\n  return typeforce(compile(type), value, strict)\n}\n\n// assign types to typeforce function\nfor (var typeName in NATIVE) {\n  typeforce[typeName] = NATIVE[typeName]\n}\n\nfor (typeName in TYPES) {\n  typeforce[typeName] = TYPES[typeName]\n}\n\nvar EXTRA = require('./extra')\nfor (typeName in EXTRA) {\n  typeforce[typeName] = EXTRA[typeName]\n}\n\ntypeforce.compile = compile\ntypeforce.TfTypeError = TfTypeError\ntypeforce.TfPropertyTypeError = TfPropertyTypeError\n\nmodule.exports = typeforce\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.oneOf =\n  exports.Null =\n  exports.BufferN =\n  exports.Function =\n  exports.UInt32 =\n  exports.UInt8 =\n  exports.tuple =\n  exports.maybe =\n  exports.Hex =\n  exports.Buffer =\n  exports.String =\n  exports.Boolean =\n  exports.Array =\n  exports.Number =\n  exports.Hash256bit =\n  exports.Hash160bit =\n  exports.Buffer256bit =\n  exports.isTaptree =\n  exports.isTapleaf =\n  exports.TAPLEAF_VERSION_MASK =\n  exports.Network =\n  exports.ECPoint =\n  exports.Satoshi =\n  exports.Signer =\n  exports.BIP32Path =\n  exports.UInt31 =\n  exports.isPoint =\n  exports.typeforce =\n    void 0;\nconst buffer_1 = require('buffer');\nexports.typeforce = require('typeforce');\nconst ZERO32 = buffer_1.Buffer.alloc(32, 0);\nconst EC_P = buffer_1.Buffer.from(\n  'fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f',\n  'hex',\n);\nfunction isPoint(p) {\n  if (!buffer_1.Buffer.isBuffer(p)) return false;\n  if (p.length < 33) return false;\n  const t = p[0];\n  const x = p.slice(1, 33);\n  if (x.compare(ZERO32) === 0) return false;\n  if (x.compare(EC_P) >= 0) return false;\n  if ((t === 0x02 || t === 0x03) && p.length === 33) {\n    return true;\n  }\n  const y = p.slice(33);\n  if (y.compare(ZERO32) === 0) return false;\n  if (y.compare(EC_P) >= 0) return false;\n  if (t === 0x04 && p.length === 65) return true;\n  return false;\n}\nexports.isPoint = isPoint;\nconst UINT31_MAX = Math.pow(2, 31) - 1;\nfunction UInt31(value) {\n  return exports.typeforce.UInt32(value) && value <= UINT31_MAX;\n}\nexports.UInt31 = UInt31;\nfunction BIP32Path(value) {\n  return (\n    exports.typeforce.String(value) && !!value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/)\n  );\n}\nexports.BIP32Path = BIP32Path;\nBIP32Path.toJSON = () => {\n  return 'BIP32 derivation path';\n};\nfunction Signer(obj) {\n  return (\n    (exports.typeforce.Buffer(obj.publicKey) ||\n      typeof obj.getPublicKey === 'function') &&\n    typeof obj.sign === 'function'\n  );\n}\nexports.Signer = Signer;\nconst SATOSHI_MAX = 21 * 1e14;\nfunction Satoshi(value) {\n  return exports.typeforce.UInt53(value) && value <= SATOSHI_MAX;\n}\nexports.Satoshi = Satoshi;\n// external dependent types\nexports.ECPoint = exports.typeforce.quacksLike('Point');\n// exposed, external API\nexports.Network = exports.typeforce.compile({\n  messagePrefix: exports.typeforce.oneOf(\n    exports.typeforce.Buffer,\n    exports.typeforce.String,\n  ),\n  bip32: {\n    public: exports.typeforce.UInt32,\n    private: exports.typeforce.UInt32,\n  },\n  pubKeyHash: exports.typeforce.UInt8,\n  scriptHash: exports.typeforce.UInt8,\n  wif: exports.typeforce.UInt8,\n});\nexports.TAPLEAF_VERSION_MASK = 0xfe;\nfunction isTapleaf(o) {\n  if (!o || !('output' in o)) return false;\n  if (!buffer_1.Buffer.isBuffer(o.output)) return false;\n  if (o.version !== undefined)\n    return (o.version & exports.TAPLEAF_VERSION_MASK) === o.version;\n  return true;\n}\nexports.isTapleaf = isTapleaf;\nfunction isTaptree(scriptTree) {\n  if (!(0, exports.Array)(scriptTree)) return isTapleaf(scriptTree);\n  if (scriptTree.length !== 2) return false;\n  return scriptTree.every(t => isTaptree(t));\n}\nexports.isTaptree = isTaptree;\nexports.Buffer256bit = exports.typeforce.BufferN(32);\nexports.Hash160bit = exports.typeforce.BufferN(20);\nexports.Hash256bit = exports.typeforce.BufferN(32);\nexports.Number = exports.typeforce.Number;\nexports.Array = exports.typeforce.Array;\nexports.Boolean = exports.typeforce.Boolean;\nexports.String = exports.typeforce.String;\nexports.Buffer = exports.typeforce.Buffer;\nexports.Hex = exports.typeforce.Hex;\nexports.maybe = exports.typeforce.maybe;\nexports.tuple = exports.typeforce.tuple;\nexports.UInt8 = exports.typeforce.UInt8;\nexports.UInt32 = exports.typeforce.UInt32;\nexports.Function = exports.typeforce.Function;\nexports.BufferN = exports.typeforce.BufferN;\nexports.Null = exports.typeforce.Null;\nexports.oneOf = exports.typeforce.oneOf;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.encode = exports.decode = void 0;\nconst bip66 = require('./bip66');\nconst types = require('./types');\nconst { typeforce } = types;\nconst ZERO = Buffer.alloc(1, 0);\nfunction toDER(x) {\n  let i = 0;\n  while (x[i] === 0) ++i;\n  if (i === x.length) return ZERO;\n  x = x.slice(i);\n  if (x[0] & 0x80) return Buffer.concat([ZERO, x], 1 + x.length);\n  return x;\n}\nfunction fromDER(x) {\n  if (x[0] === 0x00) x = x.slice(1);\n  const buffer = Buffer.alloc(32, 0);\n  const bstart = Math.max(0, 32 - x.length);\n  x.copy(buffer, bstart);\n  return buffer;\n}\n// BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\nfunction decode(buffer) {\n  const hashType = buffer.readUInt8(buffer.length - 1);\n  const hashTypeMod = hashType & ~0x80;\n  if (hashTypeMod <= 0 || hashTypeMod >= 4)\n    throw new Error('Invalid hashType ' + hashType);\n  const decoded = bip66.decode(buffer.slice(0, -1));\n  const r = fromDER(decoded.r);\n  const s = fromDER(decoded.s);\n  const signature = Buffer.concat([r, s], 64);\n  return { signature, hashType };\n}\nexports.decode = decode;\nfunction encode(signature, hashType) {\n  typeforce(\n    {\n      signature: types.BufferN(64),\n      hashType: types.UInt8,\n    },\n    { signature, hashType },\n  );\n  const hashTypeMod = hashType & ~0x80;\n  if (hashTypeMod <= 0 || hashTypeMod >= 4)\n    throw new Error('Invalid hashType ' + hashType);\n  const hashTypeBuffer = Buffer.allocUnsafe(1);\n  hashTypeBuffer.writeUInt8(hashType, 0);\n  const r = toDER(signature.slice(0, 32));\n  const s = toDER(signature.slice(32, 64));\n  return Buffer.concat([bip66.encode(r, s), hashTypeBuffer]);\n}\nexports.encode = encode;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.signature =\n  exports.number =\n  exports.isCanonicalScriptSignature =\n  exports.isDefinedHashType =\n  exports.isCanonicalPubKey =\n  exports.toStack =\n  exports.fromASM =\n  exports.toASM =\n  exports.decompile =\n  exports.compile =\n  exports.isPushOnly =\n  exports.OPS =\n    void 0;\nconst bip66 = require('./bip66');\nconst ops_1 = require('./ops');\nObject.defineProperty(exports, 'OPS', {\n  enumerable: true,\n  get: function () {\n    return ops_1.OPS;\n  },\n});\nconst pushdata = require('./push_data');\nconst scriptNumber = require('./script_number');\nconst scriptSignature = require('./script_signature');\nconst types = require('./types');\nconst { typeforce } = types;\nconst OP_INT_BASE = ops_1.OPS.OP_RESERVED; // OP_1 - 1\nfunction isOPInt(value) {\n  return (\n    types.Number(value) &&\n    (value === ops_1.OPS.OP_0 ||\n      (value >= ops_1.OPS.OP_1 && value <= ops_1.OPS.OP_16) ||\n      value === ops_1.OPS.OP_1NEGATE)\n  );\n}\nfunction isPushOnlyChunk(value) {\n  return types.Buffer(value) || isOPInt(value);\n}\nfunction isPushOnly(value) {\n  return types.Array(value) && value.every(isPushOnlyChunk);\n}\nexports.isPushOnly = isPushOnly;\nfunction asMinimalOP(buffer) {\n  if (buffer.length === 0) return ops_1.OPS.OP_0;\n  if (buffer.length !== 1) return;\n  if (buffer[0] >= 1 && buffer[0] <= 16) return OP_INT_BASE + buffer[0];\n  if (buffer[0] === 0x81) return ops_1.OPS.OP_1NEGATE;\n}\nfunction chunksIsBuffer(buf) {\n  return Buffer.isBuffer(buf);\n}\nfunction chunksIsArray(buf) {\n  return types.Array(buf);\n}\nfunction singleChunkIsBuffer(buf) {\n  return Buffer.isBuffer(buf);\n}\nfunction compile(chunks) {\n  // TODO: remove me\n  if (chunksIsBuffer(chunks)) return chunks;\n  typeforce(types.Array, chunks);\n  const bufferSize = chunks.reduce((accum, chunk) => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      if (chunk.length === 1 && asMinimalOP(chunk) !== undefined) {\n        return accum + 1;\n      }\n      return accum + pushdata.encodingLength(chunk.length) + chunk.length;\n    }\n    // opcode\n    return accum + 1;\n  }, 0.0);\n  const buffer = Buffer.allocUnsafe(bufferSize);\n  let offset = 0;\n  chunks.forEach(chunk => {\n    // data chunk\n    if (singleChunkIsBuffer(chunk)) {\n      // adhere to BIP62.3, minimal push policy\n      const opcode = asMinimalOP(chunk);\n      if (opcode !== undefined) {\n        buffer.writeUInt8(opcode, offset);\n        offset += 1;\n        return;\n      }\n      offset += pushdata.encode(buffer, chunk.length, offset);\n      chunk.copy(buffer, offset);\n      offset += chunk.length;\n      // opcode\n    } else {\n      buffer.writeUInt8(chunk, offset);\n      offset += 1;\n    }\n  });\n  if (offset !== buffer.length) throw new Error('Could not decode chunks');\n  return buffer;\n}\nexports.compile = compile;\nfunction decompile(buffer) {\n  // TODO: remove me\n  if (chunksIsArray(buffer)) return buffer;\n  typeforce(types.Buffer, buffer);\n  const chunks = [];\n  let i = 0;\n  while (i < buffer.length) {\n    const opcode = buffer[i];\n    // data chunk\n    if (opcode > ops_1.OPS.OP_0 && opcode <= ops_1.OPS.OP_PUSHDATA4) {\n      const d = pushdata.decode(buffer, i);\n      // did reading a pushDataInt fail?\n      if (d === null) return null;\n      i += d.size;\n      // attempt to read too much data?\n      if (i + d.number > buffer.length) return null;\n      const data = buffer.slice(i, i + d.number);\n      i += d.number;\n      // decompile minimally\n      const op = asMinimalOP(data);\n      if (op !== undefined) {\n        chunks.push(op);\n      } else {\n        chunks.push(data);\n      }\n      // opcode\n    } else {\n      chunks.push(opcode);\n      i += 1;\n    }\n  }\n  return chunks;\n}\nexports.decompile = decompile;\nfunction toASM(chunks) {\n  if (chunksIsBuffer(chunks)) {\n    chunks = decompile(chunks);\n  }\n  return chunks\n    .map(chunk => {\n      // data?\n      if (singleChunkIsBuffer(chunk)) {\n        const op = asMinimalOP(chunk);\n        if (op === undefined) return chunk.toString('hex');\n        chunk = op;\n      }\n      // opcode!\n      return ops_1.REVERSE_OPS[chunk];\n    })\n    .join(' ');\n}\nexports.toASM = toASM;\nfunction fromASM(asm) {\n  typeforce(types.String, asm);\n  return compile(\n    asm.split(' ').map(chunkStr => {\n      // opcode?\n      if (ops_1.OPS[chunkStr] !== undefined) return ops_1.OPS[chunkStr];\n      typeforce(types.Hex, chunkStr);\n      // data!\n      return Buffer.from(chunkStr, 'hex');\n    }),\n  );\n}\nexports.fromASM = fromASM;\nfunction toStack(chunks) {\n  chunks = decompile(chunks);\n  typeforce(isPushOnly, chunks);\n  return chunks.map(op => {\n    if (singleChunkIsBuffer(op)) return op;\n    if (op === ops_1.OPS.OP_0) return Buffer.allocUnsafe(0);\n    return scriptNumber.encode(op - OP_INT_BASE);\n  });\n}\nexports.toStack = toStack;\nfunction isCanonicalPubKey(buffer) {\n  return types.isPoint(buffer);\n}\nexports.isCanonicalPubKey = isCanonicalPubKey;\nfunction isDefinedHashType(hashType) {\n  const hashTypeMod = hashType & ~0x80;\n  // return hashTypeMod > SIGHASH_ALL && hashTypeMod < SIGHASH_SINGLE\n  return hashTypeMod > 0x00 && hashTypeMod < 0x04;\n}\nexports.isDefinedHashType = isDefinedHashType;\nfunction isCanonicalScriptSignature(buffer) {\n  if (!Buffer.isBuffer(buffer)) return false;\n  if (!isDefinedHashType(buffer[buffer.length - 1])) return false;\n  return bip66.check(buffer.slice(0, -1));\n}\nexports.isCanonicalScriptSignature = isCanonicalScriptSignature;\nexports.number = scriptNumber;\nexports.signature = scriptSignature;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.value = exports.prop = void 0;\nfunction prop(object, name, f) {\n  Object.defineProperty(object, name, {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const _value = f.call(this);\n      this[name] = _value;\n      return _value;\n    },\n    set(_value) {\n      Object.defineProperty(this, name, {\n        configurable: true,\n        enumerable: true,\n        value: _value,\n        writable: true,\n      });\n    },\n  });\n}\nexports.prop = prop;\nfunction value(f) {\n  let _value;\n  return () => {\n    if (_value !== undefined) return _value;\n    _value = f();\n    return _value;\n  };\n}\nexports.value = value;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2data = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// output: OP_RETURN ...\nfunction p2data(a, opts) {\n  if (!a.data && !a.output) throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      data: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'embed', network };\n  lazy.prop(o, 'output', () => {\n    if (!a.data) return;\n    return bscript.compile([OPS.OP_RETURN].concat(a.data));\n  });\n  lazy.prop(o, 'data', () => {\n    if (!a.output) return;\n    return bscript.decompile(a.output).slice(1);\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      const chunks = bscript.decompile(a.output);\n      if (chunks[0] !== OPS.OP_RETURN) throw new TypeError('Output is invalid');\n      if (!chunks.slice(1).every(types_1.typeforce.Buffer))\n        throw new TypeError('Output is invalid');\n      if (a.data && !stacksEqual(a.data, o.data))\n        throw new TypeError('Data mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2data = p2data;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2ms = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\nconst OP_INT_BASE = OPS.OP_RESERVED; // OP_1 - 1\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: OP_0 [signatures ...]\n// output: m [pubKeys ...] n OP_CHECKMULTISIG\nfunction p2ms(a, opts) {\n  if (\n    !a.input &&\n    !a.output &&\n    !(a.pubkeys && a.m !== undefined) &&\n    !a.signatures\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  function isAcceptableSignature(x) {\n    return (\n      bscript.isCanonicalScriptSignature(x) ||\n      (opts.allowIncomplete && x === OPS.OP_0) !== undefined\n    );\n  }\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      m: types_1.typeforce.maybe(types_1.typeforce.Number),\n      n: types_1.typeforce.maybe(types_1.typeforce.Number),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      pubkeys: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.isPoint),\n      ),\n      signatures: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(isAcceptableSignature),\n      ),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const network = a.network || networks_1.bitcoin;\n  const o = { network };\n  let chunks = [];\n  let decoded = false;\n  function decode(output) {\n    if (decoded) return;\n    decoded = true;\n    chunks = bscript.decompile(output);\n    o.m = chunks[0] - OP_INT_BASE;\n    o.n = chunks[chunks.length - 2] - OP_INT_BASE;\n    o.pubkeys = chunks.slice(1, -2);\n  }\n  lazy.prop(o, 'output', () => {\n    if (!a.m) return;\n    if (!o.n) return;\n    if (!a.pubkeys) return;\n    return bscript.compile(\n      [].concat(\n        OP_INT_BASE + a.m,\n        a.pubkeys,\n        OP_INT_BASE + o.n,\n        OPS.OP_CHECKMULTISIG,\n      ),\n    );\n  });\n  lazy.prop(o, 'm', () => {\n    if (!o.output) return;\n    decode(o.output);\n    return o.m;\n  });\n  lazy.prop(o, 'n', () => {\n    if (!o.pubkeys) return;\n    return o.pubkeys.length;\n  });\n  lazy.prop(o, 'pubkeys', () => {\n    if (!a.output) return;\n    decode(a.output);\n    return o.pubkeys;\n  });\n  lazy.prop(o, 'signatures', () => {\n    if (!a.input) return;\n    return bscript.decompile(a.input).slice(1);\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signatures) return;\n    return bscript.compile([OPS.OP_0].concat(a.signatures));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  lazy.prop(o, 'name', () => {\n    if (!o.m || !o.n) return;\n    return `p2ms(${o.m} of ${o.n})`;\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      decode(a.output);\n      if (!types_1.typeforce.Number(chunks[0]))\n        throw new TypeError('Output is invalid');\n      if (!types_1.typeforce.Number(chunks[chunks.length - 2]))\n        throw new TypeError('Output is invalid');\n      if (chunks[chunks.length - 1] !== OPS.OP_CHECKMULTISIG)\n        throw new TypeError('Output is invalid');\n      if (o.m <= 0 || o.n > 16 || o.m > o.n || o.n !== chunks.length - 3)\n        throw new TypeError('Output is invalid');\n      if (!o.pubkeys.every(x => (0, types_1.isPoint)(x)))\n        throw new TypeError('Output is invalid');\n      if (a.m !== undefined && a.m !== o.m) throw new TypeError('m mismatch');\n      if (a.n !== undefined && a.n !== o.n) throw new TypeError('n mismatch');\n      if (a.pubkeys && !stacksEqual(a.pubkeys, o.pubkeys))\n        throw new TypeError('Pubkeys mismatch');\n    }\n    if (a.pubkeys) {\n      if (a.n !== undefined && a.n !== a.pubkeys.length)\n        throw new TypeError('Pubkey count mismatch');\n      o.n = a.pubkeys.length;\n      if (o.n < o.m) throw new TypeError('Pubkey count cannot be less than m');\n    }\n    if (a.signatures) {\n      if (a.signatures.length < o.m)\n        throw new TypeError('Not enough signatures provided');\n      if (a.signatures.length > o.m)\n        throw new TypeError('Too many signatures provided');\n    }\n    if (a.input) {\n      if (a.input[0] !== OPS.OP_0) throw new TypeError('Input is invalid');\n      if (\n        o.signatures.length === 0 ||\n        !o.signatures.every(isAcceptableSignature)\n      )\n        throw new TypeError('Input has invalid signature(s)');\n      if (a.signatures && !stacksEqual(a.signatures, o.signatures))\n        throw new TypeError('Signature mismatch');\n      if (a.m !== undefined && a.m !== a.signatures.length)\n        throw new TypeError('Signature count mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2ms = p2ms;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2pk = void 0;\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst OPS = bscript.OPS;\n// input: {signature}\n// output: {pubKey} OP_CHECKSIG\nfunction p2pk(a, opts) {\n  if (!a.input && !a.output && !a.pubkey && !a.input && !a.signature)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pk', network };\n  lazy.prop(o, 'output', () => {\n    if (!a.pubkey) return;\n    return bscript.compile([a.pubkey, OPS.OP_CHECKSIG]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.output) return;\n    return a.output.slice(1, -1);\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.signature) return;\n    return bscript.compile([a.signature]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    if (a.output) {\n      if (a.output[a.output.length - 1] !== OPS.OP_CHECKSIG)\n        throw new TypeError('Output is invalid');\n      if (!(0, types_1.isPoint)(o.pubkey))\n        throw new TypeError('Output pubkey is invalid');\n      if (a.pubkey && !a.pubkey.equals(o.pubkey))\n        throw new TypeError('Pubkey mismatch');\n    }\n    if (a.signature) {\n      if (a.input && !a.input.equals(o.input))\n        throw new TypeError('Signature mismatch');\n    }\n    if (a.input) {\n      if (_chunks().length !== 1) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(o.signature))\n        throw new TypeError('Input has invalid signature');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pk = p2pk;\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n", "\nconst polyfill = require('events')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "module.exports = require('events').EventEmitter;\n", "// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nexport default browser$1;\nexport { addListener, argv, binding, browser, chdir, config, cwd, emit, env, hrtime, nextTick, off, on, once, platform, release, removeAllListeners, removeListener, title, umask, uptime, version, versions };\n", "\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n", "\nconst polyfill = require('util')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();", "'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};", "'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n", "'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};", "\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}", "// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;", "'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;", "module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};", "// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;", "exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n", "'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n", "'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n", "'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n", "var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n", "/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n", "/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n", "/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n", "/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n", "var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n", "var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n", "var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n", "import {Buffer} from 'buffer';\n\nexport default BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return Buffer.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = Buffer.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport {Buffer} from 'buffer';\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nexport function StringDecoder(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n", "'use strict';\n\n\nReadable.ReadableState = ReadableState;\nimport EventEmitter from 'events';\nimport {inherits, debuglog} from 'util';\nimport BufferList from './buffer-list';\nimport {StringDecoder} from 'string_decoder';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\n\nvar debug = debuglog('stream');\ninherits(Readable, EventEmitter);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event])\n      emitter.on(event, fn);\n    else if (Array.isArray(emitter._events[event]))\n      emitter._events[event].unshift(fn);\n    else\n      emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\nfunction listenerCount (emitter, type) {\n  return emitter.listeners(type).length;\n}\nfunction ReadableState(options, stream) {\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nexport default Readable;\nexport function Readable(options) {\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  EventEmitter.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = Buffer.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false);\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (listenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && src.listeners('data').length) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = EventEmitter.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n", "// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nimport {inherits, deprecate} from 'util';\nimport {Buffer} from 'buffer';\nWritable.WritableState = WritableState;\nimport {EventEmitter} from 'events';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\ninherits(Writable, EventEmitter);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Object.defineProperty(this, 'buffer', {\n    get: deprecate(function () {\n      return this.getBuffer();\n    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n  });\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\nexport default Writable;\nexport function Writable(options) {\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  EventEmitter.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  nextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) nextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n        nextTick(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n", "\nimport {inherits} from 'util';\nimport {nextTick} from 'process';\nimport {Readable} from './readable';\nimport {Writable} from './writable';\n\n\ninherits(Duplex, Readable);\n\nvar keys = Object.keys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\nexport default Duplex;\nexport function Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n", "// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nimport {Duplex} from './duplex';\n\n\nimport {inherits} from 'util';\ninherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\nexport default Transform;\nexport function Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n", "\nimport {Transform} from './transform';\n\nimport {inherits} from 'util';\ninherits(PassThrough, Transform);\nexport default PassThrough;\nexport function PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n", "import EE from 'events';\nimport {inherits} from 'util';\n\nimport {Duplex} from './readable-stream/duplex.js';\nimport {Readable} from './readable-stream/readable.js';\nimport {Writable} from './readable-stream/writable.js';\nimport {Transform} from './readable-stream/transform.js';\nimport {PassThrough} from './readable-stream/passthrough.js';\ninherits(Stream, EE);\nStream.Readable = Readable;\nStream.Writable = Writable;\nStream.Duplex = Duplex;\nStream.Transform = Transform;\nStream.PassThrough = PassThrough;\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nexport default Stream;\nexport {Readable,Writable,Duplex,Transform,PassThrough,Stream}\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n", "\nconst polyfill = require('stream')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "\nconst polyfill = require('string_decoder')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n", "'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.taggedHash =\n  exports.hash256 =\n  exports.hash160 =\n  exports.sha256 =\n  exports.sha1 =\n  exports.ripemd160 =\n    void 0;\nconst createHash = require('create-hash');\nconst RipeMd160 = require('ripemd160');\nfunction ripemd160(buffer) {\n  try {\n    return createHash('rmd160').update(buffer).digest();\n  } catch (err) {\n    try {\n      return createHash('ripemd160').update(buffer).digest();\n    } catch (err2) {\n      return new RipeMd160().update(buffer).digest();\n    }\n  }\n}\nexports.ripemd160 = ripemd160;\nfunction sha1(buffer) {\n  return createHash('sha1').update(buffer).digest();\n}\nexports.sha1 = sha1;\nfunction sha256(buffer) {\n  return createHash('sha256').update(buffer).digest();\n}\nexports.sha256 = sha256;\nfunction hash160(buffer) {\n  return ripemd160(sha256(buffer));\n}\nexports.hash160 = hash160;\nfunction hash256(buffer) {\n  return sha256(sha256(buffer));\n}\nexports.hash256 = hash256;\nconst TAGS = [\n  'BIP0340/challenge',\n  'BIP0340/aux',\n  'BIP0340/nonce',\n  'TapLeaf',\n  'TapBranch',\n  'TapSighash',\n  'TapTweak',\n  'KeyAgg list',\n  'KeyAgg coefficient',\n];\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = Object.fromEntries(\n  TAGS.map(tag => {\n    const tagHash = sha256(Buffer.from(tag));\n    return [tag, Buffer.concat([tagHash, tagHash])];\n  }),\n);\nfunction taggedHash(prefix, data) {\n  return sha256(Buffer.concat([TAGGED_HASH_PREFIXES[prefix], data]));\n}\nexports.taggedHash = taggedHash;\n", "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n", "var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n", "'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n", "'use strict'\n\nvar createHash = require('create-hash')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2pkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\n// input: {signature} {pubkey}\n// output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG\nfunction p2pkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(25)),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2pkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(network.pubKeyHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(3, 23);\n    if (a.address) return _address().hash;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([\n      OPS.OP_DUP,\n      OPS.OP_HASH160,\n      o.hash,\n      OPS.OP_EQUALVERIFY,\n      OPS.OP_CHECKSIG,\n    ]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (!a.input) return;\n    return _chunks()[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.input) return;\n    return _chunks()[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return bscript.compile([a.signature, a.pubkey]);\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!o.input) return;\n    return [];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.pubKeyHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 25 ||\n        a.output[0] !== OPS.OP_DUP ||\n        a.output[1] !== OPS.OP_HASH160 ||\n        a.output[2] !== 0x14 ||\n        a.output[23] !== OPS.OP_EQUALVERIFY ||\n        a.output[24] !== OPS.OP_CHECKSIG\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(3, 23);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n    }\n    if (a.input) {\n      const chunks = _chunks();\n      if (chunks.length !== 2) throw new TypeError('Input is invalid');\n      if (!bscript.isCanonicalScriptSignature(chunks[0]))\n        throw new TypeError('Input has invalid signature');\n      if (!(0, types_1.isPoint)(chunks[1]))\n        throw new TypeError('Input has invalid pubkey');\n      if (a.signature && !a.signature.equals(chunks[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(chunks[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(chunks[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2pkh = p2pkh;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2sh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bs58check = require('bs58check');\nconst OPS = bscript.OPS;\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(23)),\n      redeem: types_1.typeforce.maybe({\n        network: types_1.typeforce.maybe(types_1.typeforce.Object),\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const _redeem = lazy.value(() => {\n    const chunks = _chunks();\n    const lastChunk = chunks[chunks.length - 1];\n    return {\n      network,\n      output: lastChunk === OPS.OP_FALSE ? Buffer.from([]) : lastChunk,\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || [],\n    };\n  });\n  // output dependents\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(o.network.scriptHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  });\n  // input dependents\n  lazy.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return bscript.compile(\n      [].concat(bscript.decompile(a.redeem.input), a.redeem.output),\n    );\n  });\n  lazy.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.scriptHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 23 ||\n        a.output[0] !== OPS.OP_HASH160 ||\n        a.output[1] !== 0x14 ||\n        a.output[22] !== OPS.OP_EQUAL\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = bscript.decompile(redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output too short');\n        // match hash against other sources\n        const hash2 = bcrypto.hash160(redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness)\n          throw new TypeError('Input and witness provided');\n        if (hasInput) {\n          const richunks = bscript.decompile(redeem.input);\n          if (!bscript.isPushOnly(richunks))\n            throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n    if (a.input) {\n      const chunks = _chunks();\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!Buffer.isBuffer(_redeem().output))\n        throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      if (a.input) {\n        const redeem = _redeem();\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output))\n          throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input))\n          throw new TypeError('Redeem.input mismatch');\n      }\n      checkRedeem(a.redeem);\n    }\n    if (a.witness) {\n      if (\n        a.redeem &&\n        a.redeem.witness &&\n        !stacksEqual(a.redeem.witness, a.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2sh = p2sh;\n", "'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bech32m = exports.bech32 = void 0;\nconst ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nconst ALPHABET_MAP = {};\nfor (let z = 0; z < ALPHABET.length; z++) {\n    const x = ALPHABET.charAt(z);\n    ALPHABET_MAP[x] = z;\n}\nfunction polymodStep(pre) {\n    const b = pre >> 25;\n    return (((pre & 0x1ffffff) << 5) ^\n        (-((b >> 0) & 1) & 0x3b6a57b2) ^\n        (-((b >> 1) & 1) & 0x26508e6d) ^\n        (-((b >> 2) & 1) & 0x1ea119fa) ^\n        (-((b >> 3) & 1) & 0x3d4233dd) ^\n        (-((b >> 4) & 1) & 0x2a1462b3));\n}\nfunction prefixChk(prefix) {\n    let chk = 1;\n    for (let i = 0; i < prefix.length; ++i) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            return 'Invalid prefix (' + prefix + ')';\n        chk = polymodStep(chk) ^ (c >> 5);\n    }\n    chk = polymodStep(chk);\n    for (let i = 0; i < prefix.length; ++i) {\n        const v = prefix.charCodeAt(i);\n        chk = polymodStep(chk) ^ (v & 0x1f);\n    }\n    return chk;\n}\nfunction convert(data, inBits, outBits, pad) {\n    let value = 0;\n    let bits = 0;\n    const maxV = (1 << outBits) - 1;\n    const result = [];\n    for (let i = 0; i < data.length; ++i) {\n        value = (value << inBits) | data[i];\n        bits += inBits;\n        while (bits >= outBits) {\n            bits -= outBits;\n            result.push((value >> bits) & maxV);\n        }\n    }\n    if (pad) {\n        if (bits > 0) {\n            result.push((value << (outBits - bits)) & maxV);\n        }\n    }\n    else {\n        if (bits >= inBits)\n            return 'Excess padding';\n        if ((value << (outBits - bits)) & maxV)\n            return 'Non-zero padding';\n    }\n    return result;\n}\nfunction toWords(bytes) {\n    return convert(bytes, 8, 5, true);\n}\nfunction fromWordsUnsafe(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n}\nfunction fromWords(words) {\n    const res = convert(words, 5, 8, false);\n    if (Array.isArray(res))\n        return res;\n    throw new Error(res);\n}\nfunction getLibraryFromEncoding(encoding) {\n    let ENCODING_CONST;\n    if (encoding === 'bech32') {\n        ENCODING_CONST = 1;\n    }\n    else {\n        ENCODING_CONST = 0x2bc830a3;\n    }\n    function encode(prefix, words, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (prefix.length + 7 + words.length > LIMIT)\n            throw new TypeError('Exceeds length limit');\n        prefix = prefix.toLowerCase();\n        // determine chk mod\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            throw new Error(chk);\n        let result = prefix + '1';\n        for (let i = 0; i < words.length; ++i) {\n            const x = words[i];\n            if (x >> 5 !== 0)\n                throw new Error('Non 5-bit word');\n            chk = polymodStep(chk) ^ x;\n            result += ALPHABET.charAt(x);\n        }\n        for (let i = 0; i < 6; ++i) {\n            chk = polymodStep(chk);\n        }\n        chk ^= ENCODING_CONST;\n        for (let i = 0; i < 6; ++i) {\n            const v = (chk >> ((5 - i) * 5)) & 0x1f;\n            result += ALPHABET.charAt(v);\n        }\n        return result;\n    }\n    function __decode(str, LIMIT) {\n        LIMIT = LIMIT || 90;\n        if (str.length < 8)\n            return str + ' too short';\n        if (str.length > LIMIT)\n            return 'Exceeds length limit';\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        const uppered = str.toUpperCase();\n        if (str !== lowered && str !== uppered)\n            return 'Mixed-case string ' + str;\n        str = lowered;\n        const split = str.lastIndexOf('1');\n        if (split === -1)\n            return 'No separator character for ' + str;\n        if (split === 0)\n            return 'Missing prefix for ' + str;\n        const prefix = str.slice(0, split);\n        const wordChars = str.slice(split + 1);\n        if (wordChars.length < 6)\n            return 'Data too short';\n        let chk = prefixChk(prefix);\n        if (typeof chk === 'string')\n            return chk;\n        const words = [];\n        for (let i = 0; i < wordChars.length; ++i) {\n            const c = wordChars.charAt(i);\n            const v = ALPHABET_MAP[c];\n            if (v === undefined)\n                return 'Unknown character ' + c;\n            chk = polymodStep(chk) ^ v;\n            // not in the checksum?\n            if (i + 6 >= wordChars.length)\n                continue;\n            words.push(v);\n        }\n        if (chk !== ENCODING_CONST)\n            return 'Invalid checksum for ' + str;\n        return { prefix, words };\n    }\n    function decodeUnsafe(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n    }\n    function decode(str, LIMIT) {\n        const res = __decode(str, LIMIT);\n        if (typeof res === 'object')\n            return res;\n        throw new Error(res);\n    }\n    return {\n        decodeUnsafe,\n        decode,\n        encode,\n        toWords,\n        fromWordsUnsafe,\n        fromWords,\n    };\n}\nexports.bech32 = getLibraryFromEncoding('bech32');\nexports.bech32m = getLibraryFromEncoding('bech32m');\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2wpkh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst EMPTY_BUFFER = Buffer.alloc(0);\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(20)),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(22)),\n      pubkey: types_1.typeforce.maybe(types_1.isPoint),\n      signature: types_1.typeforce.maybe(bscript.isCanonicalScriptSignature),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2wpkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32_1.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32_1.bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14\n      )\n        throw new TypeError('Output is invalid');\n      if (hash.length > 0 && !hash.equals(a.output.slice(2)))\n        throw new TypeError('Hash mismatch');\n      else hash = a.output.slice(2);\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n      if (!(0, types_1.isPoint)(a.pubkey) || a.pubkey.length !== 33)\n        throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!bscript.isCanonicalScriptSignature(a.witness[0]))\n        throw new TypeError('Witness has invalid signature');\n      if (!(0, types_1.isPoint)(a.witness[1]) || a.witness[1].length !== 33)\n        throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && !a.signature.equals(a.witness[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(a.witness[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(a.witness[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wpkh = p2wpkh;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2wsh = void 0;\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst EMPTY_BUFFER = Buffer.alloc(0);\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\nfunction chunkHasUncompressedPubkey(chunk) {\n  if (\n    Buffer.isBuffer(chunk) &&\n    chunk.length === 65 &&\n    chunk[0] === 0x04 &&\n    (0, types_1.isPoint)(chunk)\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n// input: <>\n// witness: [redeemScriptSig ...] {redeemScript}\n// output: OP_0 {sha256(redeemScript)}\nfunction p2wsh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(34)),\n      redeem: types_1.typeforce.maybe({\n        input: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        network: types_1.typeforce.maybe(types_1.typeforce.Object),\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const _rchunks = lazy.value(() => {\n    return bscript.decompile(a.redeem.input);\n  });\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32_1.bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32_1.bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.redeem && o.redeem.output) return bcrypto.sha256(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'redeem', () => {\n    if (!a.witness) return;\n    return {\n      output: a.witness[a.witness.length - 1],\n      input: EMPTY_BUFFER,\n      witness: a.witness.slice(0, -1),\n    };\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    // transform redeem input to witness stack?\n    if (\n      a.redeem &&\n      a.redeem.input &&\n      a.redeem.input.length > 0 &&\n      a.redeem.output &&\n      a.redeem.output.length > 0\n    ) {\n      const stack = bscript.toStack(_rchunks());\n      // assign, and blank the existing input\n      o.redeem = Object.assign({ witness: stack }, a.redeem);\n      o.redeem.input = EMPTY_BUFFER;\n      return [].concat(stack, a.redeem.output);\n    }\n    if (!a.redeem) return;\n    if (!a.redeem.output) return;\n    if (!a.redeem.witness) return;\n    return [].concat(a.redeem.witness, a.redeem.output);\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2wsh'];\n    if (o.redeem !== undefined && o.redeem.name !== undefined)\n      nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().prefix !== network.bech32)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      // is there two redeem sources?\n      if (\n        a.redeem.input &&\n        a.redeem.input.length > 0 &&\n        a.redeem.witness &&\n        a.redeem.witness.length > 0\n      )\n        throw new TypeError('Ambiguous witness source');\n      // is the redeem output non-empty?\n      if (a.redeem.output) {\n        if (bscript.decompile(a.redeem.output).length === 0)\n          throw new TypeError('Redeem.output is invalid');\n        // match hash against other sources\n        const hash2 = bcrypto.sha256(a.redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (a.redeem.input && !bscript.isPushOnly(_rchunks()))\n        throw new TypeError('Non push-only scriptSig');\n      if (\n        a.witness &&\n        a.redeem.witness &&\n        !stacksEqual(a.witness, a.redeem.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n      if (\n        (a.redeem.input && _rchunks().some(chunkHasUncompressedPubkey)) ||\n        (a.redeem.output &&\n          (bscript.decompile(a.redeem.output) || []).some(\n            chunkHasUncompressedPubkey,\n          ))\n      ) {\n        throw new TypeError(\n          'redeem.input or redeem.output contains uncompressed pubkey',\n        );\n      }\n    }\n    if (a.witness && a.witness.length > 0) {\n      const wScript = a.witness[a.witness.length - 1];\n      if (a.redeem && a.redeem.output && !a.redeem.output.equals(wScript))\n        throw new TypeError('Witness and redeem.output mismatch');\n      if (\n        a.witness.some(chunkHasUncompressedPubkey) ||\n        (bscript.decompile(wScript) || []).some(chunkHasUncompressedPubkey)\n      )\n        throw new TypeError('Witness contains uncompressed pubkey');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wsh = p2wsh;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.getEccLib = exports.initEccLib = void 0;\nconst _ECCLIB_CACHE = {};\nfunction initEccLib(eccLib) {\n  if (!eccLib) {\n    // allow clearing the library\n    _ECCLIB_CACHE.eccLib = eccLib;\n  } else if (eccLib !== _ECCLIB_CACHE.eccLib) {\n    // new instance, verify it\n    verifyEcc(eccLib);\n    _ECCLIB_CACHE.eccLib = eccLib;\n  }\n}\nexports.initEccLib = initEccLib;\nfunction getEccLib() {\n  if (!_ECCLIB_CACHE.eccLib)\n    throw new Error(\n      'No ECC Library provided. You must call initEccLib() with a valid TinySecp256k1Interface instance',\n    );\n  return _ECCLIB_CACHE.eccLib;\n}\nexports.getEccLib = getEccLib;\nconst h = hex => Buffer.from(hex, 'hex');\nfunction verifyEcc(ecc) {\n  assert(typeof ecc.isXOnlyPoint === 'function');\n  assert(\n    ecc.isXOnlyPoint(\n      h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffc2e'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9'),\n    ),\n  );\n  assert(\n    ecc.isXOnlyPoint(\n      h('0000000000000000000000000000000000000000000000000000000000000001'),\n    ),\n  );\n  assert(\n    !ecc.isXOnlyPoint(\n      h('0000000000000000000000000000000000000000000000000000000000000000'),\n    ),\n  );\n  assert(\n    !ecc.isXOnlyPoint(\n      h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    ),\n  );\n  assert(typeof ecc.xOnlyPointAddTweak === 'function');\n  tweakAddVectors.forEach(t => {\n    const r = ecc.xOnlyPointAddTweak(h(t.pubkey), h(t.tweak));\n    if (t.result === null) {\n      assert(r === null);\n    } else {\n      assert(r !== null);\n      assert(r.parity === t.parity);\n      assert(Buffer.from(r.xOnlyPubkey).equals(h(t.result)));\n    }\n  });\n}\nfunction assert(bool) {\n  if (!bool) throw new Error('ecc library invalid');\n}\nconst tweakAddVectors = [\n  {\n    pubkey: '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    tweak: 'fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140',\n    parity: -1,\n    result: null,\n  },\n  {\n    pubkey: '1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b',\n    tweak: 'a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac',\n    parity: 1,\n    result: 'e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf',\n  },\n  {\n    pubkey: '2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991',\n    tweak: '823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47',\n    parity: 0,\n    result: '9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c',\n  },\n];\n", "'use strict'\nvar Buffer = require('safe-buffer').Buffer\n\n// Number.MAX_SAFE_INTEGER\nvar MAX_SAFE_INTEGER = 9007199254740991\n\nfunction checkUInt53 (n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError('value out of range')\n}\n\nfunction encode (number, buffer, offset) {\n  checkUInt53(number)\n\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(number))\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance')\n  if (!offset) offset = 0\n\n  // 8 bit\n  if (number < 0xfd) {\n    buffer.writeUInt8(number, offset)\n    encode.bytes = 1\n\n  // 16 bit\n  } else if (number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset)\n    buffer.writeUInt16LE(number, offset + 1)\n    encode.bytes = 3\n\n  // 32 bit\n  } else if (number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset)\n    buffer.writeUInt32LE(number, offset + 1)\n    encode.bytes = 5\n\n  // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset)\n    buffer.writeUInt32LE(number >>> 0, offset + 1)\n    buffer.writeUInt32LE((number / 0x100000000) | 0, offset + 5)\n    encode.bytes = 9\n  }\n\n  return buffer\n}\n\nfunction decode (buffer, offset) {\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance')\n  if (!offset) offset = 0\n\n  var first = buffer.readUInt8(offset)\n\n  // 8 bit\n  if (first < 0xfd) {\n    decode.bytes = 1\n    return first\n\n  // 16 bit\n  } else if (first === 0xfd) {\n    decode.bytes = 3\n    return buffer.readUInt16LE(offset + 1)\n\n  // 32 bit\n  } else if (first === 0xfe) {\n    decode.bytes = 5\n    return buffer.readUInt32LE(offset + 1)\n\n  // 64 bit\n  } else {\n    decode.bytes = 9\n    var lo = buffer.readUInt32LE(offset + 1)\n    var hi = buffer.readUInt32LE(offset + 5)\n    var number = hi * 0x0100000000 + lo\n    checkUInt53(number)\n\n    return number\n  }\n}\n\nfunction encodingLength (number) {\n  checkUInt53(number)\n\n  return (\n    number < 0xfd ? 1\n      : number <= 0xffff ? 3\n        : number <= 0xffffffff ? 5\n          : 9\n  )\n}\n\nmodule.exports = { encode: encode, decode: decode, encodingLength: encodingLength }\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.BufferReader =\n  exports.BufferWriter =\n  exports.cloneBuffer =\n  exports.reverseBuffer =\n  exports.writeUInt64LE =\n  exports.readUInt64LE =\n  exports.varuint =\n    void 0;\nconst types = require('./types');\nconst { typeforce } = types;\nconst varuint = require('varuint-bitcoin');\nexports.varuint = varuint;\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number')\n    throw new Error('cannot write a non-number as a number');\n  if (value < 0)\n    throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value)\n    throw new Error('value has a fractional component');\n}\nfunction readUInt64LE(buffer, offset) {\n  const a = buffer.readUInt32LE(offset);\n  let b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\nexports.readUInt64LE = readUInt64LE;\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n}\nexports.writeUInt64LE = writeUInt64LE;\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nexports.reverseBuffer = reverseBuffer;\nfunction cloneBuffer(buffer) {\n  const clone = Buffer.allocUnsafe(buffer.length);\n  buffer.copy(clone);\n  return clone;\n}\nexports.cloneBuffer = cloneBuffer;\n/**\n * Helper class for serialization of bitcoin data types into a pre-allocated buffer.\n */\nclass BufferWriter {\n  static withCapacity(size) {\n    return new BufferWriter(Buffer.alloc(size));\n  }\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    typeforce(types.tuple(types.Buffer, types.UInt32), [buffer, offset]);\n  }\n  writeUInt8(i) {\n    this.offset = this.buffer.writeUInt8(i, this.offset);\n  }\n  writeInt32(i) {\n    this.offset = this.buffer.writeInt32LE(i, this.offset);\n  }\n  writeUInt32(i) {\n    this.offset = this.buffer.writeUInt32LE(i, this.offset);\n  }\n  writeUInt64(i) {\n    this.offset = writeUInt64LE(this.buffer, i, this.offset);\n  }\n  writeVarInt(i) {\n    varuint.encode(i, this.buffer, this.offset);\n    this.offset += varuint.encode.bytes;\n  }\n  writeSlice(slice) {\n    if (this.buffer.length < this.offset + slice.length) {\n      throw new Error('Cannot write slice out of bounds');\n    }\n    this.offset += slice.copy(this.buffer, this.offset);\n  }\n  writeVarSlice(slice) {\n    this.writeVarInt(slice.length);\n    this.writeSlice(slice);\n  }\n  writeVector(vector) {\n    this.writeVarInt(vector.length);\n    vector.forEach(buf => this.writeVarSlice(buf));\n  }\n  end() {\n    if (this.buffer.length === this.offset) {\n      return this.buffer;\n    }\n    throw new Error(`buffer size ${this.buffer.length}, offset ${this.offset}`);\n  }\n}\nexports.BufferWriter = BufferWriter;\n/**\n * Helper class for reading of bitcoin data types from a buffer.\n */\nclass BufferReader {\n  constructor(buffer, offset = 0) {\n    this.buffer = buffer;\n    this.offset = offset;\n    typeforce(types.tuple(types.Buffer, types.UInt32), [buffer, offset]);\n  }\n  readUInt8() {\n    const result = this.buffer.readUInt8(this.offset);\n    this.offset++;\n    return result;\n  }\n  readInt32() {\n    const result = this.buffer.readInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n  readUInt32() {\n    const result = this.buffer.readUInt32LE(this.offset);\n    this.offset += 4;\n    return result;\n  }\n  readUInt64() {\n    const result = readUInt64LE(this.buffer, this.offset);\n    this.offset += 8;\n    return result;\n  }\n  readVarInt() {\n    const vi = varuint.decode(this.buffer, this.offset);\n    this.offset += varuint.decode.bytes;\n    return vi;\n  }\n  readSlice(n) {\n    if (this.buffer.length < this.offset + n) {\n      throw new Error('Cannot read slice out of bounds');\n    }\n    const result = this.buffer.slice(this.offset, this.offset + n);\n    this.offset += n;\n    return result;\n  }\n  readVarSlice() {\n    return this.readSlice(this.readVarInt());\n  }\n  readVector() {\n    const count = this.readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(this.readVarSlice());\n    return vector;\n  }\n}\nexports.BufferReader = BufferReader;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.tweakKey =\n  exports.tapTweakHash =\n  exports.tapleafHash =\n  exports.findScriptPath =\n  exports.toHashTree =\n  exports.rootHashFromPath =\n  exports.MAX_TAPTREE_DEPTH =\n  exports.LEAF_VERSION_TAPSCRIPT =\n    void 0;\nconst buffer_1 = require('buffer');\nconst ecc_lib_1 = require('../ecc_lib');\nconst bcrypto = require('../crypto');\nconst bufferutils_1 = require('../bufferutils');\nconst types_1 = require('../types');\nexports.LEAF_VERSION_TAPSCRIPT = 0xc0;\nexports.MAX_TAPTREE_DEPTH = 128;\nconst isHashBranch = ht => 'left' in ht && 'right' in ht;\nfunction rootHashFromPath(controlBlock, leafHash) {\n  if (controlBlock.length < 33)\n    throw new TypeError(\n      `The control-block length is too small. Got ${controlBlock.length}, expected min 33.`,\n    );\n  const m = (controlBlock.length - 33) / 32;\n  let kj = leafHash;\n  for (let j = 0; j < m; j++) {\n    const ej = controlBlock.slice(33 + 32 * j, 65 + 32 * j);\n    if (kj.compare(ej) < 0) {\n      kj = tapBranchHash(kj, ej);\n    } else {\n      kj = tapBranchHash(ej, kj);\n    }\n  }\n  return kj;\n}\nexports.rootHashFromPath = rootHashFromPath;\n/**\n * Build a hash tree of merkle nodes from the scripts binary tree.\n * @param scriptTree - the tree of scripts to pairwise hash.\n */\nfunction toHashTree(scriptTree) {\n  if ((0, types_1.isTapleaf)(scriptTree))\n    return { hash: tapleafHash(scriptTree) };\n  const hashes = [toHashTree(scriptTree[0]), toHashTree(scriptTree[1])];\n  hashes.sort((a, b) => a.hash.compare(b.hash));\n  const [left, right] = hashes;\n  return {\n    hash: tapBranchHash(left.hash, right.hash),\n    left,\n    right,\n  };\n}\nexports.toHashTree = toHashTree;\n/**\n * Given a HashTree, finds the path from a particular hash to the root.\n * @param node - the root of the tree\n * @param hash - the hash to search for\n * @returns - array of sibling hashes, from leaf (inclusive) to root\n * (exclusive) needed to prove inclusion of the specified hash. undefined if no\n * path is found\n */\nfunction findScriptPath(node, hash) {\n  if (isHashBranch(node)) {\n    const leftPath = findScriptPath(node.left, hash);\n    if (leftPath !== undefined) return [...leftPath, node.right.hash];\n    const rightPath = findScriptPath(node.right, hash);\n    if (rightPath !== undefined) return [...rightPath, node.left.hash];\n  } else if (node.hash.equals(hash)) {\n    return [];\n  }\n  return undefined;\n}\nexports.findScriptPath = findScriptPath;\nfunction tapleafHash(leaf) {\n  const version = leaf.version || exports.LEAF_VERSION_TAPSCRIPT;\n  return bcrypto.taggedHash(\n    'TapLeaf',\n    buffer_1.Buffer.concat([\n      buffer_1.Buffer.from([version]),\n      serializeScript(leaf.output),\n    ]),\n  );\n}\nexports.tapleafHash = tapleafHash;\nfunction tapTweakHash(pubKey, h) {\n  return bcrypto.taggedHash(\n    'TapTweak',\n    buffer_1.Buffer.concat(h ? [pubKey, h] : [pubKey]),\n  );\n}\nexports.tapTweakHash = tapTweakHash;\nfunction tweakKey(pubKey, h) {\n  if (!buffer_1.Buffer.isBuffer(pubKey)) return null;\n  if (pubKey.length !== 32) return null;\n  if (h && h.length !== 32) return null;\n  const tweakHash = tapTweakHash(pubKey, h);\n  const res = (0, ecc_lib_1.getEccLib)().xOnlyPointAddTweak(pubKey, tweakHash);\n  if (!res || res.xOnlyPubkey === null) return null;\n  return {\n    parity: res.parity,\n    x: buffer_1.Buffer.from(res.xOnlyPubkey),\n  };\n}\nexports.tweakKey = tweakKey;\nfunction tapBranchHash(a, b) {\n  return bcrypto.taggedHash('TapBranch', buffer_1.Buffer.concat([a, b]));\n}\nfunction serializeScript(s) {\n  const varintLen = bufferutils_1.varuint.encodingLength(s.length);\n  const buffer = buffer_1.Buffer.allocUnsafe(varintLen); // better\n  bufferutils_1.varuint.encode(s.length, buffer);\n  return buffer_1.Buffer.concat([buffer, s]);\n}\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2tr = void 0;\nconst buffer_1 = require('buffer');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst types_1 = require('../types');\nconst ecc_lib_1 = require('../ecc_lib');\nconst bip341_1 = require('./bip341');\nconst lazy = require('./lazy');\nconst bech32_1 = require('bech32');\nconst OPS = bscript.OPS;\nconst TAPROOT_WITNESS_VERSION = 0x01;\nconst ANNEX_PREFIX = 0x50;\nfunction p2tr(a, opts) {\n  if (\n    !a.address &&\n    !a.output &&\n    !a.pubkey &&\n    !a.internalPubkey &&\n    !(a.witness && a.witness.length > 1)\n  )\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  (0, types_1.typeforce)(\n    {\n      address: types_1.typeforce.maybe(types_1.typeforce.String),\n      input: types_1.typeforce.maybe(types_1.typeforce.BufferN(0)),\n      network: types_1.typeforce.maybe(types_1.typeforce.Object),\n      output: types_1.typeforce.maybe(types_1.typeforce.BufferN(34)),\n      internalPubkey: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      hash: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      pubkey: types_1.typeforce.maybe(types_1.typeforce.BufferN(32)),\n      signature: types_1.typeforce.maybe(types_1.typeforce.BufferN(64)),\n      witness: types_1.typeforce.maybe(\n        types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n      ),\n      scriptTree: types_1.typeforce.maybe(types_1.isTaptree),\n      redeem: types_1.typeforce.maybe({\n        output: types_1.typeforce.maybe(types_1.typeforce.Buffer),\n        redeemVersion: types_1.typeforce.maybe(types_1.typeforce.Number),\n        witness: types_1.typeforce.maybe(\n          types_1.typeforce.arrayOf(types_1.typeforce.Buffer),\n        ),\n      }),\n      redeemVersion: types_1.typeforce.maybe(types_1.typeforce.Number),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32_1.bech32m.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32_1.bech32m.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: buffer_1.Buffer.from(data),\n    };\n  });\n  // remove annex if present, ignored by taproot\n  const _witness = lazy.value(() => {\n    if (!a.witness || !a.witness.length) return;\n    if (\n      a.witness.length >= 2 &&\n      a.witness[a.witness.length - 1][0] === ANNEX_PREFIX\n    ) {\n      return a.witness.slice(0, -1);\n    }\n    return a.witness.slice();\n  });\n  const _hashTree = lazy.value(() => {\n    if (a.scriptTree) return (0, bip341_1.toHashTree)(a.scriptTree);\n    if (a.hash) return { hash: a.hash };\n    return;\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2tr', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.pubkey) return;\n    const words = bech32_1.bech32m.toWords(o.pubkey);\n    words.unshift(TAPROOT_WITNESS_VERSION);\n    return bech32_1.bech32m.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    const hashTree = _hashTree();\n    if (hashTree) return hashTree.hash;\n    const w = _witness();\n    if (w && w.length > 1) {\n      const controlBlock = w[w.length - 1];\n      const leafVersion = controlBlock[0] & types_1.TAPLEAF_VERSION_MASK;\n      const script = w[w.length - 2];\n      const leafHash = (0, bip341_1.tapleafHash)({\n        output: script,\n        version: leafVersion,\n      });\n      return (0, bip341_1.rootHashFromPath)(controlBlock, leafHash);\n    }\n    return null;\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.pubkey) return;\n    return bscript.compile([OPS.OP_1, o.pubkey]);\n  });\n  lazy.prop(o, 'redeemVersion', () => {\n    if (a.redeemVersion) return a.redeemVersion;\n    if (\n      a.redeem &&\n      a.redeem.redeemVersion !== undefined &&\n      a.redeem.redeemVersion !== null\n    ) {\n      return a.redeem.redeemVersion;\n    }\n    return bip341_1.LEAF_VERSION_TAPSCRIPT;\n  });\n  lazy.prop(o, 'redeem', () => {\n    const witness = _witness(); // witness without annex\n    if (!witness || witness.length < 2) return;\n    return {\n      output: witness[witness.length - 2],\n      witness: witness.slice(0, -2),\n      redeemVersion:\n        witness[witness.length - 1][0] & types_1.TAPLEAF_VERSION_MASK,\n    };\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (a.output) return a.output.slice(2);\n    if (a.address) return _address().data;\n    if (o.internalPubkey) {\n      const tweakedKey = (0, bip341_1.tweakKey)(o.internalPubkey, o.hash);\n      if (tweakedKey) return tweakedKey.x;\n    }\n  });\n  lazy.prop(o, 'internalPubkey', () => {\n    if (a.internalPubkey) return a.internalPubkey;\n    const witness = _witness();\n    if (witness && witness.length > 1)\n      return witness[witness.length - 1].slice(1, 33);\n  });\n  lazy.prop(o, 'signature', () => {\n    if (a.signature) return a.signature;\n    const witness = _witness(); // witness without annex\n    if (!witness || witness.length !== 1) return;\n    return witness[0];\n  });\n  lazy.prop(o, 'witness', () => {\n    if (a.witness) return a.witness;\n    const hashTree = _hashTree();\n    if (hashTree && a.redeem && a.redeem.output && a.internalPubkey) {\n      const leafHash = (0, bip341_1.tapleafHash)({\n        output: a.redeem.output,\n        version: o.redeemVersion,\n      });\n      const path = (0, bip341_1.findScriptPath)(hashTree, leafHash);\n      if (!path) return;\n      const outputKey = (0, bip341_1.tweakKey)(a.internalPubkey, hashTree.hash);\n      if (!outputKey) return;\n      const controlBock = buffer_1.Buffer.concat(\n        [\n          buffer_1.Buffer.from([o.redeemVersion | outputKey.parity]),\n          a.internalPubkey,\n        ].concat(path),\n      );\n      return [a.redeem.output, controlBock];\n    }\n    if (a.signature) return [a.signature];\n  });\n  // extended validation\n  if (opts.validate) {\n    let pubkey = buffer_1.Buffer.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== TAPROOT_WITNESS_VERSION)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 32)\n        throw new TypeError('Invalid address data');\n      pubkey = _address().data;\n    }\n    if (a.pubkey) {\n      if (pubkey.length > 0 && !pubkey.equals(a.pubkey))\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = a.pubkey;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 34 ||\n        a.output[0] !== OPS.OP_1 ||\n        a.output[1] !== 0x20\n      )\n        throw new TypeError('Output is invalid');\n      if (pubkey.length > 0 && !pubkey.equals(a.output.slice(2)))\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = a.output.slice(2);\n    }\n    if (a.internalPubkey) {\n      const tweakedKey = (0, bip341_1.tweakKey)(a.internalPubkey, o.hash);\n      if (pubkey.length > 0 && !pubkey.equals(tweakedKey.x))\n        throw new TypeError('Pubkey mismatch');\n      else pubkey = tweakedKey.x;\n    }\n    if (pubkey && pubkey.length) {\n      if (!(0, ecc_lib_1.getEccLib)().isXOnlyPoint(pubkey))\n        throw new TypeError('Invalid pubkey for p2tr');\n    }\n    const hashTree = _hashTree();\n    if (a.hash && hashTree) {\n      if (!a.hash.equals(hashTree.hash)) throw new TypeError('Hash mismatch');\n    }\n    if (a.redeem && a.redeem.output && hashTree) {\n      const leafHash = (0, bip341_1.tapleafHash)({\n        output: a.redeem.output,\n        version: o.redeemVersion,\n      });\n      if (!(0, bip341_1.findScriptPath)(hashTree, leafHash))\n        throw new TypeError('Redeem script not in tree');\n    }\n    const witness = _witness();\n    // compare the provided redeem data with the one computed from witness\n    if (a.redeem && o.redeem) {\n      if (a.redeem.redeemVersion) {\n        if (a.redeem.redeemVersion !== o.redeem.redeemVersion)\n          throw new TypeError('Redeem.redeemVersion and witness mismatch');\n      }\n      if (a.redeem.output) {\n        if (bscript.decompile(a.redeem.output).length === 0)\n          throw new TypeError('Redeem.output is invalid');\n        // output redeem is constructed from the witness\n        if (o.redeem.output && !a.redeem.output.equals(o.redeem.output))\n          throw new TypeError('Redeem.output and witness mismatch');\n      }\n      if (a.redeem.witness) {\n        if (\n          o.redeem.witness &&\n          !stacksEqual(a.redeem.witness, o.redeem.witness)\n        )\n          throw new TypeError('Redeem.witness and witness mismatch');\n      }\n    }\n    if (witness && witness.length) {\n      if (witness.length === 1) {\n        // key spending\n        if (a.signature && !a.signature.equals(witness[0]))\n          throw new TypeError('Signature mismatch');\n      } else {\n        // script path spending\n        const controlBlock = witness[witness.length - 1];\n        if (controlBlock.length < 33)\n          throw new TypeError(\n            `The control-block length is too small. Got ${controlBlock.length}, expected min 33.`,\n          );\n        if ((controlBlock.length - 33) % 32 !== 0)\n          throw new TypeError(\n            `The control-block length of ${controlBlock.length} is incorrect!`,\n          );\n        const m = (controlBlock.length - 33) / 32;\n        if (m > 128)\n          throw new TypeError(\n            `The script path is too long. Got ${m}, expected max 128.`,\n          );\n        const internalPubkey = controlBlock.slice(1, 33);\n        if (a.internalPubkey && !a.internalPubkey.equals(internalPubkey))\n          throw new TypeError('Internal pubkey mismatch');\n        if (!(0, ecc_lib_1.getEccLib)().isXOnlyPoint(internalPubkey))\n          throw new TypeError('Invalid internalPubkey for p2tr witness');\n        const leafVersion = controlBlock[0] & types_1.TAPLEAF_VERSION_MASK;\n        const script = witness[witness.length - 2];\n        const leafHash = (0, bip341_1.tapleafHash)({\n          output: script,\n          version: leafVersion,\n        });\n        const hash = (0, bip341_1.rootHashFromPath)(controlBlock, leafHash);\n        const outputKey = (0, bip341_1.tweakKey)(internalPubkey, hash);\n        if (!outputKey)\n          // todo: needs test data\n          throw new TypeError('Invalid outputKey for p2tr witness');\n        if (pubkey.length && !pubkey.equals(outputKey.x))\n          throw new TypeError('Pubkey mismatch for p2tr witness');\n        if (outputKey.parity !== (controlBlock[0] & 1))\n          throw new Error('Incorrect parity');\n      }\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2tr = p2tr;\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.p2tr =\n  exports.p2wsh =\n  exports.p2wpkh =\n  exports.p2sh =\n  exports.p2pkh =\n  exports.p2pk =\n  exports.p2ms =\n  exports.embed =\n    void 0;\nconst embed_1 = require('./embed');\nObject.defineProperty(exports, 'embed', {\n  enumerable: true,\n  get: function () {\n    return embed_1.p2data;\n  },\n});\nconst p2ms_1 = require('./p2ms');\nObject.defineProperty(exports, 'p2ms', {\n  enumerable: true,\n  get: function () {\n    return p2ms_1.p2ms;\n  },\n});\nconst p2pk_1 = require('./p2pk');\nObject.defineProperty(exports, 'p2pk', {\n  enumerable: true,\n  get: function () {\n    return p2pk_1.p2pk;\n  },\n});\nconst p2pkh_1 = require('./p2pkh');\nObject.defineProperty(exports, 'p2pkh', {\n  enumerable: true,\n  get: function () {\n    return p2pkh_1.p2pkh;\n  },\n});\nconst p2sh_1 = require('./p2sh');\nObject.defineProperty(exports, 'p2sh', {\n  enumerable: true,\n  get: function () {\n    return p2sh_1.p2sh;\n  },\n});\nconst p2wpkh_1 = require('./p2wpkh');\nObject.defineProperty(exports, 'p2wpkh', {\n  enumerable: true,\n  get: function () {\n    return p2wpkh_1.p2wpkh;\n  },\n});\nconst p2wsh_1 = require('./p2wsh');\nObject.defineProperty(exports, 'p2wsh', {\n  enumerable: true,\n  get: function () {\n    return p2wsh_1.p2wsh;\n  },\n});\nconst p2tr_1 = require('./p2tr');\nObject.defineProperty(exports, 'p2tr', {\n  enumerable: true,\n  get: function () {\n    return p2tr_1.p2tr;\n  },\n});\n// TODO\n// witness commitment\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.toOutputScript =\n  exports.fromOutputScript =\n  exports.toBech32 =\n  exports.toBase58Check =\n  exports.fromBech32 =\n  exports.fromBase58Check =\n    void 0;\nconst networks = require('./networks');\nconst payments = require('./payments');\nconst bscript = require('./script');\nconst types_1 = require('./types');\nconst bech32_1 = require('bech32');\nconst bs58check = require('bs58check');\nconst FUTURE_SEGWIT_MAX_SIZE = 40;\nconst FUTURE_SEGWIT_MIN_SIZE = 2;\nconst FUTURE_SEGWIT_MAX_VERSION = 16;\nconst FUTURE_SEGWIT_MIN_VERSION = 2;\nconst FUTURE_SEGWIT_VERSION_DIFF = 0x50;\nconst FUTURE_SEGWIT_VERSION_WARNING =\n  'WARNING: Sending to a future segwit version address can lead to loss of funds. ' +\n  'End users MUST be warned carefully in the GUI and asked if they wish to proceed ' +\n  'with caution. Wallets should verify the segwit version from the output of fromBech32, ' +\n  'then decide when it is safe to use which version of segwit.';\nfunction _toFutureSegwitAddress(output, network) {\n  const data = output.slice(2);\n  if (\n    data.length < FUTURE_SEGWIT_MIN_SIZE ||\n    data.length > FUTURE_SEGWIT_MAX_SIZE\n  )\n    throw new TypeError('Invalid program length for segwit address');\n  const version = output[0] - FUTURE_SEGWIT_VERSION_DIFF;\n  if (\n    version < FUTURE_SEGWIT_MIN_VERSION ||\n    version > FUTURE_SEGWIT_MAX_VERSION\n  )\n    throw new TypeError('Invalid version for segwit address');\n  if (output[1] !== data.length)\n    throw new TypeError('Invalid script for segwit address');\n  console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n  return toBech32(data, version, network.bech32);\n}\nfunction fromBase58Check(address) {\n  const payload = bs58check.decode(address);\n  // TODO: 4.0.0, move to \"toOutputScript\"\n  if (payload.length < 21) throw new TypeError(address + ' is too short');\n  if (payload.length > 21) throw new TypeError(address + ' is too long');\n  const version = payload.readUInt8(0);\n  const hash = payload.slice(1);\n  return { version, hash };\n}\nexports.fromBase58Check = fromBase58Check;\nfunction fromBech32(address) {\n  let result;\n  let version;\n  try {\n    result = bech32_1.bech32.decode(address);\n  } catch (e) {}\n  if (result) {\n    version = result.words[0];\n    if (version !== 0) throw new TypeError(address + ' uses wrong encoding');\n  } else {\n    result = bech32_1.bech32m.decode(address);\n    version = result.words[0];\n    if (version === 0) throw new TypeError(address + ' uses wrong encoding');\n  }\n  const data = bech32_1.bech32.fromWords(result.words.slice(1));\n  return {\n    version,\n    prefix: result.prefix,\n    data: Buffer.from(data),\n  };\n}\nexports.fromBech32 = fromBech32;\nfunction toBase58Check(hash, version) {\n  (0, types_1.typeforce)(\n    (0, types_1.tuple)(types_1.Hash160bit, types_1.UInt8),\n    arguments,\n  );\n  const payload = Buffer.allocUnsafe(21);\n  payload.writeUInt8(version, 0);\n  hash.copy(payload, 1);\n  return bs58check.encode(payload);\n}\nexports.toBase58Check = toBase58Check;\nfunction toBech32(data, version, prefix) {\n  const words = bech32_1.bech32.toWords(data);\n  words.unshift(version);\n  return version === 0\n    ? bech32_1.bech32.encode(prefix, words)\n    : bech32_1.bech32m.encode(prefix, words);\n}\nexports.toBech32 = toBech32;\nfunction fromOutputScript(output, network) {\n  // TODO: Network\n  network = network || networks.bitcoin;\n  try {\n    return payments.p2pkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2sh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wpkh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2wsh({ output, network }).address;\n  } catch (e) {}\n  try {\n    return payments.p2tr({ output, network }).address;\n  } catch (e) {}\n  try {\n    return _toFutureSegwitAddress(output, network);\n  } catch (e) {}\n  throw new Error(bscript.toASM(output) + ' has no matching Address');\n}\nexports.fromOutputScript = fromOutputScript;\nfunction toOutputScript(address, network) {\n  network = network || networks.bitcoin;\n  let decodeBase58;\n  let decodeBech32;\n  try {\n    decodeBase58 = fromBase58Check(address);\n  } catch (e) {}\n  if (decodeBase58) {\n    if (decodeBase58.version === network.pubKeyHash)\n      return payments.p2pkh({ hash: decodeBase58.hash }).output;\n    if (decodeBase58.version === network.scriptHash)\n      return payments.p2sh({ hash: decodeBase58.hash }).output;\n  } else {\n    try {\n      decodeBech32 = fromBech32(address);\n    } catch (e) {}\n    if (decodeBech32) {\n      if (decodeBech32.prefix !== network.bech32)\n        throw new Error(address + ' has an invalid prefix');\n      if (decodeBech32.version === 0) {\n        if (decodeBech32.data.length === 20)\n          return payments.p2wpkh({ hash: decodeBech32.data }).output;\n        if (decodeBech32.data.length === 32)\n          return payments.p2wsh({ hash: decodeBech32.data }).output;\n      } else if (decodeBech32.version === 1) {\n        if (decodeBech32.data.length === 32)\n          return payments.p2tr({ pubkey: decodeBech32.data }).output;\n      } else if (\n        decodeBech32.version >= FUTURE_SEGWIT_MIN_VERSION &&\n        decodeBech32.version <= FUTURE_SEGWIT_MAX_VERSION &&\n        decodeBech32.data.length >= FUTURE_SEGWIT_MIN_SIZE &&\n        decodeBech32.data.length <= FUTURE_SEGWIT_MAX_SIZE\n      ) {\n        console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n        return bscript.compile([\n          decodeBech32.version + FUTURE_SEGWIT_VERSION_DIFF,\n          decodeBech32.data,\n        ]);\n      }\n    }\n  }\n  throw new Error(address + ' has no matching Script');\n}\nexports.toOutputScript = toOutputScript;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.fastMerkleRoot = void 0;\nfunction fastMerkleRoot(values, digestFn) {\n  if (!Array.isArray(values)) throw TypeError('Expected values Array');\n  if (typeof digestFn !== 'function')\n    throw TypeError('Expected digest Function');\n  let length = values.length;\n  const results = values.concat();\n  while (length > 1) {\n    let j = 0;\n    for (let i = 0; i < length; i += 2, ++j) {\n      const left = results[i];\n      const right = i + 1 === length ? left : results[i + 1];\n      const data = Buffer.concat([left, right]);\n      results[j] = digestFn(data);\n    }\n    length = j;\n  }\n  return results[0];\n}\nexports.fastMerkleRoot = fastMerkleRoot;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Transaction = void 0;\nconst bufferutils_1 = require('./bufferutils');\nconst bcrypto = require('./crypto');\nconst bscript = require('./script');\nconst script_1 = require('./script');\nconst types = require('./types');\nconst { typeforce } = types;\nfunction varSliceSize(someScript) {\n  const length = someScript.length;\n  return bufferutils_1.varuint.encodingLength(length) + length;\n}\nfunction vectorSize(someVector) {\n  const length = someVector.length;\n  return (\n    bufferutils_1.varuint.encodingLength(length) +\n    someVector.reduce((sum, witness) => {\n      return sum + varSliceSize(witness);\n    }, 0)\n  );\n}\nconst EMPTY_BUFFER = Buffer.allocUnsafe(0);\nconst EMPTY_WITNESS = [];\nconst ZERO = Buffer.from(\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'hex',\n);\nconst ONE = Buffer.from(\n  '0000000000000000000000000000000000000000000000000000000000000001',\n  'hex',\n);\nconst VALUE_UINT64_MAX = Buffer.from('ffffffffffffffff', 'hex');\nconst BLANK_OUTPUT = {\n  script: EMPTY_BUFFER,\n  valueBuffer: VALUE_UINT64_MAX,\n};\nfunction isOutput(out) {\n  return out.value !== undefined;\n}\nclass Transaction {\n  constructor() {\n    this.version = 1;\n    this.locktime = 0;\n    this.ins = [];\n    this.outs = [];\n  }\n  static fromBuffer(buffer, _NO_STRICT) {\n    const bufferReader = new bufferutils_1.BufferReader(buffer);\n    const tx = new Transaction();\n    tx.version = bufferReader.readInt32();\n    const marker = bufferReader.readUInt8();\n    const flag = bufferReader.readUInt8();\n    let hasWitnesses = false;\n    if (\n      marker === Transaction.ADVANCED_TRANSACTION_MARKER &&\n      flag === Transaction.ADVANCED_TRANSACTION_FLAG\n    ) {\n      hasWitnesses = true;\n    } else {\n      bufferReader.offset -= 2;\n    }\n    const vinLen = bufferReader.readVarInt();\n    for (let i = 0; i < vinLen; ++i) {\n      tx.ins.push({\n        hash: bufferReader.readSlice(32),\n        index: bufferReader.readUInt32(),\n        script: bufferReader.readVarSlice(),\n        sequence: bufferReader.readUInt32(),\n        witness: EMPTY_WITNESS,\n      });\n    }\n    const voutLen = bufferReader.readVarInt();\n    for (let i = 0; i < voutLen; ++i) {\n      tx.outs.push({\n        value: bufferReader.readUInt64(),\n        script: bufferReader.readVarSlice(),\n      });\n    }\n    if (hasWitnesses) {\n      for (let i = 0; i < vinLen; ++i) {\n        tx.ins[i].witness = bufferReader.readVector();\n      }\n      // was this pointless?\n      if (!tx.hasWitnesses())\n        throw new Error('Transaction has superfluous witness data');\n    }\n    tx.locktime = bufferReader.readUInt32();\n    if (_NO_STRICT) return tx;\n    if (bufferReader.offset !== buffer.length)\n      throw new Error('Transaction has unexpected data');\n    return tx;\n  }\n  static fromHex(hex) {\n    return Transaction.fromBuffer(Buffer.from(hex, 'hex'), false);\n  }\n  static isCoinbaseHash(buffer) {\n    typeforce(types.Hash256bit, buffer);\n    for (let i = 0; i < 32; ++i) {\n      if (buffer[i] !== 0) return false;\n    }\n    return true;\n  }\n  isCoinbase() {\n    return (\n      this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash)\n    );\n  }\n  addInput(hash, index, sequence, scriptSig) {\n    typeforce(\n      types.tuple(\n        types.Hash256bit,\n        types.UInt32,\n        types.maybe(types.UInt32),\n        types.maybe(types.Buffer),\n      ),\n      arguments,\n    );\n    if (types.Null(sequence)) {\n      sequence = Transaction.DEFAULT_SEQUENCE;\n    }\n    // Add the input and return the input's index\n    return (\n      this.ins.push({\n        hash,\n        index,\n        script: scriptSig || EMPTY_BUFFER,\n        sequence: sequence,\n        witness: EMPTY_WITNESS,\n      }) - 1\n    );\n  }\n  addOutput(scriptPubKey, value) {\n    typeforce(types.tuple(types.Buffer, types.Satoshi), arguments);\n    // Add the output and return the output's index\n    return (\n      this.outs.push({\n        script: scriptPubKey,\n        value,\n      }) - 1\n    );\n  }\n  hasWitnesses() {\n    return this.ins.some(x => {\n      return x.witness.length !== 0;\n    });\n  }\n  weight() {\n    const base = this.byteLength(false);\n    const total = this.byteLength(true);\n    return base * 3 + total;\n  }\n  virtualSize() {\n    return Math.ceil(this.weight() / 4);\n  }\n  byteLength(_ALLOW_WITNESS = true) {\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    return (\n      (hasWitnesses ? 10 : 8) +\n      bufferutils_1.varuint.encodingLength(this.ins.length) +\n      bufferutils_1.varuint.encodingLength(this.outs.length) +\n      this.ins.reduce((sum, input) => {\n        return sum + 40 + varSliceSize(input.script);\n      }, 0) +\n      this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0) +\n      (hasWitnesses\n        ? this.ins.reduce((sum, input) => {\n            return sum + vectorSize(input.witness);\n          }, 0)\n        : 0)\n    );\n  }\n  clone() {\n    const newTx = new Transaction();\n    newTx.version = this.version;\n    newTx.locktime = this.locktime;\n    newTx.ins = this.ins.map(txIn => {\n      return {\n        hash: txIn.hash,\n        index: txIn.index,\n        script: txIn.script,\n        sequence: txIn.sequence,\n        witness: txIn.witness,\n      };\n    });\n    newTx.outs = this.outs.map(txOut => {\n      return {\n        script: txOut.script,\n        value: txOut.value,\n      };\n    });\n    return newTx;\n  }\n  /**\n   * Hash transaction for signing a specific input.\n   *\n   * Bitcoin uses a different hash for each signed transaction input.\n   * This method copies the transaction, makes the necessary changes based on the\n   * hashType, and then hashes the result.\n   * This hash can then be used to sign the provided transaction input.\n   */\n  hashForSignature(inIndex, prevOutScript, hashType) {\n    typeforce(\n      types.tuple(types.UInt32, types.Buffer, /* types.UInt8 */ types.Number),\n      arguments,\n    );\n    // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n    if (inIndex >= this.ins.length) return ONE;\n    // ignore OP_CODESEPARATOR\n    const ourScript = bscript.compile(\n      bscript.decompile(prevOutScript).filter(x => {\n        return x !== script_1.OPS.OP_CODESEPARATOR;\n      }),\n    );\n    const txTmp = this.clone();\n    // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n    if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n      txTmp.outs = [];\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, i) => {\n        if (i === inIndex) return;\n        input.sequence = 0;\n      });\n      // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n    } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n      // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n      if (inIndex >= this.outs.length) return ONE;\n      // truncate outputs after\n      txTmp.outs.length = inIndex + 1;\n      // \"blank\" outputs before\n      for (let i = 0; i < inIndex; i++) {\n        txTmp.outs[i] = BLANK_OUTPUT;\n      }\n      // ignore sequence numbers (except at inIndex)\n      txTmp.ins.forEach((input, y) => {\n        if (y === inIndex) return;\n        input.sequence = 0;\n      });\n    }\n    // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n    if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n      txTmp.ins = [txTmp.ins[inIndex]];\n      txTmp.ins[0].script = ourScript;\n      // SIGHASH_ALL: only ignore input scripts\n    } else {\n      // \"blank\" others input scripts\n      txTmp.ins.forEach(input => {\n        input.script = EMPTY_BUFFER;\n      });\n      txTmp.ins[inIndex].script = ourScript;\n    }\n    // serialize and hash\n    const buffer = Buffer.allocUnsafe(txTmp.byteLength(false) + 4);\n    buffer.writeInt32LE(hashType, buffer.length - 4);\n    txTmp.__toBuffer(buffer, 0, false);\n    return bcrypto.hash256(buffer);\n  }\n  hashForWitnessV1(inIndex, prevOutScripts, values, hashType, leafHash, annex) {\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#common-signature-message\n    typeforce(\n      types.tuple(\n        types.UInt32,\n        typeforce.arrayOf(types.Buffer),\n        typeforce.arrayOf(types.Satoshi),\n        types.UInt32,\n      ),\n      arguments,\n    );\n    if (\n      values.length !== this.ins.length ||\n      prevOutScripts.length !== this.ins.length\n    ) {\n      throw new Error('Must supply prevout script and value for all inputs');\n    }\n    const outputType =\n      hashType === Transaction.SIGHASH_DEFAULT\n        ? Transaction.SIGHASH_ALL\n        : hashType & Transaction.SIGHASH_OUTPUT_MASK;\n    const inputType = hashType & Transaction.SIGHASH_INPUT_MASK;\n    const isAnyoneCanPay = inputType === Transaction.SIGHASH_ANYONECANPAY;\n    const isNone = outputType === Transaction.SIGHASH_NONE;\n    const isSingle = outputType === Transaction.SIGHASH_SINGLE;\n    let hashPrevouts = EMPTY_BUFFER;\n    let hashAmounts = EMPTY_BUFFER;\n    let hashScriptPubKeys = EMPTY_BUFFER;\n    let hashSequences = EMPTY_BUFFER;\n    let hashOutputs = EMPTY_BUFFER;\n    if (!isAnyoneCanPay) {\n      let bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        36 * this.ins.length,\n      );\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = bcrypto.sha256(bufferWriter.end());\n      bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        8 * this.ins.length,\n      );\n      values.forEach(value => bufferWriter.writeUInt64(value));\n      hashAmounts = bcrypto.sha256(bufferWriter.end());\n      bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        prevOutScripts.map(varSliceSize).reduce((a, b) => a + b),\n      );\n      prevOutScripts.forEach(prevOutScript =>\n        bufferWriter.writeVarSlice(prevOutScript),\n      );\n      hashScriptPubKeys = bcrypto.sha256(bufferWriter.end());\n      bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        4 * this.ins.length,\n      );\n      this.ins.forEach(txIn => bufferWriter.writeUInt32(txIn.sequence));\n      hashSequences = bcrypto.sha256(bufferWriter.end());\n    }\n    if (!(isNone || isSingle)) {\n      const txOutsSize = this.outs\n        .map(output => 8 + varSliceSize(output.script))\n        .reduce((a, b) => a + b);\n      const bufferWriter = bufferutils_1.BufferWriter.withCapacity(txOutsSize);\n      this.outs.forEach(out => {\n        bufferWriter.writeUInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = bcrypto.sha256(bufferWriter.end());\n    } else if (isSingle && inIndex < this.outs.length) {\n      const output = this.outs[inIndex];\n      const bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        8 + varSliceSize(output.script),\n      );\n      bufferWriter.writeUInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = bcrypto.sha256(bufferWriter.end());\n    }\n    const spendType = (leafHash ? 2 : 0) + (annex ? 1 : 0);\n    // Length calculation from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-14\n    // With extension from:\n    // https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#signature-validation\n    const sigMsgSize =\n      174 -\n      (isAnyoneCanPay ? 49 : 0) -\n      (isNone ? 32 : 0) +\n      (annex ? 32 : 0) +\n      (leafHash ? 37 : 0);\n    const sigMsgWriter = bufferutils_1.BufferWriter.withCapacity(sigMsgSize);\n    sigMsgWriter.writeUInt8(hashType);\n    // Transaction\n    sigMsgWriter.writeInt32(this.version);\n    sigMsgWriter.writeUInt32(this.locktime);\n    sigMsgWriter.writeSlice(hashPrevouts);\n    sigMsgWriter.writeSlice(hashAmounts);\n    sigMsgWriter.writeSlice(hashScriptPubKeys);\n    sigMsgWriter.writeSlice(hashSequences);\n    if (!(isNone || isSingle)) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // Input\n    sigMsgWriter.writeUInt8(spendType);\n    if (isAnyoneCanPay) {\n      const input = this.ins[inIndex];\n      sigMsgWriter.writeSlice(input.hash);\n      sigMsgWriter.writeUInt32(input.index);\n      sigMsgWriter.writeUInt64(values[inIndex]);\n      sigMsgWriter.writeVarSlice(prevOutScripts[inIndex]);\n      sigMsgWriter.writeUInt32(input.sequence);\n    } else {\n      sigMsgWriter.writeUInt32(inIndex);\n    }\n    if (annex) {\n      const bufferWriter = bufferutils_1.BufferWriter.withCapacity(\n        varSliceSize(annex),\n      );\n      bufferWriter.writeVarSlice(annex);\n      sigMsgWriter.writeSlice(bcrypto.sha256(bufferWriter.end()));\n    }\n    // Output\n    if (isSingle) {\n      sigMsgWriter.writeSlice(hashOutputs);\n    }\n    // BIP342 extension\n    if (leafHash) {\n      sigMsgWriter.writeSlice(leafHash);\n      sigMsgWriter.writeUInt8(0);\n      sigMsgWriter.writeUInt32(0xffffffff);\n    }\n    // Extra zero byte because:\n    // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-19\n    return bcrypto.taggedHash(\n      'TapSighash',\n      Buffer.concat([Buffer.of(0x00), sigMsgWriter.end()]),\n    );\n  }\n  hashForWitnessV0(inIndex, prevOutScript, value, hashType) {\n    typeforce(\n      types.tuple(types.UInt32, types.Buffer, types.Satoshi, types.UInt32),\n      arguments,\n    );\n    let tbuffer = Buffer.from([]);\n    let bufferWriter;\n    let hashOutputs = ZERO;\n    let hashPrevouts = ZERO;\n    let hashSequence = ZERO;\n    if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n      tbuffer = Buffer.allocUnsafe(36 * this.ins.length);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeSlice(txIn.hash);\n        bufferWriter.writeUInt32(txIn.index);\n      });\n      hashPrevouts = bcrypto.hash256(tbuffer);\n    }\n    if (\n      !(hashType & Transaction.SIGHASH_ANYONECANPAY) &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      tbuffer = Buffer.allocUnsafe(4 * this.ins.length);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.ins.forEach(txIn => {\n        bufferWriter.writeUInt32(txIn.sequence);\n      });\n      hashSequence = bcrypto.hash256(tbuffer);\n    }\n    if (\n      (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE &&\n      (hashType & 0x1f) !== Transaction.SIGHASH_NONE\n    ) {\n      const txOutsSize = this.outs.reduce((sum, output) => {\n        return sum + 8 + varSliceSize(output.script);\n      }, 0);\n      tbuffer = Buffer.allocUnsafe(txOutsSize);\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      this.outs.forEach(out => {\n        bufferWriter.writeUInt64(out.value);\n        bufferWriter.writeVarSlice(out.script);\n      });\n      hashOutputs = bcrypto.hash256(tbuffer);\n    } else if (\n      (hashType & 0x1f) === Transaction.SIGHASH_SINGLE &&\n      inIndex < this.outs.length\n    ) {\n      const output = this.outs[inIndex];\n      tbuffer = Buffer.allocUnsafe(8 + varSliceSize(output.script));\n      bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n      bufferWriter.writeUInt64(output.value);\n      bufferWriter.writeVarSlice(output.script);\n      hashOutputs = bcrypto.hash256(tbuffer);\n    }\n    tbuffer = Buffer.allocUnsafe(156 + varSliceSize(prevOutScript));\n    bufferWriter = new bufferutils_1.BufferWriter(tbuffer, 0);\n    const input = this.ins[inIndex];\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(hashPrevouts);\n    bufferWriter.writeSlice(hashSequence);\n    bufferWriter.writeSlice(input.hash);\n    bufferWriter.writeUInt32(input.index);\n    bufferWriter.writeVarSlice(prevOutScript);\n    bufferWriter.writeUInt64(value);\n    bufferWriter.writeUInt32(input.sequence);\n    bufferWriter.writeSlice(hashOutputs);\n    bufferWriter.writeUInt32(this.locktime);\n    bufferWriter.writeUInt32(hashType);\n    return bcrypto.hash256(tbuffer);\n  }\n  getHash(forWitness) {\n    // wtxid for coinbase is always 32 bytes of 0x00\n    if (forWitness && this.isCoinbase()) return Buffer.alloc(32, 0);\n    return bcrypto.hash256(this.__toBuffer(undefined, undefined, forWitness));\n  }\n  getId() {\n    // transaction hash's are displayed in reverse order\n    return (0, bufferutils_1.reverseBuffer)(this.getHash(false)).toString(\n      'hex',\n    );\n  }\n  toBuffer(buffer, initialOffset) {\n    return this.__toBuffer(buffer, initialOffset, true);\n  }\n  toHex() {\n    return this.toBuffer(undefined, undefined).toString('hex');\n  }\n  setInputScript(index, scriptSig) {\n    typeforce(types.tuple(types.Number, types.Buffer), arguments);\n    this.ins[index].script = scriptSig;\n  }\n  setWitness(index, witness) {\n    typeforce(types.tuple(types.Number, [types.Buffer]), arguments);\n    this.ins[index].witness = witness;\n  }\n  __toBuffer(buffer, initialOffset, _ALLOW_WITNESS = false) {\n    if (!buffer) buffer = Buffer.allocUnsafe(this.byteLength(_ALLOW_WITNESS));\n    const bufferWriter = new bufferutils_1.BufferWriter(\n      buffer,\n      initialOffset || 0,\n    );\n    bufferWriter.writeInt32(this.version);\n    const hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n    if (hasWitnesses) {\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n      bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n    }\n    bufferWriter.writeVarInt(this.ins.length);\n    this.ins.forEach(txIn => {\n      bufferWriter.writeSlice(txIn.hash);\n      bufferWriter.writeUInt32(txIn.index);\n      bufferWriter.writeVarSlice(txIn.script);\n      bufferWriter.writeUInt32(txIn.sequence);\n    });\n    bufferWriter.writeVarInt(this.outs.length);\n    this.outs.forEach(txOut => {\n      if (isOutput(txOut)) {\n        bufferWriter.writeUInt64(txOut.value);\n      } else {\n        bufferWriter.writeSlice(txOut.valueBuffer);\n      }\n      bufferWriter.writeVarSlice(txOut.script);\n    });\n    if (hasWitnesses) {\n      this.ins.forEach(input => {\n        bufferWriter.writeVector(input.witness);\n      });\n    }\n    bufferWriter.writeUInt32(this.locktime);\n    // avoid slicing unless necessary\n    if (initialOffset !== undefined)\n      return buffer.slice(initialOffset, bufferWriter.offset);\n    return buffer;\n  }\n}\nexports.Transaction = Transaction;\nTransaction.DEFAULT_SEQUENCE = 0xffffffff;\nTransaction.SIGHASH_DEFAULT = 0x00;\nTransaction.SIGHASH_ALL = 0x01;\nTransaction.SIGHASH_NONE = 0x02;\nTransaction.SIGHASH_SINGLE = 0x03;\nTransaction.SIGHASH_ANYONECANPAY = 0x80;\nTransaction.SIGHASH_OUTPUT_MASK = 0x03;\nTransaction.SIGHASH_INPUT_MASK = 0x80;\nTransaction.ADVANCED_TRANSACTION_MARKER = 0x00;\nTransaction.ADVANCED_TRANSACTION_FLAG = 0x01;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Block = void 0;\nconst bufferutils_1 = require('./bufferutils');\nconst bcrypto = require('./crypto');\nconst merkle_1 = require('./merkle');\nconst transaction_1 = require('./transaction');\nconst types = require('./types');\nconst { typeforce } = types;\nconst errorMerkleNoTxes = new TypeError(\n  'Cannot compute merkle root for zero transactions',\n);\nconst errorWitnessNotSegwit = new TypeError(\n  'Cannot compute witness commit for non-segwit block',\n);\nclass Block {\n  constructor() {\n    this.version = 1;\n    this.prevHash = undefined;\n    this.merkleRoot = undefined;\n    this.timestamp = 0;\n    this.witnessCommit = undefined;\n    this.bits = 0;\n    this.nonce = 0;\n    this.transactions = undefined;\n  }\n  static fromBuffer(buffer) {\n    if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)');\n    const bufferReader = new bufferutils_1.BufferReader(buffer);\n    const block = new Block();\n    block.version = bufferReader.readInt32();\n    block.prevHash = bufferReader.readSlice(32);\n    block.merkleRoot = bufferReader.readSlice(32);\n    block.timestamp = bufferReader.readUInt32();\n    block.bits = bufferReader.readUInt32();\n    block.nonce = bufferReader.readUInt32();\n    if (buffer.length === 80) return block;\n    const readTransaction = () => {\n      const tx = transaction_1.Transaction.fromBuffer(\n        bufferReader.buffer.slice(bufferReader.offset),\n        true,\n      );\n      bufferReader.offset += tx.byteLength();\n      return tx;\n    };\n    const nTransactions = bufferReader.readVarInt();\n    block.transactions = [];\n    for (let i = 0; i < nTransactions; ++i) {\n      const tx = readTransaction();\n      block.transactions.push(tx);\n    }\n    const witnessCommit = block.getWitnessCommit();\n    // This Block contains a witness commit\n    if (witnessCommit) block.witnessCommit = witnessCommit;\n    return block;\n  }\n  static fromHex(hex) {\n    return Block.fromBuffer(Buffer.from(hex, 'hex'));\n  }\n  static calculateTarget(bits) {\n    const exponent = ((bits & 0xff000000) >> 24) - 3;\n    const mantissa = bits & 0x007fffff;\n    const target = Buffer.alloc(32, 0);\n    target.writeUIntBE(mantissa, 29 - exponent, 3);\n    return target;\n  }\n  static calculateMerkleRoot(transactions, forWitness) {\n    typeforce([{ getHash: types.Function }], transactions);\n    if (transactions.length === 0) throw errorMerkleNoTxes;\n    if (forWitness && !txesHaveWitnessCommit(transactions))\n      throw errorWitnessNotSegwit;\n    const hashes = transactions.map(transaction =>\n      transaction.getHash(forWitness),\n    );\n    const rootHash = (0, merkle_1.fastMerkleRoot)(hashes, bcrypto.hash256);\n    return forWitness\n      ? bcrypto.hash256(\n          Buffer.concat([rootHash, transactions[0].ins[0].witness[0]]),\n        )\n      : rootHash;\n  }\n  getWitnessCommit() {\n    if (!txesHaveWitnessCommit(this.transactions)) return null;\n    // The merkle root for the witness data is in an OP_RETURN output.\n    // There is no rule for the index of the output, so use filter to find it.\n    // The root is prepended with 0xaa21a9ed so check for 0x6a24aa21a9ed\n    // If multiple commits are found, the output with highest index is assumed.\n    const witnessCommits = this.transactions[0].outs\n      .filter(out =>\n        out.script.slice(0, 6).equals(Buffer.from('6a24aa21a9ed', 'hex')),\n      )\n      .map(out => out.script.slice(6, 38));\n    if (witnessCommits.length === 0) return null;\n    // Use the commit with the highest output (should only be one though)\n    const result = witnessCommits[witnessCommits.length - 1];\n    if (!(result instanceof Buffer && result.length === 32)) return null;\n    return result;\n  }\n  hasWitnessCommit() {\n    if (\n      this.witnessCommit instanceof Buffer &&\n      this.witnessCommit.length === 32\n    )\n      return true;\n    if (this.getWitnessCommit() !== null) return true;\n    return false;\n  }\n  hasWitness() {\n    return anyTxHasWitness(this.transactions);\n  }\n  weight() {\n    const base = this.byteLength(false, false);\n    const total = this.byteLength(false, true);\n    return base * 3 + total;\n  }\n  byteLength(headersOnly, allowWitness = true) {\n    if (headersOnly || !this.transactions) return 80;\n    return (\n      80 +\n      bufferutils_1.varuint.encodingLength(this.transactions.length) +\n      this.transactions.reduce((a, x) => a + x.byteLength(allowWitness), 0)\n    );\n  }\n  getHash() {\n    return bcrypto.hash256(this.toBuffer(true));\n  }\n  getId() {\n    return (0, bufferutils_1.reverseBuffer)(this.getHash()).toString('hex');\n  }\n  getUTCDate() {\n    const date = new Date(0); // epoch\n    date.setUTCSeconds(this.timestamp);\n    return date;\n  }\n  // TODO: buffer, offset compatibility\n  toBuffer(headersOnly) {\n    const buffer = Buffer.allocUnsafe(this.byteLength(headersOnly));\n    const bufferWriter = new bufferutils_1.BufferWriter(buffer);\n    bufferWriter.writeInt32(this.version);\n    bufferWriter.writeSlice(this.prevHash);\n    bufferWriter.writeSlice(this.merkleRoot);\n    bufferWriter.writeUInt32(this.timestamp);\n    bufferWriter.writeUInt32(this.bits);\n    bufferWriter.writeUInt32(this.nonce);\n    if (headersOnly || !this.transactions) return buffer;\n    bufferutils_1.varuint.encode(\n      this.transactions.length,\n      buffer,\n      bufferWriter.offset,\n    );\n    bufferWriter.offset += bufferutils_1.varuint.encode.bytes;\n    this.transactions.forEach(tx => {\n      const txSize = tx.byteLength(); // TODO: extract from toBuffer?\n      tx.toBuffer(buffer, bufferWriter.offset);\n      bufferWriter.offset += txSize;\n    });\n    return buffer;\n  }\n  toHex(headersOnly) {\n    return this.toBuffer(headersOnly).toString('hex');\n  }\n  checkTxRoots() {\n    // If the Block has segwit transactions but no witness commit,\n    // there's no way it can be valid, so fail the check.\n    const hasWitnessCommit = this.hasWitnessCommit();\n    if (!hasWitnessCommit && this.hasWitness()) return false;\n    return (\n      this.__checkMerkleRoot() &&\n      (hasWitnessCommit ? this.__checkWitnessCommit() : true)\n    );\n  }\n  checkProofOfWork() {\n    const hash = (0, bufferutils_1.reverseBuffer)(this.getHash());\n    const target = Block.calculateTarget(this.bits);\n    return hash.compare(target) <= 0;\n  }\n  __checkMerkleRoot() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    const actualMerkleRoot = Block.calculateMerkleRoot(this.transactions);\n    return this.merkleRoot.compare(actualMerkleRoot) === 0;\n  }\n  __checkWitnessCommit() {\n    if (!this.transactions) throw errorMerkleNoTxes;\n    if (!this.hasWitnessCommit()) throw errorWitnessNotSegwit;\n    const actualWitnessCommit = Block.calculateMerkleRoot(\n      this.transactions,\n      true,\n    );\n    return this.witnessCommit.compare(actualWitnessCommit) === 0;\n  }\n}\nexports.Block = Block;\nfunction txesHaveWitnessCommit(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions[0] &&\n    transactions[0].ins &&\n    transactions[0].ins instanceof Array &&\n    transactions[0].ins[0] &&\n    transactions[0].ins[0].witness &&\n    transactions[0].ins[0].witness instanceof Array &&\n    transactions[0].ins[0].witness.length > 0\n  );\n}\nfunction anyTxHasWitness(transactions) {\n  return (\n    transactions instanceof Array &&\n    transactions.some(\n      tx =>\n        typeof tx === 'object' &&\n        tx.ins instanceof Array &&\n        tx.ins.some(\n          input =>\n            typeof input === 'object' &&\n            input.witness instanceof Array &&\n            input.witness.length > 0,\n        ),\n    )\n  );\n}\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar GlobalTypes;\n(function(GlobalTypes) {\n  GlobalTypes[(GlobalTypes['UNSIGNED_TX'] = 0)] = 'UNSIGNED_TX';\n  GlobalTypes[(GlobalTypes['GLOBAL_XPUB'] = 1)] = 'GLOBAL_XPUB';\n})((GlobalTypes = exports.GlobalTypes || (exports.GlobalTypes = {})));\nexports.GLOBAL_TYPE_NAMES = ['unsignedTx', 'globalXpub'];\nvar InputTypes;\n(function(InputTypes) {\n  InputTypes[(InputTypes['NON_WITNESS_UTXO'] = 0)] = 'NON_WITNESS_UTXO';\n  InputTypes[(InputTypes['WITNESS_UTXO'] = 1)] = 'WITNESS_UTXO';\n  InputTypes[(InputTypes['PARTIAL_SIG'] = 2)] = 'PARTIAL_SIG';\n  InputTypes[(InputTypes['SIGHASH_TYPE'] = 3)] = 'SIGHASH_TYPE';\n  InputTypes[(InputTypes['REDEEM_SCRIPT'] = 4)] = 'REDEEM_SCRIPT';\n  InputTypes[(InputTypes['WITNESS_SCRIPT'] = 5)] = 'WITNESS_SCRIPT';\n  InputTypes[(InputTypes['BIP32_DERIVATION'] = 6)] = 'BIP32_DERIVATION';\n  InputTypes[(InputTypes['FINAL_SCRIPTSIG'] = 7)] = 'FINAL_SCRIPTSIG';\n  InputTypes[(InputTypes['FINAL_SCRIPTWITNESS'] = 8)] = 'FINAL_SCRIPTWITNESS';\n  InputTypes[(InputTypes['POR_COMMITMENT'] = 9)] = 'POR_COMMITMENT';\n  InputTypes[(InputTypes['TAP_KEY_SIG'] = 19)] = 'TAP_KEY_SIG';\n  InputTypes[(InputTypes['TAP_SCRIPT_SIG'] = 20)] = 'TAP_SCRIPT_SIG';\n  InputTypes[(InputTypes['TAP_LEAF_SCRIPT'] = 21)] = 'TAP_LEAF_SCRIPT';\n  InputTypes[(InputTypes['TAP_BIP32_DERIVATION'] = 22)] =\n    'TAP_BIP32_DERIVATION';\n  InputTypes[(InputTypes['TAP_INTERNAL_KEY'] = 23)] = 'TAP_INTERNAL_KEY';\n  InputTypes[(InputTypes['TAP_MERKLE_ROOT'] = 24)] = 'TAP_MERKLE_ROOT';\n})((InputTypes = exports.InputTypes || (exports.InputTypes = {})));\nexports.INPUT_TYPE_NAMES = [\n  'nonWitnessUtxo',\n  'witnessUtxo',\n  'partialSig',\n  'sighashType',\n  'redeemScript',\n  'witnessScript',\n  'bip32Derivation',\n  'finalScriptSig',\n  'finalScriptWitness',\n  'porCommitment',\n  'tapKeySig',\n  'tapScriptSig',\n  'tapLeafScript',\n  'tapBip32Derivation',\n  'tapInternalKey',\n  'tapMerkleRoot',\n];\nvar OutputTypes;\n(function(OutputTypes) {\n  OutputTypes[(OutputTypes['REDEEM_SCRIPT'] = 0)] = 'REDEEM_SCRIPT';\n  OutputTypes[(OutputTypes['WITNESS_SCRIPT'] = 1)] = 'WITNESS_SCRIPT';\n  OutputTypes[(OutputTypes['BIP32_DERIVATION'] = 2)] = 'BIP32_DERIVATION';\n  OutputTypes[(OutputTypes['TAP_INTERNAL_KEY'] = 5)] = 'TAP_INTERNAL_KEY';\n  OutputTypes[(OutputTypes['TAP_TREE'] = 6)] = 'TAP_TREE';\n  OutputTypes[(OutputTypes['TAP_BIP32_DERIVATION'] = 7)] =\n    'TAP_BIP32_DERIVATION';\n})((OutputTypes = exports.OutputTypes || (exports.OutputTypes = {})));\nexports.OUTPUT_TYPE_NAMES = [\n  'redeemScript',\n  'witnessScript',\n  'bip32Derivation',\n  'tapInternalKey',\n  'tapTree',\n  'tapBip32Derivation',\n];\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst range = n => [...Array(n).keys()];\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.GlobalTypes.GLOBAL_XPUB) {\n    throw new Error(\n      'Decode Error: could not decode globalXpub with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (keyVal.key.length !== 79 || ![2, 3].includes(keyVal.key[46])) {\n    throw new Error(\n      'Decode Error: globalXpub has invalid extended pubkey in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if ((keyVal.value.length / 4) % 1 !== 0) {\n    throw new Error(\n      'Decode Error: Global GLOBAL_XPUB value length should be multiple of 4',\n    );\n  }\n  const extendedPubkey = keyVal.key.slice(1);\n  const data = {\n    masterFingerprint: keyVal.value.slice(0, 4),\n    extendedPubkey,\n    path: 'm',\n  };\n  for (const i of range(keyVal.value.length / 4 - 1)) {\n    const val = keyVal.value.readUInt32LE(i * 4 + 4);\n    const isHard = !!(val & 0x80000000);\n    const idx = val & 0x7fffffff;\n    data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n  }\n  return data;\n}\nexports.decode = decode;\nfunction encode(data) {\n  const head = Buffer.from([typeFields_1.GlobalTypes.GLOBAL_XPUB]);\n  const key = Buffer.concat([head, data.extendedPubkey]);\n  const splitPath = data.path.split('/');\n  const value = Buffer.allocUnsafe(splitPath.length * 4);\n  data.masterFingerprint.copy(value, 0);\n  let offset = 4;\n  splitPath.slice(1).forEach(level => {\n    const isHard = level.slice(-1) === \"'\";\n    let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n    if (isHard) num += 0x80000000;\n    value.writeUInt32LE(num, offset);\n    offset += 4;\n  });\n  return {\n    key,\n    value,\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ masterFingerprint: Buffer; extendedPubkey: Buffer; path: string; }';\nfunction check(data) {\n  const epk = data.extendedPubkey;\n  const mfp = data.masterFingerprint;\n  const p = data.path;\n  return (\n    Buffer.isBuffer(epk) &&\n    epk.length === 78 &&\n    [2, 3].indexOf(epk[45]) > -1 &&\n    Buffer.isBuffer(mfp) &&\n    mfp.length === 4 &&\n    typeof p === 'string' &&\n    !!p.match(/^m(\\/\\d+'?)*$/)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.extendedPubkey.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => v.extendedPubkey.equals(item.extendedPubkey)).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction encode(data) {\n  return {\n    key: Buffer.from([typeFields_1.GlobalTypes.UNSIGNED_TX]),\n    value: data.toBuffer(),\n  };\n}\nexports.encode = encode;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.FINAL_SCRIPTSIG) {\n    throw new Error(\n      'Decode Error: could not decode finalScriptSig with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.FINAL_SCRIPTSIG]);\n  return {\n    key,\n    value: data,\n  };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data);\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.finalScriptSig === undefined;\n}\nexports.canAdd = canAdd;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.FINAL_SCRIPTWITNESS) {\n    throw new Error(\n      'Decode Error: could not decode finalScriptWitness with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.FINAL_SCRIPTWITNESS]);\n  return {\n    key,\n    value: data,\n  };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data);\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return (\n    !!currentData && !!newData && currentData.finalScriptWitness === undefined\n  );\n}\nexports.canAdd = canAdd;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.NON_WITNESS_UTXO) {\n    throw new Error(\n      'Decode Error: could not decode nonWitnessUtxo with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(data) {\n  return {\n    key: Buffer.from([typeFields_1.InputTypes.NON_WITNESS_UTXO]),\n    value: data,\n  };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data);\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.nonWitnessUtxo === undefined;\n}\nexports.canAdd = canAdd;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.PARTIAL_SIG) {\n    throw new Error(\n      'Decode Error: could not decode partialSig with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (\n    !(keyVal.key.length === 34 || keyVal.key.length === 66) ||\n    ![2, 3, 4].includes(keyVal.key[1])\n  ) {\n    throw new Error(\n      'Decode Error: partialSig has invalid pubkey in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const pubkey = keyVal.key.slice(1);\n  return {\n    pubkey,\n    signature: keyVal.value,\n  };\n}\nexports.decode = decode;\nfunction encode(pSig) {\n  const head = Buffer.from([typeFields_1.InputTypes.PARTIAL_SIG]);\n  return {\n    key: Buffer.concat([head, pSig.pubkey]),\n    value: pSig.signature,\n  };\n}\nexports.encode = encode;\nexports.expected = '{ pubkey: Buffer; signature: Buffer; }';\nfunction check(data) {\n  return (\n    Buffer.isBuffer(data.pubkey) &&\n    Buffer.isBuffer(data.signature) &&\n    [33, 65].includes(data.pubkey.length) &&\n    [2, 3, 4].includes(data.pubkey[0]) &&\n    isDerSigWithSighash(data.signature)\n  );\n}\nexports.check = check;\nfunction isDerSigWithSighash(buf) {\n  if (!Buffer.isBuffer(buf) || buf.length < 9) return false;\n  if (buf[0] !== 0x30) return false;\n  if (buf.length !== buf[1] + 3) return false;\n  if (buf[2] !== 0x02) return false;\n  const rLen = buf[3];\n  if (rLen > 33 || rLen < 1) return false;\n  if (buf[3 + rLen + 1] !== 0x02) return false;\n  const sLen = buf[3 + rLen + 2];\n  if (sLen > 33 || sLen < 1) return false;\n  if (buf.length !== 3 + rLen + 2 + sLen + 2) return false;\n  return true;\n}\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.pubkey.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return array.filter(v => v.pubkey.equals(item.pubkey)).length === 0;\n}\nexports.canAddToArray = canAddToArray;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.POR_COMMITMENT) {\n    throw new Error(\n      'Decode Error: could not decode porCommitment with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value.toString('utf8');\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.POR_COMMITMENT]);\n  return {\n    key,\n    value: Buffer.from(data, 'utf8'),\n  };\n}\nexports.encode = encode;\nexports.expected = 'string';\nfunction check(data) {\n  return typeof data === 'string';\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.porCommitment === undefined;\n}\nexports.canAdd = canAdd;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.SIGHASH_TYPE) {\n    throw new Error(\n      'Decode Error: could not decode sighashType with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  return keyVal.value.readUInt32LE(0);\n}\nexports.decode = decode;\nfunction encode(data) {\n  const key = Buffer.from([typeFields_1.InputTypes.SIGHASH_TYPE]);\n  const value = Buffer.allocUnsafe(4);\n  value.writeUInt32LE(data, 0);\n  return {\n    key,\n    value,\n  };\n}\nexports.encode = encode;\nexports.expected = 'number';\nfunction check(data) {\n  return typeof data === 'number';\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.sighashType === undefined;\n}\nexports.canAdd = canAdd;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (\n    keyVal.key[0] !== typeFields_1.InputTypes.TAP_KEY_SIG ||\n    keyVal.key.length !== 1\n  ) {\n    throw new Error(\n      'Decode Error: could not decode tapKeySig with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (!check(keyVal.value)) {\n    throw new Error(\n      'Decode Error: tapKeySig not a valid 64-65-byte BIP340 signature',\n    );\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(value) {\n  const key = Buffer.from([typeFields_1.InputTypes.TAP_KEY_SIG]);\n  return { key, value };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data) && (data.length === 64 || data.length === 65);\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapKeySig === undefined;\n}\nexports.canAdd = canAdd;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.TAP_LEAF_SCRIPT) {\n    throw new Error(\n      'Decode Error: could not decode tapLeafScript with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if ((keyVal.key.length - 2) % 32 !== 0) {\n    throw new Error(\n      'Decode Error: tapLeafScript has invalid control block in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const leafVersion = keyVal.value[keyVal.value.length - 1];\n  if ((keyVal.key[1] & 0xfe) !== leafVersion) {\n    throw new Error(\n      'Decode Error: tapLeafScript bad leaf version in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const script = keyVal.value.slice(0, -1);\n  const controlBlock = keyVal.key.slice(1);\n  return { controlBlock, script, leafVersion };\n}\nexports.decode = decode;\nfunction encode(tScript) {\n  const head = Buffer.from([typeFields_1.InputTypes.TAP_LEAF_SCRIPT]);\n  const verBuf = Buffer.from([tScript.leafVersion]);\n  return {\n    key: Buffer.concat([head, tScript.controlBlock]),\n    value: Buffer.concat([tScript.script, verBuf]),\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ controlBlock: Buffer; leafVersion: number, script: Buffer; }';\nfunction check(data) {\n  return (\n    Buffer.isBuffer(data.controlBlock) &&\n    (data.controlBlock.length - 1) % 32 === 0 &&\n    (data.controlBlock[0] & 0xfe) === data.leafVersion &&\n    Buffer.isBuffer(data.script)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString = item.controlBlock.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(v => v.controlBlock.equals(item.controlBlock)).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (\n    keyVal.key[0] !== typeFields_1.InputTypes.TAP_MERKLE_ROOT ||\n    keyVal.key.length !== 1\n  ) {\n    throw new Error(\n      'Decode Error: could not decode tapMerkleRoot with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (!check(keyVal.value)) {\n    throw new Error('Decode Error: tapMerkleRoot not a 32-byte hash');\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(value) {\n  const key = Buffer.from([typeFields_1.InputTypes.TAP_MERKLE_ROOT]);\n  return { key, value };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data) && data.length === 32;\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapMerkleRoot === undefined;\n}\nexports.canAdd = canAdd;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.TAP_SCRIPT_SIG) {\n    throw new Error(\n      'Decode Error: could not decode tapScriptSig with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (keyVal.key.length !== 65) {\n    throw new Error(\n      'Decode Error: tapScriptSig has invalid key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (keyVal.value.length !== 64 && keyVal.value.length !== 65) {\n    throw new Error(\n      'Decode Error: tapScriptSig has invalid signature in key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const pubkey = keyVal.key.slice(1, 33);\n  const leafHash = keyVal.key.slice(33);\n  return {\n    pubkey,\n    leafHash,\n    signature: keyVal.value,\n  };\n}\nexports.decode = decode;\nfunction encode(tSig) {\n  const head = Buffer.from([typeFields_1.InputTypes.TAP_SCRIPT_SIG]);\n  return {\n    key: Buffer.concat([head, tSig.pubkey, tSig.leafHash]),\n    value: tSig.signature,\n  };\n}\nexports.encode = encode;\nexports.expected = '{ pubkey: Buffer; leafHash: Buffer; signature: Buffer; }';\nfunction check(data) {\n  return (\n    Buffer.isBuffer(data.pubkey) &&\n    Buffer.isBuffer(data.leafHash) &&\n    Buffer.isBuffer(data.signature) &&\n    data.pubkey.length === 32 &&\n    data.leafHash.length === 32 &&\n    (data.signature.length === 64 || data.signature.length === 65)\n  );\n}\nexports.check = check;\nfunction canAddToArray(array, item, dupeSet) {\n  const dupeString =\n    item.pubkey.toString('hex') + item.leafHash.toString('hex');\n  if (dupeSet.has(dupeString)) return false;\n  dupeSet.add(dupeString);\n  return (\n    array.filter(\n      v => v.pubkey.equals(item.pubkey) && v.leafHash.equals(item.leafHash),\n    ).length === 0\n  );\n}\nexports.canAddToArray = canAddToArray;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\n// Number.MAX_SAFE_INTEGER\nconst MAX_SAFE_INTEGER = 9007199254740991;\nfunction checkUInt53(n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0)\n    throw new RangeError('value out of range');\n}\nfunction encode(_number, buffer, offset) {\n  checkUInt53(_number);\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(_number));\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  // 8 bit\n  if (_number < 0xfd) {\n    buffer.writeUInt8(_number, offset);\n    Object.assign(encode, { bytes: 1 });\n    // 16 bit\n  } else if (_number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset);\n    buffer.writeUInt16LE(_number, offset + 1);\n    Object.assign(encode, { bytes: 3 });\n    // 32 bit\n  } else if (_number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset);\n    buffer.writeUInt32LE(_number, offset + 1);\n    Object.assign(encode, { bytes: 5 });\n    // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset);\n    buffer.writeUInt32LE(_number >>> 0, offset + 1);\n    buffer.writeUInt32LE((_number / 0x100000000) | 0, offset + 5);\n    Object.assign(encode, { bytes: 9 });\n  }\n  return buffer;\n}\nexports.encode = encode;\nfunction decode(buffer, offset) {\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('buffer must be a Buffer instance');\n  if (!offset) offset = 0;\n  const first = buffer.readUInt8(offset);\n  // 8 bit\n  if (first < 0xfd) {\n    Object.assign(decode, { bytes: 1 });\n    return first;\n    // 16 bit\n  } else if (first === 0xfd) {\n    Object.assign(decode, { bytes: 3 });\n    return buffer.readUInt16LE(offset + 1);\n    // 32 bit\n  } else if (first === 0xfe) {\n    Object.assign(decode, { bytes: 5 });\n    return buffer.readUInt32LE(offset + 1);\n    // 64 bit\n  } else {\n    Object.assign(decode, { bytes: 9 });\n    const lo = buffer.readUInt32LE(offset + 1);\n    const hi = buffer.readUInt32LE(offset + 5);\n    const _number = hi * 0x0100000000 + lo;\n    checkUInt53(_number);\n    return _number;\n  }\n}\nexports.decode = decode;\nfunction encodingLength(_number) {\n  checkUInt53(_number);\n  return _number < 0xfd\n    ? 1\n    : _number <= 0xffff\n    ? 3\n    : _number <= 0xffffffff\n    ? 5\n    : 9;\n}\nexports.encodingLength = encodingLength;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst varuint = require('./varint');\nexports.range = n => [...Array(n).keys()];\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nexports.reverseBuffer = reverseBuffer;\nfunction keyValsToBuffer(keyVals) {\n  const buffers = keyVals.map(keyValToBuffer);\n  buffers.push(Buffer.from([0]));\n  return Buffer.concat(buffers);\n}\nexports.keyValsToBuffer = keyValsToBuffer;\nfunction keyValToBuffer(keyVal) {\n  const keyLen = keyVal.key.length;\n  const valLen = keyVal.value.length;\n  const keyVarIntLen = varuint.encodingLength(keyLen);\n  const valVarIntLen = varuint.encodingLength(valLen);\n  const buffer = Buffer.allocUnsafe(\n    keyVarIntLen + keyLen + valVarIntLen + valLen,\n  );\n  varuint.encode(keyLen, buffer, 0);\n  keyVal.key.copy(buffer, keyVarIntLen);\n  varuint.encode(valLen, buffer, keyVarIntLen + keyLen);\n  keyVal.value.copy(buffer, keyVarIntLen + keyLen + valVarIntLen);\n  return buffer;\n}\nexports.keyValToBuffer = keyValToBuffer;\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number')\n    throw new Error('cannot write a non-number as a number');\n  if (value < 0)\n    throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value)\n    throw new Error('value has a fractional component');\n}\nfunction readUInt64LE(buffer, offset) {\n  const a = buffer.readUInt32LE(offset);\n  let b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\nexports.readUInt64LE = readUInt64LE;\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n}\nexports.writeUInt64LE = writeUInt64LE;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst tools_1 = require('../tools');\nconst varuint = require('../varint');\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.WITNESS_UTXO) {\n    throw new Error(\n      'Decode Error: could not decode witnessUtxo with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  const value = tools_1.readUInt64LE(keyVal.value, 0);\n  let _offset = 8;\n  const scriptLen = varuint.decode(keyVal.value, _offset);\n  _offset += varuint.encodingLength(scriptLen);\n  const script = keyVal.value.slice(_offset);\n  if (script.length !== scriptLen) {\n    throw new Error('Decode Error: WITNESS_UTXO script is not proper length');\n  }\n  return {\n    script,\n    value,\n  };\n}\nexports.decode = decode;\nfunction encode(data) {\n  const { script, value } = data;\n  const varintLen = varuint.encodingLength(script.length);\n  const result = Buffer.allocUnsafe(8 + varintLen + script.length);\n  tools_1.writeUInt64LE(result, value, 0);\n  varuint.encode(script.length, result, 8);\n  script.copy(result, 8 + varintLen);\n  return {\n    key: Buffer.from([typeFields_1.InputTypes.WITNESS_UTXO]),\n    value: result,\n  };\n}\nexports.encode = encode;\nexports.expected = '{ script: Buffer; value: number; }';\nfunction check(data) {\n  return Buffer.isBuffer(data.script) && typeof data.value === 'number';\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.witnessUtxo === undefined;\n}\nexports.canAdd = canAdd;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst varuint = require('../varint');\nfunction decode(keyVal) {\n  if (\n    keyVal.key[0] !== typeFields_1.OutputTypes.TAP_TREE ||\n    keyVal.key.length !== 1\n  ) {\n    throw new Error(\n      'Decode Error: could not decode tapTree with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  let _offset = 0;\n  const data = [];\n  while (_offset < keyVal.value.length) {\n    const depth = keyVal.value[_offset++];\n    const leafVersion = keyVal.value[_offset++];\n    const scriptLen = varuint.decode(keyVal.value, _offset);\n    _offset += varuint.encodingLength(scriptLen);\n    data.push({\n      depth,\n      leafVersion,\n      script: keyVal.value.slice(_offset, _offset + scriptLen),\n    });\n    _offset += scriptLen;\n  }\n  return { leaves: data };\n}\nexports.decode = decode;\nfunction encode(tree) {\n  const key = Buffer.from([typeFields_1.OutputTypes.TAP_TREE]);\n  const bufs = [].concat(\n    ...tree.leaves.map(tapLeaf => [\n      Buffer.of(tapLeaf.depth, tapLeaf.leafVersion),\n      varuint.encode(tapLeaf.script.length),\n      tapLeaf.script,\n    ]),\n  );\n  return {\n    key,\n    value: Buffer.concat(bufs),\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }';\nfunction check(data) {\n  return (\n    Array.isArray(data.leaves) &&\n    data.leaves.every(\n      tapLeaf =>\n        tapLeaf.depth >= 0 &&\n        tapLeaf.depth <= 128 &&\n        (tapLeaf.leafVersion & 0xfe) === tapLeaf.leafVersion &&\n        Buffer.isBuffer(tapLeaf.script),\n    )\n  );\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapTree === undefined;\n}\nexports.canAdd = canAdd;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst range = n => [...Array(n).keys()];\nconst isValidDERKey = pubkey =>\n  (pubkey.length === 33 && [2, 3].includes(pubkey[0])) ||\n  (pubkey.length === 65 && 4 === pubkey[0]);\nfunction makeConverter(TYPE_BYTE, isValidPubkey = isValidDERKey) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode bip32Derivation with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    const pubkey = keyVal.key.slice(1);\n    if (!isValidPubkey(pubkey)) {\n      throw new Error(\n        'Decode Error: bip32Derivation has invalid pubkey in key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    if ((keyVal.value.length / 4) % 1 !== 0) {\n      throw new Error(\n        'Decode Error: Input BIP32_DERIVATION value length should be multiple of 4',\n      );\n    }\n    const data = {\n      masterFingerprint: keyVal.value.slice(0, 4),\n      pubkey,\n      path: 'm',\n    };\n    for (const i of range(keyVal.value.length / 4 - 1)) {\n      const val = keyVal.value.readUInt32LE(i * 4 + 4);\n      const isHard = !!(val & 0x80000000);\n      const idx = val & 0x7fffffff;\n      data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n    }\n    return data;\n  }\n  function encode(data) {\n    const head = Buffer.from([TYPE_BYTE]);\n    const key = Buffer.concat([head, data.pubkey]);\n    const splitPath = data.path.split('/');\n    const value = Buffer.allocUnsafe(splitPath.length * 4);\n    data.masterFingerprint.copy(value, 0);\n    let offset = 4;\n    splitPath.slice(1).forEach(level => {\n      const isHard = level.slice(-1) === \"'\";\n      let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n      if (isHard) num += 0x80000000;\n      value.writeUInt32LE(num, offset);\n      offset += 4;\n    });\n    return {\n      key,\n      value,\n    };\n  }\n  const expected =\n    '{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }';\n  function check(data) {\n    return (\n      Buffer.isBuffer(data.pubkey) &&\n      Buffer.isBuffer(data.masterFingerprint) &&\n      typeof data.path === 'string' &&\n      isValidPubkey(data.pubkey) &&\n      data.masterFingerprint.length === 4\n    );\n  }\n  function canAddToArray(array, item, dupeSet) {\n    const dupeString = item.pubkey.toString('hex');\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return array.filter(v => v.pubkey.equals(item.pubkey)).length === 0;\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAddToArray,\n  };\n}\nexports.makeConverter = makeConverter;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeChecker(pubkeyTypes) {\n  return checkPubkey;\n  function checkPubkey(keyVal) {\n    let pubkey;\n    if (pubkeyTypes.includes(keyVal.key[0])) {\n      pubkey = keyVal.key.slice(1);\n      if (\n        !(pubkey.length === 33 || pubkey.length === 65) ||\n        ![2, 3, 4].includes(pubkey[0])\n      ) {\n        throw new Error(\n          'Format Error: invalid pubkey in key 0x' + keyVal.key.toString('hex'),\n        );\n      }\n    }\n    return pubkey;\n  }\n}\nexports.makeChecker = makeChecker;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode redeemScript with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(data) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return {\n      key,\n      value: data,\n    };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data);\n  }\n  function canAdd(currentData, newData) {\n    return !!currentData && !!newData && currentData.redeemScript === undefined;\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\nexports.makeConverter = makeConverter;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst varuint = require('../varint');\nconst bip32Derivation = require('./bip32Derivation');\nconst isValidBIP340Key = pubkey => pubkey.length === 32;\nfunction makeConverter(TYPE_BYTE) {\n  const parent = bip32Derivation.makeConverter(TYPE_BYTE, isValidBIP340Key);\n  function decode(keyVal) {\n    const nHashes = varuint.decode(keyVal.value);\n    const nHashesLen = varuint.encodingLength(nHashes);\n    const base = parent.decode({\n      key: keyVal.key,\n      value: keyVal.value.slice(nHashesLen + nHashes * 32),\n    });\n    const leafHashes = new Array(nHashes);\n    for (let i = 0, _offset = nHashesLen; i < nHashes; i++, _offset += 32) {\n      leafHashes[i] = keyVal.value.slice(_offset, _offset + 32);\n    }\n    return Object.assign({}, base, { leafHashes });\n  }\n  function encode(data) {\n    const base = parent.encode(data);\n    const nHashesLen = varuint.encodingLength(data.leafHashes.length);\n    const nHashesBuf = Buffer.allocUnsafe(nHashesLen);\n    varuint.encode(data.leafHashes.length, nHashesBuf);\n    const value = Buffer.concat([nHashesBuf, ...data.leafHashes, base.value]);\n    return Object.assign({}, base, { value });\n  }\n  const expected =\n    '{ ' +\n    'masterFingerprint: Buffer; ' +\n    'pubkey: Buffer; ' +\n    'path: string; ' +\n    'leafHashes: Buffer[]; ' +\n    '}';\n  function check(data) {\n    return (\n      Array.isArray(data.leafHashes) &&\n      data.leafHashes.every(\n        leafHash => Buffer.isBuffer(leafHash) && leafHash.length === 32,\n      ) &&\n      parent.check(data)\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAddToArray: parent.canAddToArray,\n  };\n}\nexports.makeConverter = makeConverter;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE || keyVal.key.length !== 1) {\n      throw new Error(\n        'Decode Error: could not decode tapInternalKey with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    if (keyVal.value.length !== 32) {\n      throw new Error(\n        'Decode Error: tapInternalKey not a 32-byte x-only pubkey',\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(value) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return { key, value };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data) && data.length === 32;\n  }\n  function canAdd(currentData, newData) {\n    return (\n      !!currentData && !!newData && currentData.tapInternalKey === undefined\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\nexports.makeConverter = makeConverter;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode witnessScript with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(data) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return {\n      key,\n      value: data,\n    };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data);\n  }\n  function canAdd(currentData, newData) {\n    return (\n      !!currentData && !!newData && currentData.witnessScript === undefined\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\nexports.makeConverter = makeConverter;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../typeFields');\nconst globalXpub = require('./global/globalXpub');\nconst unsignedTx = require('./global/unsignedTx');\nconst finalScriptSig = require('./input/finalScriptSig');\nconst finalScriptWitness = require('./input/finalScriptWitness');\nconst nonWitnessUtxo = require('./input/nonWitnessUtxo');\nconst partialSig = require('./input/partialSig');\nconst porCommitment = require('./input/porCommitment');\nconst sighashType = require('./input/sighashType');\nconst tapKeySig = require('./input/tapKeySig');\nconst tapLeafScript = require('./input/tapLeafScript');\nconst tapMerkleRoot = require('./input/tapMerkleRoot');\nconst tapScriptSig = require('./input/tapScriptSig');\nconst witnessUtxo = require('./input/witnessUtxo');\nconst tapTree = require('./output/tapTree');\nconst bip32Derivation = require('./shared/bip32Derivation');\nconst checkPubkey = require('./shared/checkPubkey');\nconst redeemScript = require('./shared/redeemScript');\nconst tapBip32Derivation = require('./shared/tapBip32Derivation');\nconst tapInternalKey = require('./shared/tapInternalKey');\nconst witnessScript = require('./shared/witnessScript');\nconst globals = {\n  unsignedTx,\n  globalXpub,\n  // pass an Array of key bytes that require pubkey beside the key\n  checkPubkey: checkPubkey.makeChecker([]),\n};\nexports.globals = globals;\nconst inputs = {\n  nonWitnessUtxo,\n  partialSig,\n  sighashType,\n  finalScriptSig,\n  finalScriptWitness,\n  porCommitment,\n  witnessUtxo,\n  bip32Derivation: bip32Derivation.makeConverter(\n    typeFields_1.InputTypes.BIP32_DERIVATION,\n  ),\n  redeemScript: redeemScript.makeConverter(\n    typeFields_1.InputTypes.REDEEM_SCRIPT,\n  ),\n  witnessScript: witnessScript.makeConverter(\n    typeFields_1.InputTypes.WITNESS_SCRIPT,\n  ),\n  checkPubkey: checkPubkey.makeChecker([\n    typeFields_1.InputTypes.PARTIAL_SIG,\n    typeFields_1.InputTypes.BIP32_DERIVATION,\n  ]),\n  tapKeySig,\n  tapScriptSig,\n  tapLeafScript,\n  tapBip32Derivation: tapBip32Derivation.makeConverter(\n    typeFields_1.InputTypes.TAP_BIP32_DERIVATION,\n  ),\n  tapInternalKey: tapInternalKey.makeConverter(\n    typeFields_1.InputTypes.TAP_INTERNAL_KEY,\n  ),\n  tapMerkleRoot,\n};\nexports.inputs = inputs;\nconst outputs = {\n  bip32Derivation: bip32Derivation.makeConverter(\n    typeFields_1.OutputTypes.BIP32_DERIVATION,\n  ),\n  redeemScript: redeemScript.makeConverter(\n    typeFields_1.OutputTypes.REDEEM_SCRIPT,\n  ),\n  witnessScript: witnessScript.makeConverter(\n    typeFields_1.OutputTypes.WITNESS_SCRIPT,\n  ),\n  checkPubkey: checkPubkey.makeChecker([\n    typeFields_1.OutputTypes.BIP32_DERIVATION,\n  ]),\n  tapBip32Derivation: tapBip32Derivation.makeConverter(\n    typeFields_1.OutputTypes.TAP_BIP32_DERIVATION,\n  ),\n  tapTree,\n  tapInternalKey: tapInternalKey.makeConverter(\n    typeFields_1.OutputTypes.TAP_INTERNAL_KEY,\n  ),\n};\nexports.outputs = outputs;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst convert = require('../converter');\nconst tools_1 = require('../converter/tools');\nconst varuint = require('../converter/varint');\nconst typeFields_1 = require('../typeFields');\nfunction psbtFromBuffer(buffer, txGetter) {\n  let offset = 0;\n  function varSlice() {\n    const keyLen = varuint.decode(buffer, offset);\n    offset += varuint.encodingLength(keyLen);\n    const key = buffer.slice(offset, offset + keyLen);\n    offset += keyLen;\n    return key;\n  }\n  function readUInt32BE() {\n    const num = buffer.readUInt32BE(offset);\n    offset += 4;\n    return num;\n  }\n  function readUInt8() {\n    const num = buffer.readUInt8(offset);\n    offset += 1;\n    return num;\n  }\n  function getKeyValue() {\n    const key = varSlice();\n    const value = varSlice();\n    return {\n      key,\n      value,\n    };\n  }\n  function checkEndOfKeyValPairs() {\n    if (offset >= buffer.length) {\n      throw new Error('Format Error: Unexpected End of PSBT');\n    }\n    const isEnd = buffer.readUInt8(offset) === 0;\n    if (isEnd) {\n      offset++;\n    }\n    return isEnd;\n  }\n  if (readUInt32BE() !== 0x70736274) {\n    throw new Error('Format Error: Invalid Magic Number');\n  }\n  if (readUInt8() !== 0xff) {\n    throw new Error(\n      'Format Error: Magic Number must be followed by 0xff separator',\n    );\n  }\n  const globalMapKeyVals = [];\n  const globalKeyIndex = {};\n  while (!checkEndOfKeyValPairs()) {\n    const keyVal = getKeyValue();\n    const hexKey = keyVal.key.toString('hex');\n    if (globalKeyIndex[hexKey]) {\n      throw new Error(\n        'Format Error: Keys must be unique for global keymap: key ' + hexKey,\n      );\n    }\n    globalKeyIndex[hexKey] = 1;\n    globalMapKeyVals.push(keyVal);\n  }\n  const unsignedTxMaps = globalMapKeyVals.filter(\n    keyVal => keyVal.key[0] === typeFields_1.GlobalTypes.UNSIGNED_TX,\n  );\n  if (unsignedTxMaps.length !== 1) {\n    throw new Error('Format Error: Only one UNSIGNED_TX allowed');\n  }\n  const unsignedTx = txGetter(unsignedTxMaps[0].value);\n  // Get input and output counts to loop the respective fields\n  const { inputCount, outputCount } = unsignedTx.getInputOutputCounts();\n  const inputKeyVals = [];\n  const outputKeyVals = [];\n  // Get input fields\n  for (const index of tools_1.range(inputCount)) {\n    const inputKeyIndex = {};\n    const input = [];\n    while (!checkEndOfKeyValPairs()) {\n      const keyVal = getKeyValue();\n      const hexKey = keyVal.key.toString('hex');\n      if (inputKeyIndex[hexKey]) {\n        throw new Error(\n          'Format Error: Keys must be unique for each input: ' +\n            'input index ' +\n            index +\n            ' key ' +\n            hexKey,\n        );\n      }\n      inputKeyIndex[hexKey] = 1;\n      input.push(keyVal);\n    }\n    inputKeyVals.push(input);\n  }\n  for (const index of tools_1.range(outputCount)) {\n    const outputKeyIndex = {};\n    const output = [];\n    while (!checkEndOfKeyValPairs()) {\n      const keyVal = getKeyValue();\n      const hexKey = keyVal.key.toString('hex');\n      if (outputKeyIndex[hexKey]) {\n        throw new Error(\n          'Format Error: Keys must be unique for each output: ' +\n            'output index ' +\n            index +\n            ' key ' +\n            hexKey,\n        );\n      }\n      outputKeyIndex[hexKey] = 1;\n      output.push(keyVal);\n    }\n    outputKeyVals.push(output);\n  }\n  return psbtFromKeyVals(unsignedTx, {\n    globalMapKeyVals,\n    inputKeyVals,\n    outputKeyVals,\n  });\n}\nexports.psbtFromBuffer = psbtFromBuffer;\nfunction checkKeyBuffer(type, keyBuf, keyNum) {\n  if (!keyBuf.equals(Buffer.from([keyNum]))) {\n    throw new Error(\n      `Format Error: Invalid ${type} key: ${keyBuf.toString('hex')}`,\n    );\n  }\n}\nexports.checkKeyBuffer = checkKeyBuffer;\nfunction psbtFromKeyVals(\n  unsignedTx,\n  { globalMapKeyVals, inputKeyVals, outputKeyVals },\n) {\n  // That was easy :-)\n  const globalMap = {\n    unsignedTx,\n  };\n  let txCount = 0;\n  for (const keyVal of globalMapKeyVals) {\n    // If a globalMap item needs pubkey, uncomment\n    // const pubkey = convert.globals.checkPubkey(keyVal);\n    switch (keyVal.key[0]) {\n      case typeFields_1.GlobalTypes.UNSIGNED_TX:\n        checkKeyBuffer(\n          'global',\n          keyVal.key,\n          typeFields_1.GlobalTypes.UNSIGNED_TX,\n        );\n        if (txCount > 0) {\n          throw new Error('Format Error: GlobalMap has multiple UNSIGNED_TX');\n        }\n        txCount++;\n        break;\n      case typeFields_1.GlobalTypes.GLOBAL_XPUB:\n        if (globalMap.globalXpub === undefined) {\n          globalMap.globalXpub = [];\n        }\n        globalMap.globalXpub.push(convert.globals.globalXpub.decode(keyVal));\n        break;\n      default:\n        // This will allow inclusion during serialization.\n        if (!globalMap.unknownKeyVals) globalMap.unknownKeyVals = [];\n        globalMap.unknownKeyVals.push(keyVal);\n    }\n  }\n  // Get input and output counts to loop the respective fields\n  const inputCount = inputKeyVals.length;\n  const outputCount = outputKeyVals.length;\n  const inputs = [];\n  const outputs = [];\n  // Get input fields\n  for (const index of tools_1.range(inputCount)) {\n    const input = {};\n    for (const keyVal of inputKeyVals[index]) {\n      convert.inputs.checkPubkey(keyVal);\n      switch (keyVal.key[0]) {\n        case typeFields_1.InputTypes.NON_WITNESS_UTXO:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.NON_WITNESS_UTXO,\n          );\n          if (input.nonWitnessUtxo !== undefined) {\n            throw new Error(\n              'Format Error: Input has multiple NON_WITNESS_UTXO',\n            );\n          }\n          input.nonWitnessUtxo = convert.inputs.nonWitnessUtxo.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.WITNESS_UTXO:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.WITNESS_UTXO,\n          );\n          if (input.witnessUtxo !== undefined) {\n            throw new Error('Format Error: Input has multiple WITNESS_UTXO');\n          }\n          input.witnessUtxo = convert.inputs.witnessUtxo.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.PARTIAL_SIG:\n          if (input.partialSig === undefined) {\n            input.partialSig = [];\n          }\n          input.partialSig.push(convert.inputs.partialSig.decode(keyVal));\n          break;\n        case typeFields_1.InputTypes.SIGHASH_TYPE:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.SIGHASH_TYPE,\n          );\n          if (input.sighashType !== undefined) {\n            throw new Error('Format Error: Input has multiple SIGHASH_TYPE');\n          }\n          input.sighashType = convert.inputs.sighashType.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.REDEEM_SCRIPT:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.REDEEM_SCRIPT,\n          );\n          if (input.redeemScript !== undefined) {\n            throw new Error('Format Error: Input has multiple REDEEM_SCRIPT');\n          }\n          input.redeemScript = convert.inputs.redeemScript.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.WITNESS_SCRIPT:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.WITNESS_SCRIPT,\n          );\n          if (input.witnessScript !== undefined) {\n            throw new Error('Format Error: Input has multiple WITNESS_SCRIPT');\n          }\n          input.witnessScript = convert.inputs.witnessScript.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.BIP32_DERIVATION:\n          if (input.bip32Derivation === undefined) {\n            input.bip32Derivation = [];\n          }\n          input.bip32Derivation.push(\n            convert.inputs.bip32Derivation.decode(keyVal),\n          );\n          break;\n        case typeFields_1.InputTypes.FINAL_SCRIPTSIG:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.FINAL_SCRIPTSIG,\n          );\n          input.finalScriptSig = convert.inputs.finalScriptSig.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.FINAL_SCRIPTWITNESS:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.FINAL_SCRIPTWITNESS,\n          );\n          input.finalScriptWitness = convert.inputs.finalScriptWitness.decode(\n            keyVal,\n          );\n          break;\n        case typeFields_1.InputTypes.POR_COMMITMENT:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.POR_COMMITMENT,\n          );\n          input.porCommitment = convert.inputs.porCommitment.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.TAP_KEY_SIG:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.TAP_KEY_SIG,\n          );\n          input.tapKeySig = convert.inputs.tapKeySig.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.TAP_SCRIPT_SIG:\n          if (input.tapScriptSig === undefined) {\n            input.tapScriptSig = [];\n          }\n          input.tapScriptSig.push(convert.inputs.tapScriptSig.decode(keyVal));\n          break;\n        case typeFields_1.InputTypes.TAP_LEAF_SCRIPT:\n          if (input.tapLeafScript === undefined) {\n            input.tapLeafScript = [];\n          }\n          input.tapLeafScript.push(convert.inputs.tapLeafScript.decode(keyVal));\n          break;\n        case typeFields_1.InputTypes.TAP_BIP32_DERIVATION:\n          if (input.tapBip32Derivation === undefined) {\n            input.tapBip32Derivation = [];\n          }\n          input.tapBip32Derivation.push(\n            convert.inputs.tapBip32Derivation.decode(keyVal),\n          );\n          break;\n        case typeFields_1.InputTypes.TAP_INTERNAL_KEY:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.TAP_INTERNAL_KEY,\n          );\n          input.tapInternalKey = convert.inputs.tapInternalKey.decode(keyVal);\n          break;\n        case typeFields_1.InputTypes.TAP_MERKLE_ROOT:\n          checkKeyBuffer(\n            'input',\n            keyVal.key,\n            typeFields_1.InputTypes.TAP_MERKLE_ROOT,\n          );\n          input.tapMerkleRoot = convert.inputs.tapMerkleRoot.decode(keyVal);\n          break;\n        default:\n          // This will allow inclusion during serialization.\n          if (!input.unknownKeyVals) input.unknownKeyVals = [];\n          input.unknownKeyVals.push(keyVal);\n      }\n    }\n    inputs.push(input);\n  }\n  for (const index of tools_1.range(outputCount)) {\n    const output = {};\n    for (const keyVal of outputKeyVals[index]) {\n      convert.outputs.checkPubkey(keyVal);\n      switch (keyVal.key[0]) {\n        case typeFields_1.OutputTypes.REDEEM_SCRIPT:\n          checkKeyBuffer(\n            'output',\n            keyVal.key,\n            typeFields_1.OutputTypes.REDEEM_SCRIPT,\n          );\n          if (output.redeemScript !== undefined) {\n            throw new Error('Format Error: Output has multiple REDEEM_SCRIPT');\n          }\n          output.redeemScript = convert.outputs.redeemScript.decode(keyVal);\n          break;\n        case typeFields_1.OutputTypes.WITNESS_SCRIPT:\n          checkKeyBuffer(\n            'output',\n            keyVal.key,\n            typeFields_1.OutputTypes.WITNESS_SCRIPT,\n          );\n          if (output.witnessScript !== undefined) {\n            throw new Error('Format Error: Output has multiple WITNESS_SCRIPT');\n          }\n          output.witnessScript = convert.outputs.witnessScript.decode(keyVal);\n          break;\n        case typeFields_1.OutputTypes.BIP32_DERIVATION:\n          if (output.bip32Derivation === undefined) {\n            output.bip32Derivation = [];\n          }\n          output.bip32Derivation.push(\n            convert.outputs.bip32Derivation.decode(keyVal),\n          );\n          break;\n        case typeFields_1.OutputTypes.TAP_INTERNAL_KEY:\n          checkKeyBuffer(\n            'output',\n            keyVal.key,\n            typeFields_1.OutputTypes.TAP_INTERNAL_KEY,\n          );\n          output.tapInternalKey = convert.outputs.tapInternalKey.decode(keyVal);\n          break;\n        case typeFields_1.OutputTypes.TAP_TREE:\n          checkKeyBuffer(\n            'output',\n            keyVal.key,\n            typeFields_1.OutputTypes.TAP_TREE,\n          );\n          output.tapTree = convert.outputs.tapTree.decode(keyVal);\n          break;\n        case typeFields_1.OutputTypes.TAP_BIP32_DERIVATION:\n          if (output.tapBip32Derivation === undefined) {\n            output.tapBip32Derivation = [];\n          }\n          output.tapBip32Derivation.push(\n            convert.outputs.tapBip32Derivation.decode(keyVal),\n          );\n          break;\n        default:\n          if (!output.unknownKeyVals) output.unknownKeyVals = [];\n          output.unknownKeyVals.push(keyVal);\n      }\n    }\n    outputs.push(output);\n  }\n  return { globalMap, inputs, outputs };\n}\nexports.psbtFromKeyVals = psbtFromKeyVals;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst convert = require('../converter');\nconst tools_1 = require('../converter/tools');\nfunction psbtToBuffer({ globalMap, inputs, outputs }) {\n  const { globalKeyVals, inputKeyVals, outputKeyVals } = psbtToKeyVals({\n    globalMap,\n    inputs,\n    outputs,\n  });\n  const globalBuffer = tools_1.keyValsToBuffer(globalKeyVals);\n  const keyValsOrEmptyToBuffer = keyVals =>\n    keyVals.length === 0\n      ? [Buffer.from([0])]\n      : keyVals.map(tools_1.keyValsToBuffer);\n  const inputBuffers = keyValsOrEmptyToBuffer(inputKeyVals);\n  const outputBuffers = keyValsOrEmptyToBuffer(outputKeyVals);\n  const header = Buffer.allocUnsafe(5);\n  header.writeUIntBE(0x70736274ff, 0, 5);\n  return Buffer.concat(\n    [header, globalBuffer].concat(inputBuffers, outputBuffers),\n  );\n}\nexports.psbtToBuffer = psbtToBuffer;\nconst sortKeyVals = (a, b) => {\n  return a.key.compare(b.key);\n};\nfunction keyValsFromMap(keyValMap, converterFactory) {\n  const keyHexSet = new Set();\n  const keyVals = Object.entries(keyValMap).reduce((result, [key, value]) => {\n    if (key === 'unknownKeyVals') return result;\n    // We are checking for undefined anyways. So ignore TS error\n    // @ts-ignore\n    const converter = converterFactory[key];\n    if (converter === undefined) return result;\n    const encodedKeyVals = (Array.isArray(value) ? value : [value]).map(\n      converter.encode,\n    );\n    const keyHexes = encodedKeyVals.map(kv => kv.key.toString('hex'));\n    keyHexes.forEach(hex => {\n      if (keyHexSet.has(hex))\n        throw new Error('Serialize Error: Duplicate key: ' + hex);\n      keyHexSet.add(hex);\n    });\n    return result.concat(encodedKeyVals);\n  }, []);\n  // Get other keyVals that have not yet been gotten\n  const otherKeyVals = keyValMap.unknownKeyVals\n    ? keyValMap.unknownKeyVals.filter(keyVal => {\n        return !keyHexSet.has(keyVal.key.toString('hex'));\n      })\n    : [];\n  return keyVals.concat(otherKeyVals).sort(sortKeyVals);\n}\nfunction psbtToKeyVals({ globalMap, inputs, outputs }) {\n  // First parse the global keyVals\n  // Get any extra keyvals to pass along\n  return {\n    globalKeyVals: keyValsFromMap(globalMap, convert.globals),\n    inputKeyVals: inputs.map(i => keyValsFromMap(i, convert.inputs)),\n    outputKeyVals: outputs.map(o => keyValsFromMap(o, convert.outputs)),\n  };\n}\nexports.psbtToKeyVals = psbtToKeyVals;\n", "'use strict';\nfunction __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, '__esModule', { value: true });\n__export(require('./fromBuffer'));\n__export(require('./toBuffer'));\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst parser_1 = require('../parser');\nfunction combine(psbts) {\n  const self = psbts[0];\n  const selfKeyVals = parser_1.psbtToKeyVals(self);\n  const others = psbts.slice(1);\n  if (others.length === 0) throw new Error('Combine: Nothing to combine');\n  const selfTx = getTx(self);\n  if (selfTx === undefined) {\n    throw new Error('Combine: Self missing transaction');\n  }\n  const selfGlobalSet = getKeySet(selfKeyVals.globalKeyVals);\n  const selfInputSets = selfKeyVals.inputKeyVals.map(getKeySet);\n  const selfOutputSets = selfKeyVals.outputKeyVals.map(getKeySet);\n  for (const other of others) {\n    const otherTx = getTx(other);\n    if (\n      otherTx === undefined ||\n      !otherTx.toBuffer().equals(selfTx.toBuffer())\n    ) {\n      throw new Error(\n        'Combine: One of the Psbts does not have the same transaction.',\n      );\n    }\n    const otherKeyVals = parser_1.psbtToKeyVals(other);\n    const otherGlobalSet = getKeySet(otherKeyVals.globalKeyVals);\n    otherGlobalSet.forEach(\n      keyPusher(\n        selfGlobalSet,\n        selfKeyVals.globalKeyVals,\n        otherKeyVals.globalKeyVals,\n      ),\n    );\n    const otherInputSets = otherKeyVals.inputKeyVals.map(getKeySet);\n    otherInputSets.forEach((inputSet, idx) =>\n      inputSet.forEach(\n        keyPusher(\n          selfInputSets[idx],\n          selfKeyVals.inputKeyVals[idx],\n          otherKeyVals.inputKeyVals[idx],\n        ),\n      ),\n    );\n    const otherOutputSets = otherKeyVals.outputKeyVals.map(getKeySet);\n    otherOutputSets.forEach((outputSet, idx) =>\n      outputSet.forEach(\n        keyPusher(\n          selfOutputSets[idx],\n          selfKeyVals.outputKeyVals[idx],\n          otherKeyVals.outputKeyVals[idx],\n        ),\n      ),\n    );\n  }\n  return parser_1.psbtFromKeyVals(selfTx, {\n    globalMapKeyVals: selfKeyVals.globalKeyVals,\n    inputKeyVals: selfKeyVals.inputKeyVals,\n    outputKeyVals: selfKeyVals.outputKeyVals,\n  });\n}\nexports.combine = combine;\nfunction keyPusher(selfSet, selfKeyVals, otherKeyVals) {\n  return key => {\n    if (selfSet.has(key)) return;\n    const newKv = otherKeyVals.filter(kv => kv.key.toString('hex') === key)[0];\n    selfKeyVals.push(newKv);\n    selfSet.add(key);\n  };\n}\nfunction getTx(psbt) {\n  return psbt.globalMap.unsignedTx;\n}\nfunction getKeySet(keyVals) {\n  const set = new Set();\n  keyVals.forEach(keyVal => {\n    const hex = keyVal.key.toString('hex');\n    if (set.has(hex))\n      throw new Error('Combine: KeyValue Map keys should be unique');\n    set.add(hex);\n  });\n  return set;\n}\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst converter = require('./converter');\nfunction checkForInput(inputs, inputIndex) {\n  const input = inputs[inputIndex];\n  if (input === undefined) throw new Error(`No input #${inputIndex}`);\n  return input;\n}\nexports.checkForInput = checkForInput;\nfunction checkForOutput(outputs, outputIndex) {\n  const output = outputs[outputIndex];\n  if (output === undefined) throw new Error(`No output #${outputIndex}`);\n  return output;\n}\nexports.checkForOutput = checkForOutput;\nfunction checkHasKey(checkKeyVal, keyVals, enumLength) {\n  if (checkKeyVal.key[0] < enumLength) {\n    throw new Error(\n      `Use the method for your specific key instead of addUnknownKeyVal*`,\n    );\n  }\n  if (\n    keyVals &&\n    keyVals.filter(kv => kv.key.equals(checkKeyVal.key)).length !== 0\n  ) {\n    throw new Error(`Duplicate Key: ${checkKeyVal.key.toString('hex')}`);\n  }\n}\nexports.checkHasKey = checkHasKey;\nfunction getEnumLength(myenum) {\n  let count = 0;\n  Object.keys(myenum).forEach(val => {\n    if (Number(isNaN(Number(val)))) {\n      count++;\n    }\n  });\n  return count;\n}\nexports.getEnumLength = getEnumLength;\nfunction inputCheckUncleanFinalized(inputIndex, input) {\n  let result = false;\n  if (input.nonWitnessUtxo || input.witnessUtxo) {\n    const needScriptSig = !!input.redeemScript;\n    const needWitnessScript = !!input.witnessScript;\n    const scriptSigOK = !needScriptSig || !!input.finalScriptSig;\n    const witnessScriptOK = !needWitnessScript || !!input.finalScriptWitness;\n    const hasOneFinal = !!input.finalScriptSig || !!input.finalScriptWitness;\n    result = scriptSigOK && witnessScriptOK && hasOneFinal;\n  }\n  if (result === false) {\n    throw new Error(\n      `Input #${inputIndex} has too much or too little data to clean`,\n    );\n  }\n}\nexports.inputCheckUncleanFinalized = inputCheckUncleanFinalized;\nfunction throwForUpdateMaker(typeName, name, expected, data) {\n  throw new Error(\n    `Data for ${typeName} key ${name} is incorrect: Expected ` +\n      `${expected} and got ${JSON.stringify(data)}`,\n  );\n}\nfunction updateMaker(typeName) {\n  return (updateData, mainData) => {\n    for (const name of Object.keys(updateData)) {\n      // @ts-ignore\n      const data = updateData[name];\n      // @ts-ignore\n      const { canAdd, canAddToArray, check, expected } =\n        // @ts-ignore\n        converter[typeName + 's'][name] || {};\n      const isArray = !!canAddToArray;\n      // If unknown data. ignore and do not add\n      if (check) {\n        if (isArray) {\n          if (\n            !Array.isArray(data) ||\n            // @ts-ignore\n            (mainData[name] && !Array.isArray(mainData[name]))\n          ) {\n            throw new Error(`Key type ${name} must be an array`);\n          }\n          if (!data.every(check)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          }\n          // @ts-ignore\n          const arr = mainData[name] || [];\n          const dupeCheckSet = new Set();\n          if (!data.every(v => canAddToArray(arr, v, dupeCheckSet))) {\n            throw new Error('Can not add duplicate data to array');\n          }\n          // @ts-ignore\n          mainData[name] = arr.concat(data);\n        } else {\n          if (!check(data)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          }\n          if (!canAdd(mainData, data)) {\n            throw new Error(`Can not add duplicate data to ${typeName}`);\n          }\n          // @ts-ignore\n          mainData[name] = data;\n        }\n      }\n    }\n  };\n}\nexports.updateGlobal = updateMaker('global');\nexports.updateInput = updateMaker('input');\nexports.updateOutput = updateMaker('output');\nfunction addInputAttributes(inputs, data) {\n  const index = inputs.length - 1;\n  const input = checkForInput(inputs, index);\n  exports.updateInput(data, input);\n}\nexports.addInputAttributes = addInputAttributes;\nfunction addOutputAttributes(outputs, data) {\n  const index = outputs.length - 1;\n  const output = checkForOutput(outputs, index);\n  exports.updateOutput(data, output);\n}\nexports.addOutputAttributes = addOutputAttributes;\nfunction defaultVersionSetter(version, txBuf) {\n  if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n    throw new Error('Set Version: Invalid Transaction');\n  }\n  txBuf.writeUInt32LE(version, 0);\n  return txBuf;\n}\nexports.defaultVersionSetter = defaultVersionSetter;\nfunction defaultLocktimeSetter(locktime, txBuf) {\n  if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n    throw new Error('Set Locktime: Invalid Transaction');\n  }\n  txBuf.writeUInt32LE(locktime, txBuf.length - 4);\n  return txBuf;\n}\nexports.defaultLocktimeSetter = defaultLocktimeSetter;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst combiner_1 = require('./combiner');\nconst parser_1 = require('./parser');\nconst typeFields_1 = require('./typeFields');\nconst utils_1 = require('./utils');\nclass Psbt {\n  constructor(tx) {\n    this.inputs = [];\n    this.outputs = [];\n    this.globalMap = {\n      unsignedTx: tx,\n    };\n  }\n  static fromBase64(data, txFromBuffer) {\n    const buffer = Buffer.from(data, 'base64');\n    return this.fromBuffer(buffer, txFromBuffer);\n  }\n  static fromHex(data, txFromBuffer) {\n    const buffer = Buffer.from(data, 'hex');\n    return this.fromBuffer(buffer, txFromBuffer);\n  }\n  static fromBuffer(buffer, txFromBuffer) {\n    const results = parser_1.psbtFromBuffer(buffer, txFromBuffer);\n    const psbt = new this(results.globalMap.unsignedTx);\n    Object.assign(psbt, results);\n    return psbt;\n  }\n  toBase64() {\n    const buffer = this.toBuffer();\n    return buffer.toString('base64');\n  }\n  toHex() {\n    const buffer = this.toBuffer();\n    return buffer.toString('hex');\n  }\n  toBuffer() {\n    return parser_1.psbtToBuffer(this);\n  }\n  updateGlobal(updateData) {\n    utils_1.updateGlobal(updateData, this.globalMap);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    const input = utils_1.checkForInput(this.inputs, inputIndex);\n    utils_1.updateInput(updateData, input);\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    const output = utils_1.checkForOutput(this.outputs, outputIndex);\n    utils_1.updateOutput(updateData, output);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    utils_1.checkHasKey(\n      keyVal,\n      this.globalMap.unknownKeyVals,\n      utils_1.getEnumLength(typeFields_1.GlobalTypes),\n    );\n    if (!this.globalMap.unknownKeyVals) this.globalMap.unknownKeyVals = [];\n    this.globalMap.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    const input = utils_1.checkForInput(this.inputs, inputIndex);\n    utils_1.checkHasKey(\n      keyVal,\n      input.unknownKeyVals,\n      utils_1.getEnumLength(typeFields_1.InputTypes),\n    );\n    if (!input.unknownKeyVals) input.unknownKeyVals = [];\n    input.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    const output = utils_1.checkForOutput(this.outputs, outputIndex);\n    utils_1.checkHasKey(\n      keyVal,\n      output.unknownKeyVals,\n      utils_1.getEnumLength(typeFields_1.OutputTypes),\n    );\n    if (!output.unknownKeyVals) output.unknownKeyVals = [];\n    output.unknownKeyVals.push(keyVal);\n    return this;\n  }\n  addInput(inputData) {\n    this.globalMap.unsignedTx.addInput(inputData);\n    this.inputs.push({\n      unknownKeyVals: [],\n    });\n    const addKeyVals = inputData.unknownKeyVals || [];\n    const inputIndex = this.inputs.length - 1;\n    if (!Array.isArray(addKeyVals)) {\n      throw new Error('unknownKeyVals must be an Array');\n    }\n    addKeyVals.forEach(keyVal =>\n      this.addUnknownKeyValToInput(inputIndex, keyVal),\n    );\n    utils_1.addInputAttributes(this.inputs, inputData);\n    return this;\n  }\n  addOutput(outputData) {\n    this.globalMap.unsignedTx.addOutput(outputData);\n    this.outputs.push({\n      unknownKeyVals: [],\n    });\n    const addKeyVals = outputData.unknownKeyVals || [];\n    const outputIndex = this.outputs.length - 1;\n    if (!Array.isArray(addKeyVals)) {\n      throw new Error('unknownKeyVals must be an Array');\n    }\n    addKeyVals.forEach(keyVal =>\n      this.addUnknownKeyValToInput(outputIndex, keyVal),\n    );\n    utils_1.addOutputAttributes(this.outputs, outputData);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    const input = utils_1.checkForInput(this.inputs, inputIndex);\n    utils_1.inputCheckUncleanFinalized(inputIndex, input);\n    for (const key of Object.keys(input)) {\n      if (\n        ![\n          'witnessUtxo',\n          'nonWitnessUtxo',\n          'finalScriptSig',\n          'finalScriptWitness',\n          'unknownKeyVals',\n        ].includes(key)\n      ) {\n        // @ts-ignore\n        delete input[key];\n      }\n    }\n    return this;\n  }\n  combine(...those) {\n    // Combine this with those.\n    // Return self for chaining.\n    const result = combiner_1.combine([this].concat(those));\n    Object.assign(this, result);\n    return this;\n  }\n  getTransaction() {\n    return this.globalMap.unsignedTx.toBuffer();\n  }\n}\nexports.Psbt = Psbt;\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.signatureBlocksAction =\n  exports.checkInputForSig =\n  exports.pubkeyInScript =\n  exports.pubkeyPositionInScript =\n  exports.witnessStackToScriptWitness =\n  exports.isP2TR =\n  exports.isP2SHScript =\n  exports.isP2WSHScript =\n  exports.isP2WPKH =\n  exports.isP2PKH =\n  exports.isP2PK =\n  exports.isP2MS =\n    void 0;\nconst varuint = require('bip174/src/lib/converter/varint');\nconst bscript = require('../script');\nconst transaction_1 = require('../transaction');\nconst crypto_1 = require('../crypto');\nconst payments = require('../payments');\nfunction isPaymentFactory(payment) {\n  return script => {\n    try {\n      payment({ output: script });\n      return true;\n    } catch (err) {\n      return false;\n    }\n  };\n}\nexports.isP2MS = isPaymentFactory(payments.p2ms);\nexports.isP2PK = isPaymentFactory(payments.p2pk);\nexports.isP2PKH = isPaymentFactory(payments.p2pkh);\nexports.isP2WPKH = isPaymentFactory(payments.p2wpkh);\nexports.isP2WSHScript = isPaymentFactory(payments.p2wsh);\nexports.isP2SHScript = isPaymentFactory(payments.p2sh);\nexports.isP2TR = isPaymentFactory(payments.p2tr);\nfunction witnessStackToScriptWitness(witness) {\n  let buffer = Buffer.allocUnsafe(0);\n  function writeSlice(slice) {\n    buffer = Buffer.concat([buffer, Buffer.from(slice)]);\n  }\n  function writeVarInt(i) {\n    const currentLen = buffer.length;\n    const varintLen = varuint.encodingLength(i);\n    buffer = Buffer.concat([buffer, Buffer.allocUnsafe(varintLen)]);\n    varuint.encode(i, buffer, currentLen);\n  }\n  function writeVarSlice(slice) {\n    writeVarInt(slice.length);\n    writeSlice(slice);\n  }\n  function writeVector(vector) {\n    writeVarInt(vector.length);\n    vector.forEach(writeVarSlice);\n  }\n  writeVector(witness);\n  return buffer;\n}\nexports.witnessStackToScriptWitness = witnessStackToScriptWitness;\nfunction pubkeyPositionInScript(pubkey, script) {\n  const pubkeyHash = (0, crypto_1.hash160)(pubkey);\n  const pubkeyXOnly = pubkey.slice(1, 33); // slice before calling?\n  const decompiled = bscript.decompile(script);\n  if (decompiled === null) throw new Error('Unknown script error');\n  return decompiled.findIndex(element => {\n    if (typeof element === 'number') return false;\n    return (\n      element.equals(pubkey) ||\n      element.equals(pubkeyHash) ||\n      element.equals(pubkeyXOnly)\n    );\n  });\n}\nexports.pubkeyPositionInScript = pubkeyPositionInScript;\nfunction pubkeyInScript(pubkey, script) {\n  return pubkeyPositionInScript(pubkey, script) !== -1;\n}\nexports.pubkeyInScript = pubkeyInScript;\nfunction checkInputForSig(input, action) {\n  const pSigs = extractPartialSigs(input);\n  return pSigs.some(pSig =>\n    signatureBlocksAction(pSig, bscript.signature.decode, action),\n  );\n}\nexports.checkInputForSig = checkInputForSig;\nfunction signatureBlocksAction(signature, signatureDecodeFn, action) {\n  const { hashType } = signatureDecodeFn(signature);\n  const whitelist = [];\n  const isAnyoneCanPay =\n    hashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY;\n  if (isAnyoneCanPay) whitelist.push('addInput');\n  const hashMod = hashType & 0x1f;\n  switch (hashMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n    case transaction_1.Transaction.SIGHASH_NONE:\n      whitelist.push('addOutput');\n      whitelist.push('setInputSequence');\n      break;\n  }\n  if (whitelist.indexOf(action) === -1) {\n    return true;\n  }\n  return false;\n}\nexports.signatureBlocksAction = signatureBlocksAction;\nfunction extractPartialSigs(input) {\n  let pSigs = [];\n  if ((input.partialSig || []).length === 0) {\n    if (!input.finalScriptSig && !input.finalScriptWitness) return [];\n    pSigs = getPsigsFromInputFinalScripts(input);\n  } else {\n    pSigs = input.partialSig;\n  }\n  return pSigs.map(p => p.signature);\n}\nfunction getPsigsFromInputFinalScripts(input) {\n  const scriptItems = !input.finalScriptSig\n    ? []\n    : bscript.decompile(input.finalScriptSig) || [];\n  const witnessItems = !input.finalScriptWitness\n    ? []\n    : bscript.decompile(input.finalScriptWitness) || [];\n  return scriptItems\n    .concat(witnessItems)\n    .filter(item => {\n      return Buffer.isBuffer(item) && bscript.isCanonicalScriptSignature(item);\n    })\n    .map(sig => ({ signature: sig }));\n}\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.checkTaprootInputForSigs =\n  exports.tapTreeFromList =\n  exports.tapTreeToList =\n  exports.tweakInternalPubKey =\n  exports.checkTaprootOutputFields =\n  exports.checkTaprootInputFields =\n  exports.isTaprootOutput =\n  exports.isTaprootInput =\n  exports.serializeTaprootSignature =\n  exports.tapScriptFinalizer =\n  exports.toXOnly =\n    void 0;\nconst types_1 = require('../types');\nconst transaction_1 = require('../transaction');\nconst psbtutils_1 = require('./psbtutils');\nconst bip341_1 = require('../payments/bip341');\nconst payments_1 = require('../payments');\nconst psbtutils_2 = require('./psbtutils');\nconst toXOnly = pubKey => (pubKey.length === 32 ? pubKey : pubKey.slice(1, 33));\nexports.toXOnly = toXOnly;\n/**\n * Default tapscript finalizer. It searches for the `tapLeafHashToFinalize` if provided.\n * Otherwise it will search for the tapleaf that has at least one signature and has the shortest path.\n * @param inputIndex the position of the PSBT input.\n * @param input the PSBT input.\n * @param tapLeafHashToFinalize optional, if provided the finalizer will search for a tapleaf that has this hash\n *                              and will try to build the finalScriptWitness.\n * @returns the finalScriptWitness or throws an exception if no tapleaf found.\n */\nfunction tapScriptFinalizer(inputIndex, input, tapLeafHashToFinalize) {\n  const tapLeaf = findTapLeafToFinalize(\n    input,\n    inputIndex,\n    tapLeafHashToFinalize,\n  );\n  try {\n    const sigs = sortSignatures(input, tapLeaf);\n    const witness = sigs.concat(tapLeaf.script).concat(tapLeaf.controlBlock);\n    return {\n      finalScriptWitness: (0, psbtutils_1.witnessStackToScriptWitness)(witness),\n    };\n  } catch (err) {\n    throw new Error(`Can not finalize taproot input #${inputIndex}: ${err}`);\n  }\n}\nexports.tapScriptFinalizer = tapScriptFinalizer;\nfunction serializeTaprootSignature(sig, sighashType) {\n  const sighashTypeByte = sighashType\n    ? Buffer.from([sighashType])\n    : Buffer.from([]);\n  return Buffer.concat([sig, sighashTypeByte]);\n}\nexports.serializeTaprootSignature = serializeTaprootSignature;\nfunction isTaprootInput(input) {\n  return (\n    input &&\n    !!(\n      input.tapInternalKey ||\n      input.tapMerkleRoot ||\n      (input.tapLeafScript && input.tapLeafScript.length) ||\n      (input.tapBip32Derivation && input.tapBip32Derivation.length) ||\n      (input.witnessUtxo && (0, psbtutils_1.isP2TR)(input.witnessUtxo.script))\n    )\n  );\n}\nexports.isTaprootInput = isTaprootInput;\nfunction isTaprootOutput(output, script) {\n  return (\n    output &&\n    !!(\n      output.tapInternalKey ||\n      output.tapTree ||\n      (output.tapBip32Derivation && output.tapBip32Derivation.length) ||\n      (script && (0, psbtutils_1.isP2TR)(script))\n    )\n  );\n}\nexports.isTaprootOutput = isTaprootOutput;\nfunction checkTaprootInputFields(inputData, newInputData, action) {\n  checkMixedTaprootAndNonTaprootInputFields(inputData, newInputData, action);\n  checkIfTapLeafInTree(inputData, newInputData, action);\n}\nexports.checkTaprootInputFields = checkTaprootInputFields;\nfunction checkTaprootOutputFields(outputData, newOutputData, action) {\n  checkMixedTaprootAndNonTaprootOutputFields(outputData, newOutputData, action);\n  checkTaprootScriptPubkey(outputData, newOutputData);\n}\nexports.checkTaprootOutputFields = checkTaprootOutputFields;\nfunction checkTaprootScriptPubkey(outputData, newOutputData) {\n  if (!newOutputData.tapTree && !newOutputData.tapInternalKey) return;\n  const tapInternalKey =\n    newOutputData.tapInternalKey || outputData.tapInternalKey;\n  const tapTree = newOutputData.tapTree || outputData.tapTree;\n  if (tapInternalKey) {\n    const { script: scriptPubkey } = outputData;\n    const script = getTaprootScripPubkey(tapInternalKey, tapTree);\n    if (scriptPubkey && !scriptPubkey.equals(script))\n      throw new Error('Error adding output. Script or address missmatch.');\n  }\n}\nfunction getTaprootScripPubkey(tapInternalKey, tapTree) {\n  const scriptTree = tapTree && tapTreeFromList(tapTree.leaves);\n  const { output } = (0, payments_1.p2tr)({\n    internalPubkey: tapInternalKey,\n    scriptTree,\n  });\n  return output;\n}\nfunction tweakInternalPubKey(inputIndex, input) {\n  const tapInternalKey = input.tapInternalKey;\n  const outputKey =\n    tapInternalKey &&\n    (0, bip341_1.tweakKey)(tapInternalKey, input.tapMerkleRoot);\n  if (!outputKey)\n    throw new Error(\n      `Cannot tweak tap internal key for input #${inputIndex}. Public key: ${\n        tapInternalKey && tapInternalKey.toString('hex')\n      }`,\n    );\n  return outputKey.x;\n}\nexports.tweakInternalPubKey = tweakInternalPubKey;\n/**\n * Convert a binary tree to a BIP371 type list. Each element of the list is (according to BIP371):\n * One or more tuples representing the depth, leaf version, and script for a leaf in the Taproot tree,\n * allowing the entire tree to be reconstructed. The tuples must be in depth first search order so that\n * the tree is correctly reconstructed.\n * @param tree the binary tap tree\n * @returns a list of BIP 371 tapleaves\n */\nfunction tapTreeToList(tree) {\n  if (!(0, types_1.isTaptree)(tree))\n    throw new Error(\n      'Cannot convert taptree to tapleaf list. Expecting a tapree structure.',\n    );\n  return _tapTreeToList(tree);\n}\nexports.tapTreeToList = tapTreeToList;\n/**\n * Convert a BIP371 TapLeaf list to a TapTree (binary).\n * @param leaves a list of tapleaves where each element of the list is (according to BIP371):\n * One or more tuples representing the depth, leaf version, and script for a leaf in the Taproot tree,\n * allowing the entire tree to be reconstructed. The tuples must be in depth first search order so that\n * the tree is correctly reconstructed.\n * @returns the corresponding taptree, or throws an exception if the tree cannot be reconstructed\n */\nfunction tapTreeFromList(leaves = []) {\n  if (leaves.length === 1 && leaves[0].depth === 0)\n    return {\n      output: leaves[0].script,\n      version: leaves[0].leafVersion,\n    };\n  return instertLeavesInTree(leaves);\n}\nexports.tapTreeFromList = tapTreeFromList;\nfunction checkTaprootInputForSigs(input, action) {\n  const sigs = extractTaprootSigs(input);\n  return sigs.some(sig =>\n    (0, psbtutils_2.signatureBlocksAction)(sig, decodeSchnorrSignature, action),\n  );\n}\nexports.checkTaprootInputForSigs = checkTaprootInputForSigs;\nfunction decodeSchnorrSignature(signature) {\n  return {\n    signature: signature.slice(0, 64),\n    hashType:\n      signature.slice(64)[0] || transaction_1.Transaction.SIGHASH_DEFAULT,\n  };\n}\nfunction extractTaprootSigs(input) {\n  const sigs = [];\n  if (input.tapKeySig) sigs.push(input.tapKeySig);\n  if (input.tapScriptSig)\n    sigs.push(...input.tapScriptSig.map(s => s.signature));\n  if (!sigs.length) {\n    const finalTapKeySig = getTapKeySigFromWithness(input.finalScriptWitness);\n    if (finalTapKeySig) sigs.push(finalTapKeySig);\n  }\n  return sigs;\n}\nfunction getTapKeySigFromWithness(finalScriptWitness) {\n  if (!finalScriptWitness) return;\n  const witness = finalScriptWitness.slice(2);\n  // todo: add schnorr signature validation\n  if (witness.length === 64 || witness.length === 65) return witness;\n}\nfunction _tapTreeToList(tree, leaves = [], depth = 0) {\n  if (depth > bip341_1.MAX_TAPTREE_DEPTH)\n    throw new Error('Max taptree depth exceeded.');\n  if (!tree) return [];\n  if ((0, types_1.isTapleaf)(tree)) {\n    leaves.push({\n      depth,\n      leafVersion: tree.version || bip341_1.LEAF_VERSION_TAPSCRIPT,\n      script: tree.output,\n    });\n    return leaves;\n  }\n  if (tree[0]) _tapTreeToList(tree[0], leaves, depth + 1);\n  if (tree[1]) _tapTreeToList(tree[1], leaves, depth + 1);\n  return leaves;\n}\nfunction instertLeavesInTree(leaves) {\n  let tree;\n  for (const leaf of leaves) {\n    tree = instertLeafInTree(leaf, tree);\n    if (!tree) throw new Error(`No room left to insert tapleaf in tree`);\n  }\n  return tree;\n}\nfunction instertLeafInTree(leaf, tree, depth = 0) {\n  if (depth > bip341_1.MAX_TAPTREE_DEPTH)\n    throw new Error('Max taptree depth exceeded.');\n  if (leaf.depth === depth) {\n    if (!tree)\n      return {\n        output: leaf.script,\n        version: leaf.leafVersion,\n      };\n    return;\n  }\n  if ((0, types_1.isTapleaf)(tree)) return;\n  const leftSide = instertLeafInTree(leaf, tree && tree[0], depth + 1);\n  if (leftSide) return [leftSide, tree && tree[1]];\n  const rightSide = instertLeafInTree(leaf, tree && tree[1], depth + 1);\n  if (rightSide) return [tree && tree[0], rightSide];\n}\nfunction checkMixedTaprootAndNonTaprootInputFields(\n  inputData,\n  newInputData,\n  action,\n) {\n  const isBadTaprootUpdate =\n    isTaprootInput(inputData) && hasNonTaprootFields(newInputData);\n  const isBadNonTaprootUpdate =\n    hasNonTaprootFields(inputData) && isTaprootInput(newInputData);\n  const hasMixedFields =\n    inputData === newInputData &&\n    isTaprootInput(newInputData) &&\n    hasNonTaprootFields(newInputData); // todo: bad? use !===\n  if (isBadTaprootUpdate || isBadNonTaprootUpdate || hasMixedFields)\n    throw new Error(\n      `Invalid arguments for Psbt.${action}. ` +\n        `Cannot use both taproot and non-taproot fields.`,\n    );\n}\nfunction checkMixedTaprootAndNonTaprootOutputFields(\n  inputData,\n  newInputData,\n  action,\n) {\n  const isBadTaprootUpdate =\n    isTaprootOutput(inputData) && hasNonTaprootFields(newInputData);\n  const isBadNonTaprootUpdate =\n    hasNonTaprootFields(inputData) && isTaprootOutput(newInputData);\n  const hasMixedFields =\n    inputData === newInputData &&\n    isTaprootOutput(newInputData) &&\n    hasNonTaprootFields(newInputData);\n  if (isBadTaprootUpdate || isBadNonTaprootUpdate || hasMixedFields)\n    throw new Error(\n      `Invalid arguments for Psbt.${action}. ` +\n        `Cannot use both taproot and non-taproot fields.`,\n    );\n}\nfunction checkIfTapLeafInTree(inputData, newInputData, action) {\n  if (newInputData.tapMerkleRoot) {\n    const newLeafsInTree = (newInputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, newInputData.tapMerkleRoot),\n    );\n    const oldLeafsInTree = (inputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, newInputData.tapMerkleRoot),\n    );\n    if (!newLeafsInTree || !oldLeafsInTree)\n      throw new Error(\n        `Invalid arguments for Psbt.${action}. Tapleaf not part of taptree.`,\n      );\n  } else if (inputData.tapMerkleRoot) {\n    const newLeafsInTree = (newInputData.tapLeafScript || []).every(l =>\n      isTapLeafInTree(l, inputData.tapMerkleRoot),\n    );\n    if (!newLeafsInTree)\n      throw new Error(\n        `Invalid arguments for Psbt.${action}. Tapleaf not part of taptree.`,\n      );\n  }\n}\nfunction isTapLeafInTree(tapLeaf, merkleRoot) {\n  if (!merkleRoot) return true;\n  const leafHash = (0, bip341_1.tapleafHash)({\n    output: tapLeaf.script,\n    version: tapLeaf.leafVersion,\n  });\n  const rootHash = (0, bip341_1.rootHashFromPath)(\n    tapLeaf.controlBlock,\n    leafHash,\n  );\n  return rootHash.equals(merkleRoot);\n}\nfunction sortSignatures(input, tapLeaf) {\n  const leafHash = (0, bip341_1.tapleafHash)({\n    output: tapLeaf.script,\n    version: tapLeaf.leafVersion,\n  });\n  return (input.tapScriptSig || [])\n    .filter(tss => tss.leafHash.equals(leafHash))\n    .map(tss => addPubkeyPositionInScript(tapLeaf.script, tss))\n    .sort((t1, t2) => t2.positionInScript - t1.positionInScript)\n    .map(t => t.signature);\n}\nfunction addPubkeyPositionInScript(script, tss) {\n  return Object.assign(\n    {\n      positionInScript: (0, psbtutils_1.pubkeyPositionInScript)(\n        tss.pubkey,\n        script,\n      ),\n    },\n    tss,\n  );\n}\n/**\n * Find tapleaf by hash, or get the signed tapleaf with the shortest path.\n */\nfunction findTapLeafToFinalize(input, inputIndex, leafHashToFinalize) {\n  if (!input.tapScriptSig || !input.tapScriptSig.length)\n    throw new Error(\n      `Can not finalize taproot input #${inputIndex}. No tapleaf script signature provided.`,\n    );\n  const tapLeaf = (input.tapLeafScript || [])\n    .sort((a, b) => a.controlBlock.length - b.controlBlock.length)\n    .find(leaf =>\n      canFinalizeLeaf(leaf, input.tapScriptSig, leafHashToFinalize),\n    );\n  if (!tapLeaf)\n    throw new Error(\n      `Can not finalize taproot input #${inputIndex}. Signature for tapleaf script not found.`,\n    );\n  return tapLeaf;\n}\nfunction canFinalizeLeaf(leaf, tapScriptSig, hash) {\n  const leafHash = (0, bip341_1.tapleafHash)({\n    output: leaf.script,\n    version: leaf.leafVersion,\n  });\n  const whiteListedHash = !hash || hash.equals(leafHash);\n  return (\n    whiteListedHash &&\n    tapScriptSig.find(tss => tss.leafHash.equals(leafHash)) !== undefined\n  );\n}\nfunction hasNonTaprootFields(io) {\n  return (\n    io &&\n    !!(\n      io.redeemScript ||\n      io.witnessScript ||\n      (io.bip32Derivation && io.bip32Derivation.length)\n    )\n  );\n}\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.Psbt = void 0;\nconst bip174_1 = require('bip174');\nconst varuint = require('bip174/src/lib/converter/varint');\nconst utils_1 = require('bip174/src/lib/utils');\nconst address_1 = require('./address');\nconst bufferutils_1 = require('./bufferutils');\nconst networks_1 = require('./networks');\nconst payments = require('./payments');\nconst bip341_1 = require('./payments/bip341');\nconst bscript = require('./script');\nconst transaction_1 = require('./transaction');\nconst bip371_1 = require('./psbt/bip371');\nconst psbtutils_1 = require('./psbt/psbtutils');\n/**\n * These are the default arguments for a Psbt instance.\n */\nconst DEFAULT_OPTS = {\n  /**\n   * A bitcoinjs Network object. This is only used if you pass an `address`\n   * parameter to addOutput. Otherwise it is not needed and can be left default.\n   */\n  network: networks_1.bitcoin,\n  /**\n   * When extractTransaction is called, the fee rate is checked.\n   * THIS IS NOT TO BE RELIED ON.\n   * It is only here as a last ditch effort to prevent sending a 500 BTC fee etc.\n   */\n  maximumFeeRate: 5000, // satoshi per byte\n};\n/**\n * Psbt class can parse and generate a PSBT binary based off of the BIP174.\n * There are 6 roles that this class fulfills. (Explained in BIP174)\n *\n * Creator: This can be done with `new Psbt()`\n * Updater: This can be done with `psbt.addInput(input)`, `psbt.addInputs(inputs)`,\n *   `psbt.addOutput(output)`, `psbt.addOutputs(outputs)` when you are looking to\n *   add new inputs and outputs to the PSBT, and `psbt.updateGlobal(itemObject)`,\n *   `psbt.updateInput(itemObject)`, `psbt.updateOutput(itemObject)`\n *   addInput requires hash: Buffer | string; and index: number; as attributes\n *   and can also include any attributes that are used in updateInput method.\n *   addOutput requires script: Buffer; and value: number; and likewise can include\n *   data for updateOutput.\n *   For a list of what attributes should be what types. Check the bip174 library.\n *   Also, check the integration tests for some examples of usage.\n * Signer: There are a few methods. signAllInputs and signAllInputsAsync, which will search all input\n *   information for your pubkey or pubkeyhash, and only sign inputs where it finds\n *   your info. Or you can explicitly sign a specific input with signInput and\n *   signInputAsync. For the async methods you can create a SignerAsync object\n *   and use something like a hardware wallet to sign with. (You must implement this)\n * Combiner: psbts can be combined easily with `psbt.combine(psbt2, psbt3, psbt4 ...)`\n *   the psbt calling combine will always have precedence when a conflict occurs.\n *   Combine checks if the internal bitcoin transaction is the same, so be sure that\n *   all sequences, version, locktime, etc. are the same before combining.\n * Input Finalizer: This role is fairly important. Not only does it need to construct\n *   the input scriptSigs and witnesses, but it SHOULD verify the signatures etc.\n *   Before running `psbt.finalizeAllInputs()` please run `psbt.validateSignaturesOfAllInputs()`\n *   Running any finalize method will delete any data in the input(s) that are no longer\n *   needed due to the finalized scripts containing the information.\n * Transaction Extractor: This role will perform some checks before returning a\n *   Transaction object. Such as fee rate not being larger than maximumFeeRate etc.\n */\nclass Psbt {\n  static fromBase64(data, opts = {}) {\n    const buffer = Buffer.from(data, 'base64');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromHex(data, opts = {}) {\n    const buffer = Buffer.from(data, 'hex');\n    return this.fromBuffer(buffer, opts);\n  }\n  static fromBuffer(buffer, opts = {}) {\n    const psbtBase = bip174_1.Psbt.fromBuffer(buffer, transactionFromBuffer);\n    const psbt = new Psbt(opts, psbtBase);\n    checkTxForDupeIns(psbt.__CACHE.__TX, psbt.__CACHE);\n    return psbt;\n  }\n  constructor(opts = {}, data = new bip174_1.Psbt(new PsbtTransaction())) {\n    this.data = data;\n    // set defaults\n    this.opts = Object.assign({}, DEFAULT_OPTS, opts);\n    this.__CACHE = {\n      __NON_WITNESS_UTXO_TX_CACHE: [],\n      __NON_WITNESS_UTXO_BUF_CACHE: [],\n      __TX_IN_CACHE: {},\n      __TX: this.data.globalMap.unsignedTx.tx,\n      // Psbt's predecesor (TransactionBuilder - now removed) behavior\n      // was to not confirm input values  before signing.\n      // Even though we highly encourage people to get\n      // the full parent transaction to verify values, the ability to\n      // sign non-segwit inputs without the full transaction was often\n      // requested. So the only way to activate is to use @ts-ignore.\n      // We will disable exporting the Psbt when unsafe sign is active.\n      // because it is not BIP174 compliant.\n      __UNSAFE_SIGN_NONSEGWIT: false,\n    };\n    if (this.data.inputs.length === 0) this.setVersion(2);\n    // Make data hidden when enumerating\n    const dpew = (obj, attr, enumerable, writable) =>\n      Object.defineProperty(obj, attr, {\n        enumerable,\n        writable,\n      });\n    dpew(this, '__CACHE', false, true);\n    dpew(this, 'opts', false, true);\n  }\n  get inputCount() {\n    return this.data.inputs.length;\n  }\n  get version() {\n    return this.__CACHE.__TX.version;\n  }\n  set version(version) {\n    this.setVersion(version);\n  }\n  get locktime() {\n    return this.__CACHE.__TX.locktime;\n  }\n  set locktime(locktime) {\n    this.setLocktime(locktime);\n  }\n  get txInputs() {\n    return this.__CACHE.__TX.ins.map(input => ({\n      hash: (0, bufferutils_1.cloneBuffer)(input.hash),\n      index: input.index,\n      sequence: input.sequence,\n    }));\n  }\n  get txOutputs() {\n    return this.__CACHE.__TX.outs.map(output => {\n      let address;\n      try {\n        address = (0, address_1.fromOutputScript)(\n          output.script,\n          this.opts.network,\n        );\n      } catch (_) {}\n      return {\n        script: (0, bufferutils_1.cloneBuffer)(output.script),\n        value: output.value,\n        address,\n      };\n    });\n  }\n  combine(...those) {\n    this.data.combine(...those.map(o => o.data));\n    return this;\n  }\n  clone() {\n    // TODO: more efficient cloning\n    const res = Psbt.fromBuffer(this.data.toBuffer());\n    res.opts = JSON.parse(JSON.stringify(this.opts));\n    return res;\n  }\n  setMaximumFeeRate(satoshiPerByte) {\n    check32Bit(satoshiPerByte); // 42.9 BTC per byte IS excessive... so throw\n    this.opts.maximumFeeRate = satoshiPerByte;\n  }\n  setVersion(version) {\n    check32Bit(version);\n    checkInputsForPartialSig(this.data.inputs, 'setVersion');\n    const c = this.__CACHE;\n    c.__TX.version = version;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setLocktime(locktime) {\n    check32Bit(locktime);\n    checkInputsForPartialSig(this.data.inputs, 'setLocktime');\n    const c = this.__CACHE;\n    c.__TX.locktime = locktime;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  setInputSequence(inputIndex, sequence) {\n    check32Bit(sequence);\n    checkInputsForPartialSig(this.data.inputs, 'setInputSequence');\n    const c = this.__CACHE;\n    if (c.__TX.ins.length <= inputIndex) {\n      throw new Error('Input index too high');\n    }\n    c.__TX.ins[inputIndex].sequence = sequence;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addInputs(inputDatas) {\n    inputDatas.forEach(inputData => this.addInput(inputData));\n    return this;\n  }\n  addInput(inputData) {\n    if (\n      arguments.length > 1 ||\n      !inputData ||\n      inputData.hash === undefined ||\n      inputData.index === undefined\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addInput. ` +\n          `Requires single object with at least [hash] and [index]`,\n      );\n    }\n    (0, bip371_1.checkTaprootInputFields)(inputData, inputData, 'addInput');\n    checkInputsForPartialSig(this.data.inputs, 'addInput');\n    if (inputData.witnessScript) checkInvalidP2WSH(inputData.witnessScript);\n    const c = this.__CACHE;\n    this.data.addInput(inputData);\n    const txIn = c.__TX.ins[c.__TX.ins.length - 1];\n    checkTxInputCache(c, txIn);\n    const inputIndex = this.data.inputs.length - 1;\n    const input = this.data.inputs[inputIndex];\n    if (input.nonWitnessUtxo) {\n      addNonWitnessTxCache(this.__CACHE, input, inputIndex);\n    }\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  addOutputs(outputDatas) {\n    outputDatas.forEach(outputData => this.addOutput(outputData));\n    return this;\n  }\n  addOutput(outputData) {\n    if (\n      arguments.length > 1 ||\n      !outputData ||\n      outputData.value === undefined ||\n      (outputData.address === undefined && outputData.script === undefined)\n    ) {\n      throw new Error(\n        `Invalid arguments for Psbt.addOutput. ` +\n          `Requires single object with at least [script or address] and [value]`,\n      );\n    }\n    checkInputsForPartialSig(this.data.inputs, 'addOutput');\n    const { address } = outputData;\n    if (typeof address === 'string') {\n      const { network } = this.opts;\n      const script = (0, address_1.toOutputScript)(address, network);\n      outputData = Object.assign(outputData, { script });\n    }\n    (0, bip371_1.checkTaprootOutputFields)(outputData, outputData, 'addOutput');\n    const c = this.__CACHE;\n    this.data.addOutput(outputData);\n    c.__FEE = undefined;\n    c.__FEE_RATE = undefined;\n    c.__EXTRACTED_TX = undefined;\n    return this;\n  }\n  extractTransaction(disableFeeCheck) {\n    if (!this.data.inputs.every(isFinalized)) throw new Error('Not finalized');\n    const c = this.__CACHE;\n    if (!disableFeeCheck) {\n      checkFees(this, c, this.opts);\n    }\n    if (c.__EXTRACTED_TX) return c.__EXTRACTED_TX;\n    const tx = c.__TX.clone();\n    inputFinalizeGetAmts(this.data.inputs, tx, c, true);\n    return tx;\n  }\n  getFeeRate() {\n    return getTxCacheValue(\n      '__FEE_RATE',\n      'fee rate',\n      this.data.inputs,\n      this.__CACHE,\n    );\n  }\n  getFee() {\n    return getTxCacheValue('__FEE', 'fee', this.data.inputs, this.__CACHE);\n  }\n  finalizeAllInputs() {\n    (0, utils_1.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    range(this.data.inputs.length).forEach(idx => this.finalizeInput(idx));\n    return this;\n  }\n  finalizeInput(inputIndex, finalScriptsFunc) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        undefined,\n        finalScriptsFunc,\n      );\n    return this._finalizeInput(inputIndex, input, finalScriptsFunc);\n  }\n  finalizeTaprootInput(\n    inputIndex,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = bip371_1.tapScriptFinalizer,\n  ) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this._finalizeTaprootInput(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n        finalScriptsFunc,\n      );\n    throw new Error(`Cannot finalize input #${inputIndex}. Not Taproot.`);\n  }\n  _finalizeInput(inputIndex, input, finalScriptsFunc = getFinalScripts) {\n    const { script, isP2SH, isP2WSH, isSegwit } = getScriptFromInput(\n      inputIndex,\n      input,\n      this.__CACHE,\n    );\n    if (!script) throw new Error(`No script found for input #${inputIndex}`);\n    checkPartialSigSighashes(input);\n    const { finalScriptSig, finalScriptWitness } = finalScriptsFunc(\n      inputIndex,\n      input,\n      script,\n      isSegwit,\n      isP2SH,\n      isP2WSH,\n    );\n    if (finalScriptSig) this.data.updateInput(inputIndex, { finalScriptSig });\n    if (finalScriptWitness)\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    if (!finalScriptSig && !finalScriptWitness)\n      throw new Error(`Unknown error finalizing input #${inputIndex}`);\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  _finalizeTaprootInput(\n    inputIndex,\n    input,\n    tapLeafHashToFinalize,\n    finalScriptsFunc = bip371_1.tapScriptFinalizer,\n  ) {\n    if (!input.witnessUtxo)\n      throw new Error(\n        `Cannot finalize input #${inputIndex}. Missing withness utxo.`,\n      );\n    // Check key spend first. Increased privacy and reduced block space.\n    if (input.tapKeySig) {\n      const payment = payments.p2tr({\n        output: input.witnessUtxo.script,\n        signature: input.tapKeySig,\n      });\n      const finalScriptWitness = (0, psbtutils_1.witnessStackToScriptWitness)(\n        payment.witness,\n      );\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    } else {\n      const { finalScriptWitness } = finalScriptsFunc(\n        inputIndex,\n        input,\n        tapLeafHashToFinalize,\n      );\n      this.data.updateInput(inputIndex, { finalScriptWitness });\n    }\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n  getInputType(inputIndex) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    const script = getScriptFromUtxo(inputIndex, input, this.__CACHE);\n    const result = getMeaningfulScript(\n      script,\n      inputIndex,\n      'input',\n      input.redeemScript || redeemFromFinalScriptSig(input.finalScriptSig),\n      input.witnessScript ||\n        redeemFromFinalWitnessScript(input.finalScriptWitness),\n    );\n    const type = result.type === 'raw' ? '' : result.type + '-';\n    const mainType = classifyScript(result.meaningfulScript);\n    return type + mainType;\n  }\n  inputHasPubkey(inputIndex, pubkey) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    return pubkeyInInput(pubkey, input, inputIndex, this.__CACHE);\n  }\n  inputHasHDKey(inputIndex, root) {\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!input.bip32Derivation && input.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  outputHasPubkey(outputIndex, pubkey) {\n    const output = (0, utils_1.checkForOutput)(this.data.outputs, outputIndex);\n    return pubkeyInOutput(pubkey, output, outputIndex, this.__CACHE);\n  }\n  outputHasHDKey(outputIndex, root) {\n    const output = (0, utils_1.checkForOutput)(this.data.outputs, outputIndex);\n    const derivationIsMine = bip32DerivationIsMine(root);\n    return (\n      !!output.bip32Derivation && output.bip32Derivation.some(derivationIsMine)\n    );\n  }\n  validateSignaturesOfAllInputs(validator) {\n    (0, utils_1.checkForInput)(this.data.inputs, 0); // making sure we have at least one\n    const results = range(this.data.inputs.length).map(idx =>\n      this.validateSignaturesOfInput(idx, validator),\n    );\n    return results.reduce((final, res) => res === true && final, true);\n  }\n  validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this.validateSignaturesOfTaprootInput(\n        inputIndex,\n        validator,\n        pubkey,\n      );\n    return this._validateSignaturesOfInput(inputIndex, validator, pubkey);\n  }\n  _validateSignaturesOfInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const partialSig = (input || {}).partialSig;\n    if (!input || !partialSig || partialSig.length < 1)\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    const mySigs = pubkey\n      ? partialSig.filter(sig => sig.pubkey.equals(pubkey))\n      : partialSig;\n    if (mySigs.length < 1) throw new Error('No signatures for this pubkey');\n    const results = [];\n    let hashCache;\n    let scriptCache;\n    let sighashCache;\n    for (const pSig of mySigs) {\n      const sig = bscript.signature.decode(pSig.signature);\n      const { hash, script } =\n        sighashCache !== sig.hashType\n          ? getHashForSig(\n              inputIndex,\n              Object.assign({}, input, { sighashType: sig.hashType }),\n              this.__CACHE,\n              true,\n            )\n          : { hash: hashCache, script: scriptCache };\n      sighashCache = sig.hashType;\n      hashCache = hash;\n      scriptCache = script;\n      checkScriptForPubkey(pSig.pubkey, script, 'verify');\n      results.push(validator(pSig.pubkey, hash, sig.signature));\n    }\n    return results.every(res => res === true);\n  }\n  validateSignaturesOfTaprootInput(inputIndex, validator, pubkey) {\n    const input = this.data.inputs[inputIndex];\n    const tapKeySig = (input || {}).tapKeySig;\n    const tapScriptSig = (input || {}).tapScriptSig;\n    if (!input && !tapKeySig && !(tapScriptSig && !tapScriptSig.length))\n      throw new Error('No signatures to validate');\n    if (typeof validator !== 'function')\n      throw new Error('Need validator function to validate signatures');\n    pubkey = pubkey && (0, bip371_1.toXOnly)(pubkey);\n    const allHashses = pubkey\n      ? getTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          pubkey,\n          this.__CACHE,\n        )\n      : getAllTaprootHashesForSig(\n          inputIndex,\n          input,\n          this.data.inputs,\n          this.__CACHE,\n        );\n    if (!allHashses.length) throw new Error('No signatures for this pubkey');\n    const tapKeyHash = allHashses.find(h => !!h.leafHash);\n    if (tapKeySig && tapKeyHash) {\n      const isValidTapkeySig = validator(\n        tapKeyHash.pubkey,\n        tapKeyHash.hash,\n        tapKeySig,\n      );\n      if (!isValidTapkeySig) return false;\n    }\n    if (tapScriptSig) {\n      for (const tapSig of tapScriptSig) {\n        const tapSigHash = allHashses.find(h => tapSig.pubkey.equals(h.pubkey));\n        if (tapSigHash) {\n          const isValidTapScriptSig = validator(\n            tapSig.pubkey,\n            tapSigHash.hash,\n            tapSig.signature,\n          );\n          if (!isValidTapScriptSig) return false;\n        }\n      }\n    }\n    return true;\n  }\n  signAllInputsHD(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInputHD(i, hdKeyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsHDAsync(\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const results = [];\n      const promises = [];\n      for (const i of range(this.data.inputs.length)) {\n        promises.push(\n          this.signInputHDAsync(i, hdKeyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInputHD(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n      throw new Error('Need HDSigner to sign input');\n    }\n    const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n    signers.forEach(signer => this.signInput(inputIndex, signer, sighashTypes));\n    return this;\n  }\n  signInputHDAsync(\n    inputIndex,\n    hdKeyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    return new Promise((resolve, reject) => {\n      if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n        return reject(new Error('Need HDSigner to sign input'));\n      }\n      const signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n      const promises = signers.map(signer =>\n        this.signInputAsync(inputIndex, signer, sighashTypes),\n      );\n      return Promise.all(promises)\n        .then(() => {\n          resolve();\n        })\n        .catch(reject);\n    });\n  }\n  signAllInputs(keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    // TODO: Add a pubkey/pubkeyhash cache to each input\n    // as input information is added, then eventually\n    // optimize this method.\n    const results = [];\n    for (const i of range(this.data.inputs.length)) {\n      try {\n        this.signInput(i, keyPair, sighashTypes);\n        results.push(true);\n      } catch (err) {\n        results.push(false);\n      }\n    }\n    if (results.every(v => v === false)) {\n      throw new Error('No inputs were signed');\n    }\n    return this;\n  }\n  signAllInputsAsync(keyPair, sighashTypes) {\n    return new Promise((resolve, reject) => {\n      if (!keyPair || !keyPair.publicKey)\n        return reject(new Error('Need Signer to sign input'));\n      // TODO: Add a pubkey/pubkeyhash cache to each input\n      // as input information is added, then eventually\n      // optimize this method.\n      const results = [];\n      const promises = [];\n      for (const [i] of this.data.inputs.entries()) {\n        promises.push(\n          this.signInputAsync(i, keyPair, sighashTypes).then(\n            () => {\n              results.push(true);\n            },\n            () => {\n              results.push(false);\n            },\n          ),\n        );\n      }\n      return Promise.all(promises).then(() => {\n        if (results.every(v => v === false)) {\n          return reject(new Error('No inputs were signed'));\n        }\n        resolve();\n      });\n    });\n  }\n  signInput(inputIndex, keyPair, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input)) {\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        undefined,\n        sighashTypes,\n      );\n    }\n    return this._signInput(inputIndex, keyPair, sighashTypes);\n  }\n  signTaprootInput(inputIndex, keyPair, tapLeafHashToSign, sighashTypes) {\n    if (!keyPair || !keyPair.publicKey)\n      throw new Error('Need Signer to sign input');\n    const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n    if ((0, bip371_1.isTaprootInput)(input))\n      return this._signTaprootInput(\n        inputIndex,\n        input,\n        keyPair,\n        tapLeafHashToSign,\n        sighashTypes,\n      );\n    throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n  }\n  _signInput(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    const partialSig = [\n      {\n        pubkey: keyPair.publicKey,\n        signature: bscript.signature.encode(keyPair.sign(hash), sighashType),\n      },\n    ];\n    this.data.updateInput(inputIndex, { partialSig });\n    return this;\n  }\n  _signTaprootInput(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes = [transaction_1.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    const tapKeySig = hashesForSig\n      .filter(h => !h.leafHash)\n      .map(h =>\n        (0, bip371_1.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n      )[0];\n    const tapScriptSig = hashesForSig\n      .filter(h => !!h.leafHash)\n      .map(h => ({\n        pubkey: (0, bip371_1.toXOnly)(keyPair.publicKey),\n        signature: (0, bip371_1.serializeTaprootSignature)(\n          keyPair.signSchnorr(h.hash),\n          input.sighashType,\n        ),\n        leafHash: h.leafHash,\n      }));\n    if (tapKeySig) {\n      this.data.updateInput(inputIndex, { tapKeySig });\n    }\n    if (tapScriptSig.length) {\n      this.data.updateInput(inputIndex, { tapScriptSig });\n    }\n    return this;\n  }\n  signInputAsync(inputIndex, keyPair, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n      if ((0, bip371_1.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          undefined,\n          sighashTypes,\n        );\n      return this._signInputAsync(inputIndex, keyPair, sighashTypes);\n    });\n  }\n  signTaprootInputAsync(inputIndex, keyPair, tapLeafHash, sighashTypes) {\n    return Promise.resolve().then(() => {\n      if (!keyPair || !keyPair.publicKey)\n        throw new Error('Need Signer to sign input');\n      const input = (0, utils_1.checkForInput)(this.data.inputs, inputIndex);\n      if ((0, bip371_1.isTaprootInput)(input))\n        return this._signTaprootInputAsync(\n          inputIndex,\n          input,\n          keyPair,\n          tapLeafHash,\n          sighashTypes,\n        );\n      throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n    });\n  }\n  _signInputAsync(\n    inputIndex,\n    keyPair,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_ALL],\n  ) {\n    const { hash, sighashType } = getHashAndSighashType(\n      this.data.inputs,\n      inputIndex,\n      keyPair.publicKey,\n      this.__CACHE,\n      sighashTypes,\n    );\n    return Promise.resolve(keyPair.sign(hash)).then(signature => {\n      const partialSig = [\n        {\n          pubkey: keyPair.publicKey,\n          signature: bscript.signature.encode(signature, sighashType),\n        },\n      ];\n      this.data.updateInput(inputIndex, { partialSig });\n    });\n  }\n  async _signTaprootInputAsync(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHash,\n    sighashTypes = [transaction_1.Transaction.SIGHASH_DEFAULT],\n  ) {\n    const hashesForSig = this.checkTaprootHashesForSig(\n      inputIndex,\n      input,\n      keyPair,\n      tapLeafHash,\n      sighashTypes,\n    );\n    const signaturePromises = [];\n    const tapKeyHash = hashesForSig.filter(h => !h.leafHash)[0];\n    if (tapKeyHash) {\n      const tapKeySigPromise = Promise.resolve(\n        keyPair.signSchnorr(tapKeyHash.hash),\n      ).then(sig => {\n        return {\n          tapKeySig: (0, bip371_1.serializeTaprootSignature)(\n            sig,\n            input.sighashType,\n          ),\n        };\n      });\n      signaturePromises.push(tapKeySigPromise);\n    }\n    const tapScriptHashes = hashesForSig.filter(h => !!h.leafHash);\n    if (tapScriptHashes.length) {\n      const tapScriptSigPromises = tapScriptHashes.map(tsh => {\n        return Promise.resolve(keyPair.signSchnorr(tsh.hash)).then(\n          signature => {\n            const tapScriptSig = [\n              {\n                pubkey: (0, bip371_1.toXOnly)(keyPair.publicKey),\n                signature: (0, bip371_1.serializeTaprootSignature)(\n                  signature,\n                  input.sighashType,\n                ),\n                leafHash: tsh.leafHash,\n              },\n            ];\n            return { tapScriptSig };\n          },\n        );\n      });\n      signaturePromises.push(...tapScriptSigPromises);\n    }\n    return Promise.all(signaturePromises).then(results => {\n      results.forEach(v => this.data.updateInput(inputIndex, v));\n    });\n  }\n  checkTaprootHashesForSig(\n    inputIndex,\n    input,\n    keyPair,\n    tapLeafHashToSign,\n    allowedSighashTypes,\n  ) {\n    if (typeof keyPair.signSchnorr !== 'function')\n      throw new Error(\n        `Need Schnorr Signer to sign taproot input #${inputIndex}.`,\n      );\n    const hashesForSig = getTaprootHashesForSig(\n      inputIndex,\n      input,\n      this.data.inputs,\n      keyPair.publicKey,\n      this.__CACHE,\n      tapLeafHashToSign,\n      allowedSighashTypes,\n    );\n    if (!hashesForSig || !hashesForSig.length)\n      throw new Error(\n        `Can not sign for input #${inputIndex} with the key ${keyPair.publicKey.toString(\n          'hex',\n        )}`,\n      );\n    return hashesForSig;\n  }\n  toBuffer() {\n    checkCache(this.__CACHE);\n    return this.data.toBuffer();\n  }\n  toHex() {\n    checkCache(this.__CACHE);\n    return this.data.toHex();\n  }\n  toBase64() {\n    checkCache(this.__CACHE);\n    return this.data.toBase64();\n  }\n  updateGlobal(updateData) {\n    this.data.updateGlobal(updateData);\n    return this;\n  }\n  updateInput(inputIndex, updateData) {\n    if (updateData.witnessScript) checkInvalidP2WSH(updateData.witnessScript);\n    (0, bip371_1.checkTaprootInputFields)(\n      this.data.inputs[inputIndex],\n      updateData,\n      'updateInput',\n    );\n    this.data.updateInput(inputIndex, updateData);\n    if (updateData.nonWitnessUtxo) {\n      addNonWitnessTxCache(\n        this.__CACHE,\n        this.data.inputs[inputIndex],\n        inputIndex,\n      );\n    }\n    return this;\n  }\n  updateOutput(outputIndex, updateData) {\n    const outputData = this.data.outputs[outputIndex];\n    (0, bip371_1.checkTaprootOutputFields)(\n      outputData,\n      updateData,\n      'updateOutput',\n    );\n    this.data.updateOutput(outputIndex, updateData);\n    return this;\n  }\n  addUnknownKeyValToGlobal(keyVal) {\n    this.data.addUnknownKeyValToGlobal(keyVal);\n    return this;\n  }\n  addUnknownKeyValToInput(inputIndex, keyVal) {\n    this.data.addUnknownKeyValToInput(inputIndex, keyVal);\n    return this;\n  }\n  addUnknownKeyValToOutput(outputIndex, keyVal) {\n    this.data.addUnknownKeyValToOutput(outputIndex, keyVal);\n    return this;\n  }\n  clearFinalizedInput(inputIndex) {\n    this.data.clearFinalizedInput(inputIndex);\n    return this;\n  }\n}\nexports.Psbt = Psbt;\n/**\n * This function is needed to pass to the bip174 base class's fromBuffer.\n * It takes the \"transaction buffer\" portion of the psbt buffer and returns a\n * Transaction (From the bip174 library) interface.\n */\nconst transactionFromBuffer = buffer => new PsbtTransaction(buffer);\n/**\n * This class implements the Transaction interface from bip174 library.\n * It contains a bitcoinjs-lib Transaction object.\n */\nclass PsbtTransaction {\n  constructor(buffer = Buffer.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0])) {\n    this.tx = transaction_1.Transaction.fromBuffer(buffer);\n    checkTxEmpty(this.tx);\n    Object.defineProperty(this, 'tx', {\n      enumerable: false,\n      writable: true,\n    });\n  }\n  getInputOutputCounts() {\n    return {\n      inputCount: this.tx.ins.length,\n      outputCount: this.tx.outs.length,\n    };\n  }\n  addInput(input) {\n    if (\n      input.hash === undefined ||\n      input.index === undefined ||\n      (!Buffer.isBuffer(input.hash) && typeof input.hash !== 'string') ||\n      typeof input.index !== 'number'\n    ) {\n      throw new Error('Error adding input.');\n    }\n    const hash =\n      typeof input.hash === 'string'\n        ? (0, bufferutils_1.reverseBuffer)(Buffer.from(input.hash, 'hex'))\n        : input.hash;\n    this.tx.addInput(hash, input.index, input.sequence);\n  }\n  addOutput(output) {\n    if (\n      output.script === undefined ||\n      output.value === undefined ||\n      !Buffer.isBuffer(output.script) ||\n      typeof output.value !== 'number'\n    ) {\n      throw new Error('Error adding output.');\n    }\n    this.tx.addOutput(output.script, output.value);\n  }\n  toBuffer() {\n    return this.tx.toBuffer();\n  }\n}\nfunction canFinalize(input, script, scriptType) {\n  switch (scriptType) {\n    case 'pubkey':\n    case 'pubkeyhash':\n    case 'witnesspubkeyhash':\n      return hasSigs(1, input.partialSig);\n    case 'multisig':\n      const p2ms = payments.p2ms({ output: script });\n      return hasSigs(p2ms.m, input.partialSig, p2ms.pubkeys);\n    default:\n      return false;\n  }\n}\nfunction checkCache(cache) {\n  if (cache.__UNSAFE_SIGN_NONSEGWIT !== false) {\n    throw new Error('Not BIP174 compliant, can not export');\n  }\n}\nfunction hasSigs(neededSigs, partialSig, pubkeys) {\n  if (!partialSig) return false;\n  let sigs;\n  if (pubkeys) {\n    sigs = pubkeys\n      .map(pkey => {\n        const pubkey = compressPubkey(pkey);\n        return partialSig.find(pSig => pSig.pubkey.equals(pubkey));\n      })\n      .filter(v => !!v);\n  } else {\n    sigs = partialSig;\n  }\n  if (sigs.length > neededSigs) throw new Error('Too many signatures');\n  return sigs.length === neededSigs;\n}\nfunction isFinalized(input) {\n  return !!input.finalScriptSig || !!input.finalScriptWitness;\n}\nfunction bip32DerivationIsMine(root) {\n  return d => {\n    if (!d.masterFingerprint.equals(root.fingerprint)) return false;\n    if (!root.derivePath(d.path).publicKey.equals(d.pubkey)) return false;\n    return true;\n  };\n}\nfunction check32Bit(num) {\n  if (\n    typeof num !== 'number' ||\n    num !== Math.floor(num) ||\n    num > 0xffffffff ||\n    num < 0\n  ) {\n    throw new Error('Invalid 32 bit integer');\n  }\n}\nfunction checkFees(psbt, cache, opts) {\n  const feeRate = cache.__FEE_RATE || psbt.getFeeRate();\n  const vsize = cache.__EXTRACTED_TX.virtualSize();\n  const satoshis = feeRate * vsize;\n  if (feeRate >= opts.maximumFeeRate) {\n    throw new Error(\n      `Warning: You are paying around ${(satoshis / 1e8).toFixed(8)} in ` +\n        `fees, which is ${feeRate} satoshi per byte for a transaction ` +\n        `with a VSize of ${vsize} bytes (segwit counted as 0.25 byte per ` +\n        `byte). Use setMaximumFeeRate method to raise your threshold, or ` +\n        `pass true to the first arg of extractTransaction.`,\n    );\n  }\n}\nfunction checkInputsForPartialSig(inputs, action) {\n  inputs.forEach(input => {\n    const throws = (0, bip371_1.isTaprootInput)(input)\n      ? (0, bip371_1.checkTaprootInputForSigs)(input, action)\n      : (0, psbtutils_1.checkInputForSig)(input, action);\n    if (throws)\n      throw new Error('Can not modify transaction, signatures exist.');\n  });\n}\nfunction checkPartialSigSighashes(input) {\n  if (!input.sighashType || !input.partialSig) return;\n  const { partialSig, sighashType } = input;\n  partialSig.forEach(pSig => {\n    const { hashType } = bscript.signature.decode(pSig.signature);\n    if (sighashType !== hashType) {\n      throw new Error('Signature sighash does not match input sighash type');\n    }\n  });\n}\nfunction checkScriptForPubkey(pubkey, script, action) {\n  if (!(0, psbtutils_1.pubkeyInScript)(pubkey, script)) {\n    throw new Error(\n      `Can not ${action} for this input with the key ${pubkey.toString('hex')}`,\n    );\n  }\n}\nfunction checkTxEmpty(tx) {\n  const isEmpty = tx.ins.every(\n    input =>\n      input.script &&\n      input.script.length === 0 &&\n      input.witness &&\n      input.witness.length === 0,\n  );\n  if (!isEmpty) {\n    throw new Error('Format Error: Transaction ScriptSigs are not empty');\n  }\n}\nfunction checkTxForDupeIns(tx, cache) {\n  tx.ins.forEach(input => {\n    checkTxInputCache(cache, input);\n  });\n}\nfunction checkTxInputCache(cache, input) {\n  const key =\n    (0, bufferutils_1.reverseBuffer)(Buffer.from(input.hash)).toString('hex') +\n    ':' +\n    input.index;\n  if (cache.__TX_IN_CACHE[key]) throw new Error('Duplicate input detected.');\n  cache.__TX_IN_CACHE[key] = 1;\n}\nfunction scriptCheckerFactory(payment, paymentScriptName) {\n  return (inputIndex, scriptPubKey, redeemScript, ioType) => {\n    const redeemScriptOutput = payment({\n      redeem: { output: redeemScript },\n    }).output;\n    if (!scriptPubKey.equals(redeemScriptOutput)) {\n      throw new Error(\n        `${paymentScriptName} for ${ioType} #${inputIndex} doesn't match the scriptPubKey in the prevout`,\n      );\n    }\n  };\n}\nconst checkRedeemScript = scriptCheckerFactory(payments.p2sh, 'Redeem script');\nconst checkWitnessScript = scriptCheckerFactory(\n  payments.p2wsh,\n  'Witness script',\n);\nfunction getTxCacheValue(key, name, inputs, c) {\n  if (!inputs.every(isFinalized))\n    throw new Error(`PSBT must be finalized to calculate ${name}`);\n  if (key === '__FEE_RATE' && c.__FEE_RATE) return c.__FEE_RATE;\n  if (key === '__FEE' && c.__FEE) return c.__FEE;\n  let tx;\n  let mustFinalize = true;\n  if (c.__EXTRACTED_TX) {\n    tx = c.__EXTRACTED_TX;\n    mustFinalize = false;\n  } else {\n    tx = c.__TX.clone();\n  }\n  inputFinalizeGetAmts(inputs, tx, c, mustFinalize);\n  if (key === '__FEE_RATE') return c.__FEE_RATE;\n  else if (key === '__FEE') return c.__FEE;\n}\nfunction getFinalScripts(inputIndex, input, script, isSegwit, isP2SH, isP2WSH) {\n  const scriptType = classifyScript(script);\n  if (!canFinalize(input, script, scriptType))\n    throw new Error(`Can not finalize input #${inputIndex}`);\n  return prepareFinalScripts(\n    script,\n    scriptType,\n    input.partialSig,\n    isSegwit,\n    isP2SH,\n    isP2WSH,\n  );\n}\nfunction prepareFinalScripts(\n  script,\n  scriptType,\n  partialSig,\n  isSegwit,\n  isP2SH,\n  isP2WSH,\n) {\n  let finalScriptSig;\n  let finalScriptWitness;\n  // Wow, the payments API is very handy\n  const payment = getPayment(script, scriptType, partialSig);\n  const p2wsh = !isP2WSH ? null : payments.p2wsh({ redeem: payment });\n  const p2sh = !isP2SH ? null : payments.p2sh({ redeem: p2wsh || payment });\n  if (isSegwit) {\n    if (p2wsh) {\n      finalScriptWitness = (0, psbtutils_1.witnessStackToScriptWitness)(\n        p2wsh.witness,\n      );\n    } else {\n      finalScriptWitness = (0, psbtutils_1.witnessStackToScriptWitness)(\n        payment.witness,\n      );\n    }\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    }\n  } else {\n    if (p2sh) {\n      finalScriptSig = p2sh.input;\n    } else {\n      finalScriptSig = payment.input;\n    }\n  }\n  return {\n    finalScriptSig,\n    finalScriptWitness,\n  };\n}\nfunction getHashAndSighashType(\n  inputs,\n  inputIndex,\n  pubkey,\n  cache,\n  sighashTypes,\n) {\n  const input = (0, utils_1.checkForInput)(inputs, inputIndex);\n  const { hash, sighashType, script } = getHashForSig(\n    inputIndex,\n    input,\n    cache,\n    false,\n    sighashTypes,\n  );\n  checkScriptForPubkey(pubkey, script, 'sign');\n  return {\n    hash,\n    sighashType,\n  };\n}\nfunction getHashForSig(inputIndex, input, cache, forValidate, sighashTypes) {\n  const unsignedTx = cache.__TX;\n  const sighashType =\n    input.sighashType || transaction_1.Transaction.SIGHASH_ALL;\n  checkSighashTypeAllowed(sighashType, sighashTypes);\n  let hash;\n  let prevout;\n  if (input.nonWitnessUtxo) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const prevoutHash = unsignedTx.ins[inputIndex].hash;\n    const utxoHash = nonWitnessUtxoTx.getHash();\n    // If a non-witness UTXO is provided, its hash must match the hash specified in the prevout\n    if (!prevoutHash.equals(utxoHash)) {\n      throw new Error(\n        `Non-witness UTXO hash for input #${inputIndex} doesn't match the hash specified in the prevout`,\n      );\n    }\n    const prevoutIndex = unsignedTx.ins[inputIndex].index;\n    prevout = nonWitnessUtxoTx.outs[prevoutIndex];\n  } else if (input.witnessUtxo) {\n    prevout = input.witnessUtxo;\n  } else {\n    throw new Error('Need a Utxo input item for signing');\n  }\n  const { meaningfulScript, type } = getMeaningfulScript(\n    prevout.script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  if (['p2sh-p2wsh', 'p2wsh'].indexOf(type) >= 0) {\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      meaningfulScript,\n      prevout.value,\n      sighashType,\n    );\n  } else if ((0, psbtutils_1.isP2WPKH)(meaningfulScript)) {\n    // P2WPKH uses the P2PKH template for prevoutScript when signing\n    const signingScript = payments.p2pkh({\n      hash: meaningfulScript.slice(2),\n    }).output;\n    hash = unsignedTx.hashForWitnessV0(\n      inputIndex,\n      signingScript,\n      prevout.value,\n      sighashType,\n    );\n  } else {\n    // non-segwit\n    if (\n      input.nonWitnessUtxo === undefined &&\n      cache.__UNSAFE_SIGN_NONSEGWIT === false\n    )\n      throw new Error(\n        `Input #${inputIndex} has witnessUtxo but non-segwit script: ` +\n          `${meaningfulScript.toString('hex')}`,\n      );\n    if (!forValidate && cache.__UNSAFE_SIGN_NONSEGWIT !== false)\n      console.warn(\n        'Warning: Signing non-segwit inputs without the full parent transaction ' +\n          'means there is a chance that a miner could feed you incorrect information ' +\n          \"to trick you into paying large fees. This behavior is the same as Psbt's predecesor \" +\n          '(TransactionBuilder - now removed) when signing non-segwit scripts. You are not ' +\n          'able to export this Psbt with toBuffer|toBase64|toHex since it is not ' +\n          'BIP174 compliant.\\n*********************\\nPROCEED WITH CAUTION!\\n' +\n          '*********************',\n      );\n    hash = unsignedTx.hashForSignature(\n      inputIndex,\n      meaningfulScript,\n      sighashType,\n    );\n  }\n  return {\n    script: meaningfulScript,\n    sighashType,\n    hash,\n  };\n}\nfunction getAllTaprootHashesForSig(inputIndex, input, inputs, cache) {\n  const allPublicKeys = [];\n  if (input.tapInternalKey) {\n    const outputKey = (0, bip371_1.tweakInternalPubKey)(inputIndex, input);\n    allPublicKeys.push(outputKey);\n  }\n  if (input.tapScriptSig) {\n    const tapScriptPubkeys = input.tapScriptSig.map(tss => tss.pubkey);\n    allPublicKeys.push(...tapScriptPubkeys);\n  }\n  const allHashes = allPublicKeys.map(pubicKey =>\n    getTaprootHashesForSig(inputIndex, input, inputs, pubicKey, cache),\n  );\n  return allHashes.flat();\n}\nfunction getTaprootHashesForSig(\n  inputIndex,\n  input,\n  inputs,\n  pubkey,\n  cache,\n  tapLeafHashToSign,\n  allowedSighashTypes,\n) {\n  const unsignedTx = cache.__TX;\n  const sighashType =\n    input.sighashType || transaction_1.Transaction.SIGHASH_DEFAULT;\n  checkSighashTypeAllowed(sighashType, allowedSighashTypes);\n  const prevOuts = inputs.map((i, index) =>\n    getScriptAndAmountFromUtxo(index, i, cache),\n  );\n  const signingScripts = prevOuts.map(o => o.script);\n  const values = prevOuts.map(o => o.value);\n  const hashes = [];\n  if (input.tapInternalKey && !tapLeafHashToSign) {\n    const outputKey = (0, bip371_1.tweakInternalPubKey)(inputIndex, input);\n    if ((0, bip371_1.toXOnly)(pubkey).equals(outputKey)) {\n      const tapKeyHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        sighashType,\n      );\n      hashes.push({ pubkey, hash: tapKeyHash });\n    }\n  }\n  const tapLeafHashes = (input.tapLeafScript || [])\n    .filter(tapLeaf => (0, psbtutils_1.pubkeyInScript)(pubkey, tapLeaf.script))\n    .map(tapLeaf => {\n      const hash = (0, bip341_1.tapleafHash)({\n        output: tapLeaf.script,\n        version: tapLeaf.leafVersion,\n      });\n      return Object.assign({ hash }, tapLeaf);\n    })\n    .filter(\n      tapLeaf => !tapLeafHashToSign || tapLeafHashToSign.equals(tapLeaf.hash),\n    )\n    .map(tapLeaf => {\n      const tapScriptHash = unsignedTx.hashForWitnessV1(\n        inputIndex,\n        signingScripts,\n        values,\n        transaction_1.Transaction.SIGHASH_DEFAULT,\n        tapLeaf.hash,\n      );\n      return {\n        pubkey,\n        hash: tapScriptHash,\n        leafHash: tapLeaf.hash,\n      };\n    });\n  return hashes.concat(tapLeafHashes);\n}\nfunction checkSighashTypeAllowed(sighashType, sighashTypes) {\n  if (sighashTypes && sighashTypes.indexOf(sighashType) < 0) {\n    const str = sighashTypeToString(sighashType);\n    throw new Error(\n      `Sighash type is not allowed. Retry the sign method passing the ` +\n        `sighashTypes array of whitelisted types. Sighash type: ${str}`,\n    );\n  }\n}\nfunction getPayment(script, scriptType, partialSig) {\n  let payment;\n  switch (scriptType) {\n    case 'multisig':\n      const sigs = getSortedSigs(script, partialSig);\n      payment = payments.p2ms({\n        output: script,\n        signatures: sigs,\n      });\n      break;\n    case 'pubkey':\n      payment = payments.p2pk({\n        output: script,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'pubkeyhash':\n      payment = payments.p2pkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n    case 'witnesspubkeyhash':\n      payment = payments.p2wpkh({\n        output: script,\n        pubkey: partialSig[0].pubkey,\n        signature: partialSig[0].signature,\n      });\n      break;\n  }\n  return payment;\n}\nfunction getScriptFromInput(inputIndex, input, cache) {\n  const unsignedTx = cache.__TX;\n  const res = {\n    script: null,\n    isSegwit: false,\n    isP2SH: false,\n    isP2WSH: false,\n  };\n  res.isP2SH = !!input.redeemScript;\n  res.isP2WSH = !!input.witnessScript;\n  if (input.witnessScript) {\n    res.script = input.witnessScript;\n  } else if (input.redeemScript) {\n    res.script = input.redeemScript;\n  } else {\n    if (input.nonWitnessUtxo) {\n      const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n        cache,\n        input,\n        inputIndex,\n      );\n      const prevoutIndex = unsignedTx.ins[inputIndex].index;\n      res.script = nonWitnessUtxoTx.outs[prevoutIndex].script;\n    } else if (input.witnessUtxo) {\n      res.script = input.witnessUtxo.script;\n    }\n  }\n  if (input.witnessScript || (0, psbtutils_1.isP2WPKH)(res.script)) {\n    res.isSegwit = true;\n  }\n  return res;\n}\nfunction getSignersFromHD(inputIndex, inputs, hdKeyPair) {\n  const input = (0, utils_1.checkForInput)(inputs, inputIndex);\n  if (!input.bip32Derivation || input.bip32Derivation.length === 0) {\n    throw new Error('Need bip32Derivation to sign with HD');\n  }\n  const myDerivations = input.bip32Derivation\n    .map(bipDv => {\n      if (bipDv.masterFingerprint.equals(hdKeyPair.fingerprint)) {\n        return bipDv;\n      } else {\n        return;\n      }\n    })\n    .filter(v => !!v);\n  if (myDerivations.length === 0) {\n    throw new Error(\n      'Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint',\n    );\n  }\n  const signers = myDerivations.map(bipDv => {\n    const node = hdKeyPair.derivePath(bipDv.path);\n    if (!bipDv.pubkey.equals(node.publicKey)) {\n      throw new Error('pubkey did not match bip32Derivation');\n    }\n    return node;\n  });\n  return signers;\n}\nfunction getSortedSigs(script, partialSig) {\n  const p2ms = payments.p2ms({ output: script });\n  // for each pubkey in order of p2ms script\n  return p2ms.pubkeys\n    .map(pk => {\n      // filter partialSig array by pubkey being equal\n      return (\n        partialSig.filter(ps => {\n          return ps.pubkey.equals(pk);\n        })[0] || {}\n      ).signature;\n      // Any pubkey without a match will return undefined\n      // this last filter removes all the undefined items in the array.\n    })\n    .filter(v => !!v);\n}\nfunction scriptWitnessToWitnessStack(buffer) {\n  let offset = 0;\n  function readSlice(n) {\n    offset += n;\n    return buffer.slice(offset - n, offset);\n  }\n  function readVarInt() {\n    const vi = varuint.decode(buffer, offset);\n    offset += varuint.decode.bytes;\n    return vi;\n  }\n  function readVarSlice() {\n    return readSlice(readVarInt());\n  }\n  function readVector() {\n    const count = readVarInt();\n    const vector = [];\n    for (let i = 0; i < count; i++) vector.push(readVarSlice());\n    return vector;\n  }\n  return readVector();\n}\nfunction sighashTypeToString(sighashType) {\n  let text =\n    sighashType & transaction_1.Transaction.SIGHASH_ANYONECANPAY\n      ? 'SIGHASH_ANYONECANPAY | '\n      : '';\n  const sigMod = sighashType & 0x1f;\n  switch (sigMod) {\n    case transaction_1.Transaction.SIGHASH_ALL:\n      text += 'SIGHASH_ALL';\n      break;\n    case transaction_1.Transaction.SIGHASH_SINGLE:\n      text += 'SIGHASH_SINGLE';\n      break;\n    case transaction_1.Transaction.SIGHASH_NONE:\n      text += 'SIGHASH_NONE';\n      break;\n  }\n  return text;\n}\nfunction addNonWitnessTxCache(cache, input, inputIndex) {\n  cache.__NON_WITNESS_UTXO_BUF_CACHE[inputIndex] = input.nonWitnessUtxo;\n  const tx = transaction_1.Transaction.fromBuffer(input.nonWitnessUtxo);\n  cache.__NON_WITNESS_UTXO_TX_CACHE[inputIndex] = tx;\n  const self = cache;\n  const selfIndex = inputIndex;\n  delete input.nonWitnessUtxo;\n  Object.defineProperty(input, 'nonWitnessUtxo', {\n    enumerable: true,\n    get() {\n      const buf = self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex];\n      const txCache = self.__NON_WITNESS_UTXO_TX_CACHE[selfIndex];\n      if (buf !== undefined) {\n        return buf;\n      } else {\n        const newBuf = txCache.toBuffer();\n        self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = newBuf;\n        return newBuf;\n      }\n    },\n    set(data) {\n      self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = data;\n    },\n  });\n}\nfunction inputFinalizeGetAmts(inputs, tx, cache, mustFinalize) {\n  let inputAmount = 0;\n  inputs.forEach((input, idx) => {\n    if (mustFinalize && input.finalScriptSig)\n      tx.ins[idx].script = input.finalScriptSig;\n    if (mustFinalize && input.finalScriptWitness) {\n      tx.ins[idx].witness = scriptWitnessToWitnessStack(\n        input.finalScriptWitness,\n      );\n    }\n    if (input.witnessUtxo) {\n      inputAmount += input.witnessUtxo.value;\n    } else if (input.nonWitnessUtxo) {\n      const nwTx = nonWitnessUtxoTxFromCache(cache, input, idx);\n      const vout = tx.ins[idx].index;\n      const out = nwTx.outs[vout];\n      inputAmount += out.value;\n    }\n  });\n  const outputAmount = tx.outs.reduce((total, o) => total + o.value, 0);\n  const fee = inputAmount - outputAmount;\n  if (fee < 0) {\n    throw new Error('Outputs are spending more than Inputs');\n  }\n  const bytes = tx.virtualSize();\n  cache.__FEE = fee;\n  cache.__EXTRACTED_TX = tx;\n  cache.__FEE_RATE = Math.floor(fee / bytes);\n}\nfunction nonWitnessUtxoTxFromCache(cache, input, inputIndex) {\n  const c = cache.__NON_WITNESS_UTXO_TX_CACHE;\n  if (!c[inputIndex]) {\n    addNonWitnessTxCache(cache, input, inputIndex);\n  }\n  return c[inputIndex];\n}\nfunction getScriptFromUtxo(inputIndex, input, cache) {\n  const { script } = getScriptAndAmountFromUtxo(inputIndex, input, cache);\n  return script;\n}\nfunction getScriptAndAmountFromUtxo(inputIndex, input, cache) {\n  if (input.witnessUtxo !== undefined) {\n    return {\n      script: input.witnessUtxo.script,\n      value: input.witnessUtxo.value,\n    };\n  } else if (input.nonWitnessUtxo !== undefined) {\n    const nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(\n      cache,\n      input,\n      inputIndex,\n    );\n    const o = nonWitnessUtxoTx.outs[cache.__TX.ins[inputIndex].index];\n    return { script: o.script, value: o.value };\n  } else {\n    throw new Error(\"Can't find pubkey in input without Utxo data\");\n  }\n}\nfunction pubkeyInInput(pubkey, input, inputIndex, cache) {\n  const script = getScriptFromUtxo(inputIndex, input, cache);\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    inputIndex,\n    'input',\n    input.redeemScript,\n    input.witnessScript,\n  );\n  return (0, psbtutils_1.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction pubkeyInOutput(pubkey, output, outputIndex, cache) {\n  const script = cache.__TX.outs[outputIndex].script;\n  const { meaningfulScript } = getMeaningfulScript(\n    script,\n    outputIndex,\n    'output',\n    output.redeemScript,\n    output.witnessScript,\n  );\n  return (0, psbtutils_1.pubkeyInScript)(pubkey, meaningfulScript);\n}\nfunction redeemFromFinalScriptSig(finalScript) {\n  if (!finalScript) return;\n  const decomp = bscript.decompile(finalScript);\n  if (!decomp) return;\n  const lastItem = decomp[decomp.length - 1];\n  if (\n    !Buffer.isBuffer(lastItem) ||\n    isPubkeyLike(lastItem) ||\n    isSigLike(lastItem)\n  )\n    return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction redeemFromFinalWitnessScript(finalScript) {\n  if (!finalScript) return;\n  const decomp = scriptWitnessToWitnessStack(finalScript);\n  const lastItem = decomp[decomp.length - 1];\n  if (isPubkeyLike(lastItem)) return;\n  const sDecomp = bscript.decompile(lastItem);\n  if (!sDecomp) return;\n  return lastItem;\n}\nfunction compressPubkey(pubkey) {\n  if (pubkey.length === 65) {\n    const parity = pubkey[64] & 1;\n    const newKey = pubkey.slice(0, 33);\n    newKey[0] = 2 | parity;\n    return newKey;\n  }\n  return pubkey.slice();\n}\nfunction isPubkeyLike(buf) {\n  return buf.length === 33 && bscript.isCanonicalPubKey(buf);\n}\nfunction isSigLike(buf) {\n  return bscript.isCanonicalScriptSignature(buf);\n}\nfunction getMeaningfulScript(\n  script,\n  index,\n  ioType,\n  redeemScript,\n  witnessScript,\n) {\n  const isP2SH = (0, psbtutils_1.isP2SHScript)(script);\n  const isP2SHP2WSH =\n    isP2SH && redeemScript && (0, psbtutils_1.isP2WSHScript)(redeemScript);\n  const isP2WSH = (0, psbtutils_1.isP2WSHScript)(script);\n  if (isP2SH && redeemScript === undefined)\n    throw new Error('scriptPubkey is P2SH but redeemScript missing');\n  if ((isP2WSH || isP2SHP2WSH) && witnessScript === undefined)\n    throw new Error(\n      'scriptPubkey or redeemScript is P2WSH but witnessScript missing',\n    );\n  let meaningfulScript;\n  if (isP2SHP2WSH) {\n    meaningfulScript = witnessScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n    checkWitnessScript(index, redeemScript, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2WSH) {\n    meaningfulScript = witnessScript;\n    checkWitnessScript(index, script, witnessScript, ioType);\n    checkInvalidP2WSH(meaningfulScript);\n  } else if (isP2SH) {\n    meaningfulScript = redeemScript;\n    checkRedeemScript(index, script, redeemScript, ioType);\n  } else {\n    meaningfulScript = script;\n  }\n  return {\n    meaningfulScript,\n    type: isP2SHP2WSH\n      ? 'p2sh-p2wsh'\n      : isP2SH\n      ? 'p2sh'\n      : isP2WSH\n      ? 'p2wsh'\n      : 'raw',\n  };\n}\nfunction checkInvalidP2WSH(script) {\n  if (\n    (0, psbtutils_1.isP2WPKH)(script) ||\n    (0, psbtutils_1.isP2SHScript)(script)\n  ) {\n    throw new Error('P2WPKH or P2SH can not be contained within P2WSH');\n  }\n}\nfunction classifyScript(script) {\n  if ((0, psbtutils_1.isP2WPKH)(script)) return 'witnesspubkeyhash';\n  if ((0, psbtutils_1.isP2PKH)(script)) return 'pubkeyhash';\n  if ((0, psbtutils_1.isP2MS)(script)) return 'multisig';\n  if ((0, psbtutils_1.isP2PK)(script)) return 'pubkey';\n  return 'nonstandard';\n}\nfunction range(n) {\n  return [...Array(n).keys()];\n}\n", "'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nexports.initEccLib =\n  exports.Transaction =\n  exports.opcodes =\n  exports.Psbt =\n  exports.Block =\n  exports.script =\n  exports.payments =\n  exports.networks =\n  exports.crypto =\n  exports.address =\n    void 0;\nconst address = require('./address');\nexports.address = address;\nconst crypto = require('./crypto');\nexports.crypto = crypto;\nconst networks = require('./networks');\nexports.networks = networks;\nconst payments = require('./payments');\nexports.payments = payments;\nconst script = require('./script');\nexports.script = script;\nvar block_1 = require('./block');\nObject.defineProperty(exports, 'Block', {\n  enumerable: true,\n  get: function () {\n    return block_1.Block;\n  },\n});\nvar psbt_1 = require('./psbt');\nObject.defineProperty(exports, 'Psbt', {\n  enumerable: true,\n  get: function () {\n    return psbt_1.Psbt;\n  },\n});\nvar ops_1 = require('./ops');\nObject.defineProperty(exports, 'opcodes', {\n  enumerable: true,\n  get: function () {\n    return ops_1.OPS;\n  },\n});\nvar transaction_1 = require('./transaction');\nObject.defineProperty(exports, 'Transaction', {\n  enumerable: true,\n  get: function () {\n    return transaction_1.Transaction;\n  },\n});\nvar ecc_lib_1 = require('./ecc_lib');\nObject.defineProperty(exports, 'initEccLib', {\n  enumerable: true,\n  get: function () {\n    return ecc_lib_1.initEccLib;\n  },\n});\n", "import Nosft, { get as nosftGet } from './src/services/nosft';\n\nexport function configure({ network, nosftBaseUrl }: { network: 'testnet' | 'mainnet'; nosftBaseUrl?: string }) {\n    const nosftService: Nosft = nosftGet({ baseUrl: nosftBaseUrl, network });\n    return {\n        nosft: nosftService,\n    };\n}\n\nconst nosft: Nosft = nosftGet();\nexport { nosft };\n\nexport { NostrRelay } from './src/services/relay';\nexport * from './src/types/relay';\n", "import ApiService from '../utils/httpService';\nimport { NOSFT_API_URL } from '../config/constants';\nimport { AddressInscriptions } from '../types/nosft';\n\nexport interface AddressInscriptionsRequest {\n    offset: number;\n    limit: number;\n    address: string;\n}\n\nexport interface NosftConfig {\n    baseUrl?: string;\n    network?: 'testnet' | 'mainnet';\n}\n\nclass Nosft extends ApiService {\n    constructor(config?: NosftConfig) {\n        const apiUrl = config?.baseUrl || NOSFT_API_URL(config?.network);\n        if (!apiUrl) {\n            throw new Error('DEEZY_API_URL is not defined');\n        }\n\n        super(apiUrl);\n    }\n\n    public async getAddressInscriptions({\n        offset = 0,\n        limit = 5,\n        address,\n    }: AddressInscriptionsRequest): Promise<AddressInscriptions> {\n        return this.query(`/inscriptions/${address}`, {\n            offset,\n            limit,\n        });\n    }\n}\n\nexport function get(config?: NosftConfig): Nosft {\n    return new Nosft(config);\n}\n\nexport default Nosft;\n", "import axios, { AxiosInstance } from 'axios';\n\n/**\n * @description service to call HTTP request via Axios\n */\nclass ApiService {\n    /**\n     * @description property to share axios _instance\n     */\n    public _instance: AxiosInstance;\n\n    /**\n     * @description initialize vue axios\n     */\n    constructor(baseURL: string) {\n        this._instance = axios.create({\n            baseURL,\n            headers: {\n                'Content-type': 'application/json',\n            },\n        });\n    }\n\n    /**\n     * @description set the default HTTP request headers\n     */\n    public setHeader(key: string, value: string): void {\n        this._instance.defaults.headers.common[key] = value;\n    }\n\n    /**\n     * @description send the GET HTTP request\n     * @param resource: string\n     * @param params: AxiosRequestConfig\n     * @returns Promise<AxiosResponse>\n     */\n    public async query<T>(resource: string, params: any): Promise<T> {\n        const result = await this._instance.get(resource, params);\n        return result.data as T;\n    }\n\n    /**\n     * @description send the GET HTTP request\n     * @param resource: string\n     * @param slug: string\n     * @returns Promise<AxiosResponse>\n     */\n    public async get<T>(resource: string, slug = '' as string): Promise<T> {\n        const result = await this._instance.get(`${resource}/${slug}`);\n        return result.data as T;\n    }\n\n    /**\n     * @description set the POST HTTP request\n     * @param resource: string\n     * @param params: AxiosRequestConfig\n     * @returns Promise<AxiosResponse>\n     */\n    public async post<T>(resource: string, params: any): Promise<T> {\n        const result = await this._instance.post(`${resource}`, params);\n        return result.data as T;\n    }\n\n    /**\n     * @description send the UPDATE HTTP request\n     * @param resource: string\n     * @param slug: string\n     * @param params: AxiosRequestConfig\n     * @returns Promise<AxiosResponse>\n     */\n    public async update<T>(resource: string, slug: string, params: any): Promise<T> {\n        const result = await this._instance.put(`${resource}/${slug}`, params);\n        return result.data as T;\n    }\n\n    /**\n     * @description Send the PUT HTTP request\n     * @param resource: string\n     * @param params: AxiosRequestConfig\n     * @returns Promise<AxiosResponse>\n     */\n    public async put<T>(resource: string, params: any): Promise<T> {\n        const result = await this._instance.put(`${resource}`, params);\n        return result.data as T;\n    }\n\n    /**\n     * @description Send the DELETE HTTP request\n     * @param resource: string\n     * @returns Promise<AxiosResponse>\n     */\n    public delete(resource: string): Promise<void> {\n        return this._instance.delete(resource);\n    }\n}\n\nexport default ApiService;\n", "import axios from './lib/axios.js';\n\n// This module is intended to unwrap Axios default export as named.\n// Keep top-level export same with static properties\n// so that it can keep same with es module or cjs\nconst {\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  mergeConfig\n} = axios;\n\nexport {\n  axios as default,\n  Axios,\n  AxiosError,\n  CanceledError,\n  isCancel,\n  CancelToken,\n  VERSION,\n  all,\n  Cancel,\n  isAxiosError,\n  spread,\n  toFormData,\n  AxiosHeaders,\n  HttpStatusCode,\n  formToJSON,\n  mergeConfig\n}\n", "'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n", "'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  const pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject\n};\n", "'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer !== undefined) {\n      validator.assertOptions(paramsSerializer, {\n        encode: validators.function,\n        serialize: validators.function\n      }, true);\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n", "'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n", "// eslint-disable-next-line strict\nexport default null;\n", "'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n", "'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n", "'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n", "import platform from './node/index.js';\n\nexport {platform as default}\n", "import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n", "'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n", "'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n", "'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n", "'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nfunction isValidHeaderName(str) {\n  return /^[-_a-zA-Z]+$/.test(str.trim());\n}\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n", "'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n", "'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n", "import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv)) {\n      requestHeaders.setContentType(false); // Let the browser set it\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n", "'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n", "'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n", "'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n", "'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n", "'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n", "'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n", "'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n", "export const VERSION = \"1.3.4\";", "'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n", "'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n", "const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n", "export const TESTNET = false;\nexport const TURBO_API = 'https://turbo.ordinalswallet.com';\nexport const BLOCKSTREAM_API = 'https://blockstream.info/api';\nexport const NOSTR_RELAY_URL = 'wss://nostr.openordex.org';\nexport const NOSTR_KIND_INSCRIPTION = 802;\n\nexport const DEEZY_API_URL = (network?: string) =>\n    network === 'testnet' ? 'https://api-testnet.deezy.io' : 'https://api.deezy.io';\nexport const NOSFT_API_URL = (network?: string) =>\n    network === 'testnet' ? 'https://nosft.xyz/api/' : 'https://nosft.xyz/api/';\n", "import { SimplePool, Filter, Event, Sub } from 'nostr-tools';\nimport { NOSTR_KIND_INSCRIPTION, NOSTR_RELAY_URL } from '../config/constants';\nimport { SaleOrder } from '../types/relay';\nimport { openOrdex } from './open-ordex';\n\nexport type SubscribeOrdersProps = {\n    limit: number;\n    relays?: string[];\n    onOrder: (order: SaleOrder) => void;\n    onEose: () => void;\n};\n\nexport class NostrRelay {\n    private pool: SimplePool;\n    private subs: Sub[];\n    private relays: string[];\n    private subscriptionOrders: Sub | null;\n\n    constructor() {\n        this.pool = new SimplePool();\n        this.subs = [];\n        this.relays = [];\n        this.subscriptionOrders = null;\n    }\n\n    getSubscriptionOrders(): Sub | null {\n        return this.subscriptionOrders;\n    }\n\n    setRelays(relays: string[]): void {\n        this.relays = [...relays];\n    }\n\n    unsubscribeOrders(): void {\n        if (this.subscriptionOrders) {\n            this.subs = this.subs.filter((sub) => sub !== this.subscriptionOrders);\n            this.subscriptionOrders.unsub();\n            this.subscriptionOrders = null;\n        }\n    }\n\n    subscribeOrders({ limit = 10, onOrder, onEose, relays = [NOSTR_RELAY_URL] }: SubscribeOrdersProps) {\n        try {\n            this.unsubscribeOrders();\n            this.setRelays(relays);\n            this.subscriptionOrders = this.subscribe(\n                [{ kinds: [NOSTR_KIND_INSCRIPTION], limit }],\n                async (event) => {\n                    const order = await openOrdex.parseOrderEvent(event);\n                    if (order) {\n                        onOrder(order);\n                    }\n                },\n                onEose\n            );\n            return this.subscriptionOrders;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    private subscribe(filter: Filter[], onEvent: (event: Event) => void, onEose: () => void): Sub {\n        if (!this.relays.length)\n            throw new Error('No relays configured, please call setRelays([<url>,...[<url>]]) first');\n        const sub = this.pool.sub([...this.relays], filter);\n        sub.on('event', onEvent);\n        sub.on('eose', onEose);\n        this.subs.push(sub);\n        return sub;\n    }\n}\n", "var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// keys.ts\nimport * as secp256k1 from \"@noble/secp256k1\";\nfunction generatePrivateKey() {\n  return secp256k1.utils.bytesToHex(secp256k1.utils.randomPrivateKey());\n}\nfunction getPublicKey(privateKey) {\n  return secp256k1.utils.bytesToHex(secp256k1.schnorr.getPublicKey(privateKey));\n}\n\n// event.ts\nimport * as secp256k12 from \"@noble/secp256k1\";\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  let p = new URL(url);\n  p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n  if (p.pathname.endsWith(\"/\"))\n    p.pathname = p.pathname.slice(0, -1);\n  if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n    p.port = \"\";\n  p.searchParams.sort();\n  p.hash = \"\";\n  return p.toString();\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at < sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at >= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at > event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at < event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at > sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at <= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at < event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at > event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\n\n// event.ts\nvar Kind = /* @__PURE__ */ ((Kind2) => {\n  Kind2[Kind2[\"Metadata\"] = 0] = \"Metadata\";\n  Kind2[Kind2[\"Text\"] = 1] = \"Text\";\n  Kind2[Kind2[\"RecommendRelay\"] = 2] = \"RecommendRelay\";\n  Kind2[Kind2[\"Contacts\"] = 3] = \"Contacts\";\n  Kind2[Kind2[\"EncryptedDirectMessage\"] = 4] = \"EncryptedDirectMessage\";\n  Kind2[Kind2[\"EventDeletion\"] = 5] = \"EventDeletion\";\n  Kind2[Kind2[\"Reaction\"] = 7] = \"Reaction\";\n  Kind2[Kind2[\"ChannelCreation\"] = 40] = \"ChannelCreation\";\n  Kind2[Kind2[\"ChannelMetadata\"] = 41] = \"ChannelMetadata\";\n  Kind2[Kind2[\"ChannelMessage\"] = 42] = \"ChannelMessage\";\n  Kind2[Kind2[\"ChannelHideMessage\"] = 43] = \"ChannelHideMessage\";\n  Kind2[Kind2[\"ChannelMuteUser\"] = 44] = \"ChannelMuteUser\";\n  Kind2[Kind2[\"Report\"] = 1984] = \"Report\";\n  Kind2[Kind2[\"ZapRequest\"] = 9734] = \"ZapRequest\";\n  Kind2[Kind2[\"Zap\"] = 9735] = \"Zap\";\n  Kind2[Kind2[\"RelayList\"] = 10002] = \"RelayList\";\n  Kind2[Kind2[\"ClientAuth\"] = 22242] = \"ClientAuth\";\n  Kind2[Kind2[\"Article\"] = 30023] = \"Article\";\n  return Kind2;\n})(Kind || {});\nfunction getBlankEvent() {\n  return {\n    kind: 255,\n    content: \"\",\n    tags: [],\n    created_at: 0\n  };\n}\nfunction finishEvent(t, privateKey) {\n  let event = t;\n  event.pubkey = getPublicKey(privateKey);\n  event.id = getEventHash(event);\n  event.sig = signEvent(event, privateKey);\n  return event;\n}\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([\n    0,\n    evt.pubkey,\n    evt.created_at,\n    evt.kind,\n    evt.tags,\n    evt.content\n  ]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return secp256k12.utils.bytesToHex(eventHash);\n}\nfunction validateEvent(event) {\n  if (typeof event !== \"object\")\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i = 0; i < event.tags.length; i++) {\n    let tag = event.tags[i];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction verifySignature(event) {\n  return secp256k12.schnorr.verifySync(\n    event.sig,\n    getEventHash(event),\n    event.pubkey\n  );\n}\nfunction signEvent(event, key) {\n  return secp256k12.utils.bytesToHex(\n    secp256k12.schnorr.signSync(getEventHash(event), key)\n  );\n}\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1)\n    return false;\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1)\n    return false;\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1)\n    return false;\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(\n        ([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1\n      ))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at >= filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i = 0; i < filters.length; i++) {\n    if (matchFilter(filters[i], event))\n      return true;\n  }\n  return false;\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// relay.ts\nfunction relayInit(url, options = {}) {\n  let { listTimeout = 3e3, getTimeout = 3e3 } = options;\n  var ws;\n  var openSubs = {};\n  var listeners = {\n    connect: [],\n    disconnect: [],\n    error: [],\n    notice: []\n  };\n  var subListeners = {};\n  var pubListeners = {};\n  async function connectRelay() {\n    return new Promise((resolve, reject) => {\n      try {\n        ws = new WebSocket(url);\n      } catch (err) {\n        reject(err);\n      }\n      ws.onopen = () => {\n        listeners.connect.forEach((cb) => cb());\n        resolve();\n      };\n      ws.onerror = () => {\n        listeners.error.forEach((cb) => cb());\n        reject();\n      };\n      ws.onclose = async () => {\n        listeners.disconnect.forEach((cb) => cb());\n      };\n      let incomingMessageQueue = [];\n      let handleNextInterval;\n      ws.onmessage = (e) => {\n        incomingMessageQueue.push(e.data);\n        if (!handleNextInterval) {\n          handleNextInterval = setInterval(handleNext, 0);\n        }\n      };\n      function handleNext() {\n        if (incomingMessageQueue.length === 0) {\n          clearInterval(handleNextInterval);\n          handleNextInterval = null;\n          return;\n        }\n        var json = incomingMessageQueue.shift();\n        if (!json)\n          return;\n        let subid = getSubscriptionId(json);\n        if (subid) {\n          let so = openSubs[subid];\n          if (so && so.alreadyHaveEvent && so.alreadyHaveEvent(getHex64(json, \"id\"), url)) {\n            return;\n          }\n        }\n        try {\n          let data = JSON.parse(json);\n          switch (data[0]) {\n            case \"EVENT\":\n              let id = data[1];\n              let event = data[2];\n              if (validateEvent(event) && openSubs[id] && (openSubs[id].skipVerification || verifySignature(event)) && matchFilters(openSubs[id].filters, event)) {\n                openSubs[id];\n                (subListeners[id]?.event || []).forEach((cb) => cb(event));\n              }\n              return;\n            case \"EOSE\": {\n              let id2 = data[1];\n              if (id2 in subListeners) {\n                subListeners[id2].eose.forEach((cb) => cb());\n                subListeners[id2].eose = [];\n              }\n              return;\n            }\n            case \"OK\": {\n              let id2 = data[1];\n              let ok = data[2];\n              let reason = data[3] || \"\";\n              if (id2 in pubListeners) {\n                if (ok)\n                  pubListeners[id2].ok.forEach((cb) => cb());\n                else\n                  pubListeners[id2].failed.forEach((cb) => cb(reason));\n                pubListeners[id2].ok = [];\n                pubListeners[id2].failed = [];\n              }\n              return;\n            }\n            case \"NOTICE\":\n              let notice = data[1];\n              listeners.notice.forEach((cb) => cb(notice));\n              return;\n          }\n        } catch (err) {\n          return;\n        }\n      }\n    });\n  }\n  function connected() {\n    return ws?.readyState === 1;\n  }\n  async function connect() {\n    if (connected())\n      return;\n    await connectRelay();\n  }\n  async function trySend(params) {\n    let msg = JSON.stringify(params);\n    if (!connected()) {\n      await new Promise((resolve) => setTimeout(resolve, 1e3));\n      if (!connected()) {\n        return;\n      }\n    }\n    try {\n      ws.send(msg);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  const sub = (filters, {\n    skipVerification = false,\n    alreadyHaveEvent = null,\n    id = Math.random().toString().slice(2)\n  } = {}) => {\n    let subid = id;\n    openSubs[subid] = {\n      id: subid,\n      filters,\n      skipVerification,\n      alreadyHaveEvent\n    };\n    trySend([\"REQ\", subid, ...filters]);\n    return {\n      sub: (newFilters, newOpts = {}) => sub(newFilters || filters, {\n        skipVerification: newOpts.skipVerification || skipVerification,\n        alreadyHaveEvent: newOpts.alreadyHaveEvent || alreadyHaveEvent,\n        id: subid\n      }),\n      unsub: () => {\n        delete openSubs[subid];\n        delete subListeners[subid];\n        trySend([\"CLOSE\", subid]);\n      },\n      on: (type, cb) => {\n        subListeners[subid] = subListeners[subid] || {\n          event: [],\n          eose: []\n        };\n        subListeners[subid][type].push(cb);\n      },\n      off: (type, cb) => {\n        let listeners2 = subListeners[subid];\n        let idx = listeners2[type].indexOf(cb);\n        if (idx >= 0)\n          listeners2[type].splice(idx, 1);\n      }\n    };\n  };\n  return {\n    url,\n    sub,\n    on: (type, cb) => {\n      listeners[type].push(cb);\n      if (type === \"connect\" && ws?.readyState === 1) {\n        ;\n        cb();\n      }\n    },\n    off: (type, cb) => {\n      let index = listeners[type].indexOf(cb);\n      if (index !== -1)\n        listeners[type].splice(index, 1);\n    },\n    list: (filters, opts) => new Promise((resolve) => {\n      let s = sub(filters, opts);\n      let events = [];\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(events);\n      }, listTimeout);\n      s.on(\"eose\", () => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(events);\n      });\n      s.on(\"event\", (event) => {\n        events.push(event);\n      });\n    }),\n    get: (filter, opts) => new Promise((resolve) => {\n      let s = sub([filter], opts);\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(null);\n      }, getTimeout);\n      s.on(\"event\", (event) => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(event);\n      });\n    }),\n    publish(event) {\n      if (!event.id)\n        throw new Error(`event ${event} has no id`);\n      let id = event.id;\n      trySend([\"EVENT\", event]);\n      return {\n        on: (type, cb) => {\n          pubListeners[id] = pubListeners[id] || {\n            ok: [],\n            failed: []\n          };\n          pubListeners[id][type].push(cb);\n        },\n        off: (type, cb) => {\n          let listeners2 = pubListeners[id];\n          if (!listeners2)\n            return;\n          let idx = listeners2[type].indexOf(cb);\n          if (idx >= 0)\n            listeners2[type].splice(idx, 1);\n        }\n      };\n    },\n    connect,\n    close() {\n      listeners = { connect: [], disconnect: [], error: [], notice: [] };\n      subListeners = {};\n      pubListeners = {};\n      if (ws.readyState === WebSocket.OPEN) {\n        ws?.close();\n      }\n    },\n    get status() {\n      return ws?.readyState ?? 3;\n    }\n  };\n}\n\n// pool.ts\nvar SimplePool = class {\n  _conn;\n  _seenOn = {};\n  eoseSubTimeout;\n  getTimeout;\n  constructor(options = {}) {\n    this._conn = {};\n    this.eoseSubTimeout = options.eoseSubTimeout || 3400;\n    this.getTimeout = options.getTimeout || 3400;\n  }\n  close(relays) {\n    relays.forEach((url) => {\n      let relay = this._conn[normalizeURL(url)];\n      if (relay)\n        relay.close();\n    });\n  }\n  async ensureRelay(url) {\n    const nm = normalizeURL(url);\n    const existing = this._conn[nm];\n    if (existing && existing.status === 1)\n      return existing;\n    if (existing) {\n      await existing.connect();\n      return existing;\n    }\n    const relay = relayInit(nm, {\n      getTimeout: this.getTimeout * 0.9,\n      listTimeout: this.getTimeout * 0.9\n    });\n    this._conn[nm] = relay;\n    await relay.connect();\n    return relay;\n  }\n  sub(relays, filters, opts) {\n    let _knownIds = /* @__PURE__ */ new Set();\n    let modifiedOpts = { ...opts || {} };\n    modifiedOpts.alreadyHaveEvent = (id, url) => {\n      if (opts?.alreadyHaveEvent?.(id, url)) {\n        return true;\n      }\n      let set = this._seenOn[id] || /* @__PURE__ */ new Set();\n      set.add(url);\n      this._seenOn[id] = set;\n      return _knownIds.has(id);\n    };\n    let subs = [];\n    let eventListeners = /* @__PURE__ */ new Set();\n    let eoseListeners = /* @__PURE__ */ new Set();\n    let eosesMissing = relays.length;\n    let eoseSent = false;\n    let eoseTimeout = setTimeout(() => {\n      eoseSent = true;\n      for (let cb of eoseListeners.values())\n        cb();\n    }, this.eoseSubTimeout);\n    relays.forEach(async (relay) => {\n      let r;\n      try {\n        r = await this.ensureRelay(relay);\n      } catch (err) {\n        handleEose();\n        return;\n      }\n      if (!r)\n        return;\n      let s = r.sub(filters, modifiedOpts);\n      s.on(\"event\", (event) => {\n        _knownIds.add(event.id);\n        for (let cb of eventListeners.values())\n          cb(event);\n      });\n      s.on(\"eose\", () => {\n        if (eoseSent)\n          return;\n        handleEose();\n      });\n      subs.push(s);\n      function handleEose() {\n        eosesMissing--;\n        if (eosesMissing === 0) {\n          clearTimeout(eoseTimeout);\n          for (let cb of eoseListeners.values())\n            cb();\n        }\n      }\n    });\n    let greaterSub = {\n      sub(filters2, opts2) {\n        subs.forEach((sub) => sub.sub(filters2, opts2));\n        return greaterSub;\n      },\n      unsub() {\n        subs.forEach((sub) => sub.unsub());\n      },\n      on(type, cb) {\n        if (type === \"event\") {\n          eventListeners.add(cb);\n        } else if (type === \"eose\") {\n          eoseListeners.add(cb);\n        }\n      },\n      off(type, cb) {\n        if (type === \"event\") {\n          eventListeners.delete(cb);\n        } else if (type === \"eose\")\n          eoseListeners.delete(cb);\n      }\n    };\n    return greaterSub;\n  }\n  get(relays, filter, opts) {\n    return new Promise((resolve) => {\n      let sub = this.sub(relays, [filter], opts);\n      let timeout = setTimeout(() => {\n        sub.unsub();\n        resolve(null);\n      }, this.getTimeout);\n      sub.on(\"event\", (event) => {\n        resolve(event);\n        clearTimeout(timeout);\n        sub.unsub();\n      });\n    });\n  }\n  list(relays, filters, opts) {\n    return new Promise((resolve) => {\n      let events = [];\n      let sub = this.sub(relays, filters, opts);\n      sub.on(\"event\", (event) => {\n        events.push(event);\n      });\n      sub.on(\"eose\", () => {\n        sub.unsub();\n        resolve(events);\n      });\n    });\n  }\n  publish(relays, event) {\n    const pubs = [];\n    relays.forEach(async (relay) => {\n      let r;\n      try {\n        r = await this.ensureRelay(relay);\n        pubs.push(r.publish(event));\n      } catch (_) {\n      }\n    });\n    return {\n      on(type, cb) {\n        pubs.forEach((pub, i) => {\n          pub.on(type, () => cb(relays[i]));\n        });\n      },\n      off() {\n      }\n    };\n  }\n  seenOn(id) {\n    return Array.from(this._seenOn[id]?.values?.() || []);\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  decode: () => decode,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nsecEncode: () => nsecEncode\n});\nimport * as secp256k13 from \"@noble/secp256k1\";\nimport { bech32 } from \"@scure/base\";\nvar Bech32MaxSize = 5e3;\nfunction decode(nip19) {\n  let { prefix, words } = bech32.decode(nip19, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: secp256k13.utils.bytesToHex(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: secp256k13.utils.bytesToHex(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? secp256k13.utils.bytesToHex(tlv[2][0]) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: secp256k13.utils.bytesToHex(tlv[2][0]),\n          kind: parseInt(secp256k13.utils.bytesToHex(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nsec\":\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: secp256k13.utils.bytesToHex(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      continue;\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(hex) {\n  return encodeBytes(\"nsec\", hex);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hex);\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hex);\n}\nfunction encodeBytes(prefix, hex) {\n  let data = secp256k13.utils.hexToBytes(hex);\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [secp256k13.utils.hexToBytes(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nprofile\", words, Bech32MaxSize);\n}\nfunction neventEncode(event) {\n  let data = encodeTLV({\n    0: [secp256k13.utils.hexToBytes(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [secp256k13.utils.hexToBytes(event.author)] : []\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nevent\", words, Bech32MaxSize);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [secp256k13.utils.hexToBytes(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"naddr\", words, Bech32MaxSize);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return secp256k13.utils.concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = ref[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { randomBytes } from \"@noble/hashes/utils\";\nimport * as secp256k14 from \"@noble/secp256k1\";\nimport { base64 } from \"@scure/base\";\nasync function encrypt(privkey, pubkey, text) {\n  const key = secp256k14.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"encrypt\"]\n  );\n  let ciphertext = await crypto.subtle.encrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    plaintext\n  );\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nasync function decrypt(privkey, pubkey, data) {\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k14.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"decrypt\"]\n  );\n  let ciphertext = base64.decode(ctb64);\n  let iv = base64.decode(ivb64);\n  let plaintext = await crypto.subtle.decrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    ciphertext\n  );\n  let text = utf8Decoder.decode(plaintext);\n  return text;\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch {\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    let res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${query}`)).json();\n    return res.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  let [name, domain] = fullname.split(\"@\");\n  if (!domain) {\n    domain = name;\n    name = \"_\";\n  }\n  if (!name.match(/^[A-Za-z0-9-_]+$/))\n    return null;\n  if (!domain.includes(\".\"))\n    return null;\n  let res;\n  try {\n    res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${name}`)).json();\n  } catch (err) {\n    return null;\n  }\n  if (!res?.names?.[name])\n    return null;\n  let pubkey = res.names[name];\n  let relays = res.relays?.[pubkey] || [];\n  return {\n    pubkey,\n    relays\n  };\n}\n\n// nip06.ts\nvar nip06_exports = {};\n__export(nip06_exports, {\n  generateSeedWords: () => generateSeedWords,\n  privateKeyFromSeedWords: () => privateKeyFromSeedWords,\n  validateWords: () => validateWords\n});\nimport * as secp256k15 from \"@noble/secp256k1\";\nimport { wordlist } from \"@scure/bip39/wordlists/english.js\";\nimport {\n  generateMnemonic,\n  mnemonicToSeedSync,\n  validateMnemonic\n} from \"@scure/bip39\";\nimport { HDKey } from \"@scure/bip32\";\nfunction privateKeyFromSeedWords(mnemonic, passphrase) {\n  let root = HDKey.fromMasterSeed(mnemonicToSeedSync(mnemonic, passphrase));\n  let privateKey = root.derive(`m/44'/1237'/0'/0/0`).privateKey;\n  if (!privateKey)\n    throw new Error(\"could not derive private key\");\n  return secp256k15.utils.bytesToHex(privateKey);\n}\nfunction generateSeedWords() {\n  return generateMnemonic(wordlist);\n}\nfunction validateWords(words) {\n  return validateMnemonic(words, wordlist);\n}\n\n// nip26.ts\nvar nip26_exports = {};\n__export(nip26_exports, {\n  createDelegation: () => createDelegation,\n  getDelegator: () => getDelegator\n});\nimport * as secp256k16 from \"@noble/secp256k1\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction createDelegation(privateKey, parameters) {\n  let conditions = [];\n  if ((parameters.kind || -1) >= 0)\n    conditions.push(`kind=${parameters.kind}`);\n  if (parameters.until)\n    conditions.push(`created_at<${parameters.until}`);\n  if (parameters.since)\n    conditions.push(`created_at>${parameters.since}`);\n  let cond = conditions.join(\"&\");\n  if (cond === \"\")\n    throw new Error(\"refusing to create a delegation without any conditions\");\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${parameters.pubkey}:${cond}`)\n  );\n  let sig = secp256k16.utils.bytesToHex(\n    secp256k16.schnorr.signSync(sighash, privateKey)\n  );\n  return {\n    from: getPublicKey(privateKey),\n    to: parameters.pubkey,\n    cond,\n    sig\n  };\n}\nfunction getDelegator(event) {\n  let tag = event.tags.find((tag2) => tag2[0] === \"delegation\" && tag2.length >= 4);\n  if (!tag)\n    return null;\n  let pubkey = tag[1];\n  let cond = tag[2];\n  let sig = tag[3];\n  let conditions = cond.split(\"&\");\n  for (let i = 0; i < conditions.length; i++) {\n    let [key, operator, value] = conditions[i].split(/\\b/);\n    if (key === \"kind\" && operator === \"=\" && event.kind === parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \"<\" && event.created_at < parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \">\" && event.created_at > parseInt(value))\n      continue;\n    else\n      return null;\n  }\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${event.pubkey}:${cond}`)\n  );\n  if (!secp256k16.schnorr.verifySync(sig, sighash, pubkey))\n    return null;\n  return pubkey;\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation2,\n  validateGithub: () => validateGithub\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch2(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation3,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = `https://${domain}/.well-known/lnurlp/${name}`;\n    } else {\n      return null;\n    }\n    let res = await _fetch3(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest({\n  profile,\n  event,\n  amount,\n  relays,\n  comment = \"\"\n}) {\n  if (!amount)\n    throw new Error(\"amount not given\");\n  if (!profile)\n    throw new Error(\"profile not given\");\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: comment,\n    tags: [\n      [\"p\", profile],\n      [\"amount\", amount.toString()],\n      [\"relays\", ...relays]\n    ]\n  };\n  if (event) {\n    zr.tags.push([\"e\", event]);\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifySignature(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(\n    ([t]) => t === \"e\" || t === \"p\" || t === \"a\"\n  );\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [\n      ...tagsFromZapRequest,\n      [\"bolt11\", bolt11],\n      [\"description\", zapRequest]\n    ]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\n\n// index.ts\nimport * as secp256k17 from \"@noble/secp256k1\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nsecp256k17.utils.hmacSha256Sync = (key, ...msgs) => hmac(sha2563, key, secp256k17.utils.concatBytes(...msgs));\nsecp256k17.utils.sha256Sync = (...msgs) => sha2563(secp256k17.utils.concatBytes(...msgs));\nexport {\n  Kind,\n  SimplePool,\n  finishEvent,\n  fakejson_exports as fj,\n  generatePrivateKey,\n  getBlankEvent,\n  getEventHash,\n  getPublicKey,\n  matchFilter,\n  matchFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip06_exports as nip06,\n  nip19_exports as nip19,\n  nip26_exports as nip26,\n  nip39_exports as nip39,\n  nip57_exports as nip57,\n  parseReferences,\n  relayInit,\n  serializeEvent,\n  signEvent,\n  utils_exports as utils,\n  validateEvent,\n  verifySignature\n};\n", "/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n", "export default {};\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n", "import { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        const { view, buffer, blockLen, finished } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Sha2: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64bit of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte))\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexport const nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexport function assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexport function assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n", "export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n", "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n", "/*! scure-bip32 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { bytes as assertBytes } from '@noble/hashes/_assert';\nimport { bytesToHex, concatBytes, createView, hexToBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { secp256k1 as secp } from '@noble/curves/secp256k1';\nimport { mod } from '@noble/curves/abstract/modular';\nimport { base58check as base58checker } from '@scure/base';\n\nconst Point = secp.ProjectivePoint;\nconst base58check = base58checker(sha256);\n\nfunction bytesToNumber(bytes: Uint8Array): bigint {\n  return BigInt(`0x${bytesToHex(bytes)}`);\n}\n\nfunction numberToBytes(num: bigint): Uint8Array {\n  return hexToBytes(num.toString(16).padStart(64, '0'));\n}\n\nconst MASTER_SECRET = utf8ToBytes('Bitcoin seed');\n// Bitcoin hardcoded by default\nconst BITCOIN_VERSIONS: Versions = { private: 0x0488ade4, public: 0x0488b21e };\nexport const HARDENED_OFFSET: number = 0x80000000;\n\nexport interface Versions {\n  private: number;\n  public: number;\n}\n\nconst hash160 = (data: Uint8Array) => ripemd160(sha256(data));\nconst fromU32 = (data: Uint8Array) => createView(data).getUint32(0, false);\nconst toU32 = (n: number) => {\n  if (!Number.isSafeInteger(n) || n < 0 || n > 2 ** 32 - 1) {\n    throw new Error(`Invalid number=${n}. Should be from 0 to 2 ** 32 - 1`);\n  }\n  const buf = new Uint8Array(4);\n  createView(buf).setUint32(0, n, false);\n  return buf;\n};\n\ninterface HDKeyOpt {\n  versions: Versions;\n  depth?: number;\n  index?: number;\n  parentFingerprint?: number;\n  chainCode: Uint8Array;\n  publicKey?: Uint8Array;\n  privateKey?: Uint8Array | bigint;\n}\n\nexport class HDKey {\n  get fingerprint(): number {\n    if (!this.pubHash) {\n      throw new Error('No publicKey set!');\n    }\n    return fromU32(this.pubHash);\n  }\n  get identifier(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get pubKeyHash(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get privateKey(): Uint8Array | null {\n    return this.privKeyBytes || null;\n  }\n  get publicKey(): Uint8Array | null {\n    return this.pubKey || null;\n  }\n  get privateExtendedKey(): string {\n    const priv = this.privateKey;\n    if (!priv) {\n      throw new Error('No private key');\n    }\n    return base58check.encode(\n      this.serialize(this.versions.private, concatBytes(new Uint8Array([0]), priv))\n    );\n  }\n  get publicExtendedKey(): string {\n    if (!this.pubKey) {\n      throw new Error('No public key');\n    }\n    return base58check.encode(this.serialize(this.versions.public, this.pubKey));\n  }\n\n  public static fromMasterSeed(seed: Uint8Array, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    assertBytes(seed);\n    if (8 * seed.length < 128 || 8 * seed.length > 512) {\n      throw new Error(\n        `HDKey: wrong seed length=${seed.length}. Should be between 128 and 512 bits; 256 bits is advised)`\n      );\n    }\n    const I = hmac(sha512, MASTER_SECRET, seed);\n    return new HDKey({\n      versions,\n      chainCode: I.slice(32),\n      privateKey: I.slice(0, 32),\n    });\n  }\n\n  public static fromExtendedKey(base58key: string, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    const keyBuffer: Uint8Array = base58check.decode(base58key);\n    const keyView = createView(keyBuffer);\n    const version = keyView.getUint32(0, false);\n    const opt = {\n      versions,\n      depth: keyBuffer[4],\n      parentFingerprint: keyView.getUint32(5, false),\n      index: keyView.getUint32(9, false),\n      chainCode: keyBuffer.slice(13, 45),\n    };\n    const key = keyBuffer.slice(45);\n    const isPriv = key[0] === 0;\n    if (version !== versions[isPriv ? 'private' : 'public']) {\n      throw new Error('Version mismatch');\n    }\n    if (isPriv) {\n      return new HDKey({ ...opt, privateKey: key.slice(1) });\n    } else {\n      return new HDKey({ ...opt, publicKey: key });\n    }\n  }\n\n  public static fromJSON(json: { xpriv: string }): HDKey {\n    return HDKey.fromExtendedKey(json.xpriv);\n  }\n  public readonly versions: Versions;\n  public readonly depth: number = 0;\n  public readonly index: number = 0;\n  public readonly chainCode: Uint8Array | null = null;\n  public readonly parentFingerprint: number = 0;\n  private privKey?: bigint;\n  private privKeyBytes?: Uint8Array;\n  private pubKey?: Uint8Array;\n  private pubHash: Uint8Array | undefined;\n\n  constructor(opt: HDKeyOpt) {\n    if (!opt || typeof opt !== 'object') {\n      throw new Error('HDKey.constructor must not be called directly');\n    }\n    this.versions = opt.versions || BITCOIN_VERSIONS;\n    this.depth = opt.depth || 0;\n    this.chainCode = opt.chainCode;\n    this.index = opt.index || 0;\n    this.parentFingerprint = opt.parentFingerprint || 0;\n    if (!this.depth) {\n      if (this.parentFingerprint || this.index) {\n        throw new Error('HDKey: zero depth with non-zero index/parent fingerprint');\n      }\n    }\n    if (opt.publicKey && opt.privateKey) {\n      throw new Error('HDKey: publicKey and privateKey at same time.');\n    }\n    if (opt.privateKey) {\n      if (!secp.utils.isValidPrivateKey(opt.privateKey)) {\n        throw new Error('Invalid private key');\n      }\n      this.privKey =\n        typeof opt.privateKey === 'bigint' ? opt.privateKey : bytesToNumber(opt.privateKey);\n      this.privKeyBytes = numberToBytes(this.privKey);\n      this.pubKey = secp.getPublicKey(opt.privateKey, true);\n    } else if (opt.publicKey) {\n      this.pubKey = Point.fromHex(opt.publicKey).toRawBytes(true); // force compressed point\n    } else {\n      throw new Error('HDKey: no public or private key provided');\n    }\n    this.pubHash = hash160(this.pubKey);\n  }\n\n  public derive(path: string): HDKey {\n    if (!/^[mM]'?/.test(path)) {\n      throw new Error('Path must start with \"m\" or \"M\"');\n    }\n    if (/^[mM]'?$/.test(path)) {\n      return this;\n    }\n    const parts = path.replace(/^[mM]'?\\//, '').split('/');\n    // tslint:disable-next-line\n    let child: HDKey = this;\n    for (const c of parts) {\n      const m = /^(\\d+)('?)$/.exec(c);\n      if (!m || m.length !== 3) {\n        throw new Error(`Invalid child index: ${c}`);\n      }\n      let idx = +m[1];\n      if (!Number.isSafeInteger(idx) || idx >= HARDENED_OFFSET) {\n        throw new Error('Invalid index');\n      }\n      // hardened key\n      if (m[2] === \"'\") {\n        idx += HARDENED_OFFSET;\n      }\n      child = child.deriveChild(idx);\n    }\n    return child;\n  }\n\n  public deriveChild(index: number): HDKey {\n    if (!this.pubKey || !this.chainCode) {\n      throw new Error('No publicKey or chainCode set');\n    }\n    let data = toU32(index);\n    if (index >= HARDENED_OFFSET) {\n      // Hardened\n      const priv = this.privateKey;\n      if (!priv) {\n        throw new Error('Could not derive hardened child key');\n      }\n      // Hardened child: 0x00 || ser256(kpar) || ser32(index)\n      data = concatBytes(new Uint8Array([0]), priv, data);\n    } else {\n      // Normal child: serP(point(kpar)) || ser32(index)\n      data = concatBytes(this.pubKey, data);\n    }\n    const I = hmac(sha512, this.chainCode, data);\n    const childTweak = bytesToNumber(I.slice(0, 32));\n    const chainCode = I.slice(32);\n    if (!secp.utils.isValidPrivateKey(childTweak)) {\n      throw new Error('Tweak bigger than curve order');\n    }\n    const opt: HDKeyOpt = {\n      versions: this.versions,\n      chainCode,\n      depth: this.depth + 1,\n      parentFingerprint: this.fingerprint,\n      index,\n    };\n    try {\n      // Private parent key -> private child key\n      if (this.privateKey) {\n        const added = mod(this.privKey! + childTweak, secp.CURVE.n);\n        if (!secp.utils.isValidPrivateKey(added)) {\n          throw new Error('The tweak was out of range or the resulted private key is invalid');\n        }\n        opt.privateKey = added;\n      } else {\n        const added = Point.fromHex(this.pubKey).add(Point.fromPrivateKey(childTweak));\n        // Cryptographically impossible: hmac-sha512 preimage would need to be found\n        if (added.equals(Point.ZERO)) {\n          throw new Error('The tweak was equal to negative P, which made the result key invalid');\n        }\n        opt.publicKey = added.toRawBytes(true);\n      }\n      return new HDKey(opt);\n    } catch (err) {\n      return this.deriveChild(index + 1);\n    }\n  }\n\n  public sign(hash: Uint8Array): Uint8Array {\n    if (!this.privateKey) {\n      throw new Error('No privateKey set!');\n    }\n    assertBytes(hash, 32);\n    return secp.sign(hash, this.privKey!).toCompactRawBytes();\n  }\n\n  public verify(hash: Uint8Array, signature: Uint8Array): boolean {\n    assertBytes(hash, 32);\n    assertBytes(signature, 64);\n    if (!this.publicKey) {\n      throw new Error('No publicKey set!');\n    }\n    let sig;\n    try {\n      sig = secp.Signature.fromCompact(signature);\n    } catch (error) {\n      return false;\n    }\n    return secp.verify(sig, hash, this.publicKey);\n  }\n\n  public wipePrivateData(): this {\n    this.privKey = undefined;\n    if (this.privKeyBytes) {\n      this.privKeyBytes.fill(0);\n      this.privKeyBytes = undefined;\n    }\n    return this;\n  }\n  public toJSON(): { xpriv: string; xpub: string } {\n    return {\n      xpriv: this.privateExtendedKey,\n      xpub: this.publicExtendedKey,\n    };\n  }\n\n  private serialize(version: number, key: Uint8Array) {\n    if (!this.chainCode) {\n      throw new Error('No chainCode set');\n    }\n    assertBytes(key, 33);\n    // version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    return concatBytes(\n      toU32(version),\n      new Uint8Array([this.depth]),\n      toU32(this.parentFingerprint),\n      toU32(this.index),\n      this.chainCode,\n      key\n    );\n  }\n}\n", "import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\n\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\n\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", "import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n", "const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Fp as Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\ntype Fp = bigint;\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % 2n !== 0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = {\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n};\n\nconst isoMap = htf.isogenyMap(\n  Fp,\n  [\n    // xNum\n    [\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n      '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n      '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n      '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n      '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n      '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n      '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n      '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n      '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n      '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n      '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n      '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n  ].map((i) => i.map((j) => BigInt(j))) as [Fp[], Fp[], Fp[], Fp[]]\n);\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n  A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n  B: BigInt('1771'),\n  Z: Fp.create(BigInt('-11')),\n});\nexport const { hashToCurve, encodeToCurve } = htf.createHasher(\n  secp256k1.ProjectivePoint,\n  (scalars: bigint[]) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n  },\n  {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n  }\n);\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: Field<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: Field<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: Field<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: Field<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Currently completly inconsistent naming:\n// - readable: add, mul, sqr, sqrt, inv, div, pow, eq, sub\n// - unreadable mess: addition, multiply, square, squareRoot, inversion, divide, power, equals, subtract\n\n// Field is not always over prime, Fp2 for example has ORDER(q)=p^m\nexport interface Field<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: Field<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\nexport function FpPow<T>(f: Field<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= 1n;\n  }\n  return p;\n}\n\nexport function FpInvertBatch<T>(f: Field<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: Field<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: Field<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\n// NOTE: very fragile, always bench. Major performance points:\n// - NonNormalized ops\n// - Object.freeze\n// - same shape of object (don't add/remove keys)\ntype FpField = Field<bigint> & Required<Pick<Field<bigint>, 'isOdd'>>;\nexport function Fp(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<Field<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: Field<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: Field<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n\n// We accept hex strings besides Uint8Array for simplicity\nexport type Hex = Uint8Array | string;\n// Very few implementations accept numbers, we do it to ease learning curve\nexport type PrivKey = Hex | bigint;\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// Caching slows it down 2-3x\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  if (hex.length % 2) throw new Error('hex string is invalid: unpadded ' + hex.length);\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// Big Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport const numberToBytesBE = (n: bigint, len: number) =>\n  hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n: bigint, len: number) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n: bigint) => hexToBytes(numberToHexUnpadded(n));\n\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrs.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\n// Bit operations\n\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > 0n; n >>= _1n, len += 1);\n  return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n: bigint, pos: number) => (n >> BigInt(pos)) & 1n;\n// Sets single bit at position\nexport const bitSet = (n: bigint, pos: number, value: boolean) =>\n  n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes: (c: ProjConstructor<T>, point: ProjPointType<T>, compressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n      fromBytes: 'function',\n      toBytes: 'function',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nconst DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    if (res[0] === 0x00 && res[1] <= 0x7f)\n      throw new E('Invalid signature integer: trailing length');\n    // ^ Weird condition: not about length, but about first bytes of number.\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) >= 8 ? '00' + s : s); // slice DER\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals like 123n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(CURVE.fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      // Zero is valid point too!\n      if (this.is0()) {\n        if (CURVE.allowInfinityPoint) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, 3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, 3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return CURVE.toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n\n  return {\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): SignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => SignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const CURVE_ORDER = CURVE.n;\n  const Fp = CURVE.Fp;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number) {\n      return new Signature(this.r, this.s, recovery);\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size (nBitLength+64)\n     * as per FIPS 186 B.4.1 with modulo bias being neglible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const rand = CURVE.randomBytes(Fp.BYTES + 8);\n      const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n      return ut.numberToBytesBE(num, CURVE.nByteLength);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): Signature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery); // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash (not message: you need to hash it by yourself).\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param opts `lowS, extraEntropy, prehash`\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): Signature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const drbg = ut.createHmacDrbg<Signature>(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nexport function SWUFpSqrtRatio<T>(Fp: mod.Field<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = 0n;\n  for (let o = q - 1n; o % 2n === 0n; o /= 2n) l += 1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  const c2 = (q - 1n) / 2n ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n  const c3 = (c2 - 1n) / 2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = 2n ** c1 - 1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = 2n ** (c1 - 1n); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + 1n) / 2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > 1; i--) {\n      let tv5 = 2n ** (i - 2n); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % 4n === 3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - 3n) / 4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % 8n === 5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.Field<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { Field, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: Field<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...nLength(curve.n, curve.nBitLength), ...curve } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, Field } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand?: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'string',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === undefined) {\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\", \"xof\" or undefined');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends Field<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "import { assertHash, Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length !== this.outputLen)\n            throw new Error('HMAC: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n", "import { Event } from 'nostr-tools';\nimport * as bitcoin from 'bitcoinjs-lib';\nimport axios from 'axios';\n\nimport { FeeLevel, RawInscriptionData } from '../types/open-order';\nimport { TESTNET } from '../config/constants';\nimport { SaleOrder } from '../types/relay';\n\nconst isProduction = !TESTNET;\nconst ordinalsExplorerUrl = isProduction ? 'https://ordinals.com' : 'https://explorer-signet.openordex.org';\nconst network = isProduction ? bitcoin.networks.bitcoin : bitcoin.networks.testnet;\nconst baseMempoolUrl = isProduction ? 'https://mempool.space' : 'https://mempool.space/signet';\nconst baseMempoolApiUrl = `${baseMempoolUrl}/api`;\nconst bitcoinPriceApiUrl = 'https://blockchain.info/ticker?cors=true';\n\nfunction isSaleOrder(order: Event): string | undefined {\n    return order.tags.find((x) => x?.[0] == 's')?.[1];\n}\n\nfunction getInscriptionId(order: Event): string {\n    return order.tags.find((x) => x?.[0] == 'i')?.[1] || '';\n}\n\nfunction isProcessed(orders: Event[], inscriptionId: string): Event | undefined {\n    return orders.find((x) => x.id === inscriptionId);\n}\n\nasync function getInscriptionHtml(inscriptionId: string): Promise<string> {\n    const response = await axios.get(`${ordinalsExplorerUrl}/inscription/${inscriptionId}`);\n    const html = response.data;\n    return html;\n}\n\nasync function getInscriptionDataById(\n    inscriptionId: string,\n    verifyIsInscriptionNumber?: string\n): Promise<RawInscriptionData> {\n    const html = await getInscriptionHtml(inscriptionId);\n\n    const data: { [key: string]: string } = [...html.matchAll(/<dt>(.*?)<\\/dt>\\s*<dd.*?>(.*?)<\\/dd>/gm)]\n        .map((x) => {\n            x[2] = x[2].replace(/<.*?>/gm, '');\n            return x;\n        })\n        .reduce((a, b) => ({ ...a, [b[1]]: b[2] }), {});\n\n    const error = `Inscription ${\n        verifyIsInscriptionNumber || inscriptionId\n    } not found (maybe you're on signet and looking for a mainnet inscription or vice versa)`;\n\n    let inscriptionNumber;\n\n    try {\n        const numberMatch = html.match(/<h1>Inscription (\\d*)<\\/h1>/);\n        if (numberMatch) {\n            inscriptionNumber = numberMatch[1];\n        } else {\n            console.error(`Failed to find inscription number for ID ${inscriptionId}`);\n        }\n    } catch (error) {\n        console.error(`Failed to parse inscription data for ID ${inscriptionId}: ${error}`);\n    }\n\n    if (verifyIsInscriptionNumber && String(inscriptionNumber) !== verifyIsInscriptionNumber) {\n        throw new Error(error);\n    }\n\n    return { ...data, number: inscriptionNumber || '' } as RawInscriptionData; // TODO: remove casting?\n}\n\nasync function fetchBitcoinPrice(): Promise<{\n    bitcoinPrice: number;\n    recommendedFeeRate: number;\n}> {\n    const bitcoinPriceResponse = await axios.get(bitcoinPriceApiUrl);\n    const bitcoinPriceData = bitcoinPriceResponse.data;\n    const bitcoinPrice = bitcoinPriceData.USD.last;\n\n    const recommendedFeeRateResponse = await axios.get(`${baseMempoolApiUrl}/v1/fees/recommended`);\n    const recommendedFeeRateData = recommendedFeeRateResponse.data;\n    const recommendedFeeRate = recommendedFeeRateData[FeeLevel.HourFee];\n\n    return { bitcoinPrice, recommendedFeeRate };\n}\n\nfunction satToBtc(sat: number): number {\n    return Number(sat) / 10 ** 8;\n}\n\nfunction satsToFormattedDollarString(sats: number, bitcoinPrice: number): string {\n    const btc = satToBtc(sats);\n    const usd = btc * bitcoinPrice;\n    return usd.toLocaleString(undefined, {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n    });\n}\n\nclass OpenOrdexFactory {\n    private bitcoinPrice: number | undefined;\n    private recommendedFeeRate: number | undefined;\n    private sellerSignedPsbt: bitcoin.Psbt | undefined;\n    private price: number | undefined;\n\n    constructor() {\n        this.bitcoinPrice = undefined;\n        this.recommendedFeeRate = undefined;\n        this.sellerSignedPsbt = undefined;\n        this.price = undefined;\n        try {\n            this.initBitcoinPrice();\n        } catch (err) {}\n    }\n\n    private async initBitcoinPrice() {\n        const { bitcoinPrice, recommendedFeeRate } = await fetchBitcoinPrice();\n        this.bitcoinPrice = bitcoinPrice;\n        this.recommendedFeeRate = recommendedFeeRate;\n    }\n\n    private async getBitcoinPrice(): Promise<number> {\n        if (!this.bitcoinPrice) {\n            await this.initBitcoinPrice();\n        }\n        if (!this.bitcoinPrice) throw new Error(`Error getting Bitcoin price`);\n        return this.bitcoinPrice;\n    }\n\n    private async validateSellerPSBTAndExtractPrice(\n        sellerSignedPsbtBase64: string,\n        utxo: string\n    ): Promise<number | undefined> {\n        try {\n            this.sellerSignedPsbt = bitcoin.Psbt.fromBase64(sellerSignedPsbtBase64, {\n                network,\n            });\n            const sellerInput = this.sellerSignedPsbt.txInputs[0];\n            const sellerSignedPsbtInput = `${sellerInput.hash.reverse().toString('hex')}:${sellerInput.index}`;\n\n            if (sellerSignedPsbtInput !== utxo) {\n                throw `Seller signed PSBT does not match this inscription\\n\\n${sellerSignedPsbtInput}\\n!=\\n${utxo}`;\n            }\n\n            if (this.sellerSignedPsbt.txInputs.length !== 1 || this.sellerSignedPsbt.txInputs.length !== 1) {\n                throw `Invalid seller signed PSBT`;\n            }\n\n            try {\n                await this.sellerSignedPsbt.extractTransaction(true);\n            } catch (e) {\n                if (e! instanceof Error) {\n                    if (e.message === 'Not finalized') {\n                        throw 'PSBT not signed';\n                    } else if (e.message !== 'Outputs are spending more than Inputs') {\n                        throw 'Invalid PSBT ' + e.message;\n                    }\n                } else {\n                    throw 'Invalid PSBT ' + e;\n                }\n            }\n\n            const sellerOutput = this.sellerSignedPsbt.txOutputs[0];\n            this.price = sellerOutput.value;\n\n            return Number(this.price);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    async parseOrderEvent(order: Event, orders: Event[] = []): Promise<SaleOrder | undefined> {\n        if (!isSaleOrder(order)) return;\n\n        const inscriptionId = getInscriptionId(order);\n        if (isProcessed(orders, inscriptionId)) return;\n\n        const inscriptionDataResponse = await axios.get(\n            `https://turbo.ordinalswallet.com/inscription/${inscriptionId}`\n        );\n        const inscriptionData = inscriptionDataResponse.data;\n\n        const inscriptionRawData = await getInscriptionDataById(inscriptionId);\n        const validatedPrice = await this.validateSellerPSBTAndExtractPrice(order.content, inscriptionRawData.output);\n        if (!validatedPrice) return;\n\n        const btcPrice = await this.getBitcoinPrice();\n        const newOrder: SaleOrder = {\n            title: `$${satsToFormattedDollarString(validatedPrice, btcPrice)}`,\n            txid: order.id,\n            inscriptionId,\n            value: validatedPrice,\n            usdPrice: `$${satsToFormattedDollarString(validatedPrice, btcPrice)}`,\n            ...order,\n            ...inscriptionData,\n        };\n\n        return newOrder;\n    }\n}\n\nconst openOrdex = new OpenOrdexFactory();\n\nexport { openOrdex };\n", "export enum FeeLevel {\n    FastestFee = 'fastestFee',\n    HalfHourFee = 'halfHourFee',\n    HourFee = 'hourFee',\n    EconomyFee = 'economyFee',\n    MinimumFee = 'minimumFee',\n}\n\nexport interface RawInscriptionData {\n    id: string;\n    address: string;\n    'output value': string;\n    sat: string;\n    preview: string;\n    content: string;\n    'content length': string;\n    'content type': string;\n    timestamp: string;\n    'genesis height': string;\n    'genesis fee': string;\n    'genesis transaction': string;\n    location: string;\n    output: string;\n    offset: string;\n    number: string;\n}\n", "import { Event } from 'nostr-tools';\n\ndeclare global {\n    interface Window {\n        nostr: {\n            getPublicKey(): Promise<string>; // returns a public key as hex\n            signEvent(event: Event): Promise<Event>; // takes an event object, adds `id`, `pubkey` and `sig` and returns it\n            getRelays(): Promise<{\n                [url: string]: { read: boolean; write: boolean };\n            }>; // returns a basic map of relay urls to relay policies\n            signSchnorr(key: string): Promise<string>;\n        };\n    }\n}\n\nexport interface SaleOrder {\n    title: string;\n    txid: string;\n    inscriptionId: string;\n    value: number;\n    usdPrice: string;\n    id: string;\n    kind: number;\n    pubkey: string;\n    created_at: number;\n    content: string;\n    tags: Array<string[]>;\n    sig: string;\n    collection: null;\n    content_length: number;\n    content_type: string;\n    created: number;\n    escrow: Escrow;\n    genesis_fee: number;\n    genesis_height: number;\n    meta: null;\n    num: number;\n}\n\nexport interface Escrow {\n    bought_at: string;\n    satoshi_price: number;\n    seller_address: string;\n}\n"],
  "mappings": "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",
  "names": ["e", "output", "Buffer", "fill", "read", "i", "bytes", "isLE", "compare", "byteLength", "number", "bool", "bytes", "hash", "exists", "output", "assert", "createView", "rotr", "hexes", "bytesToHex", "hex", "hexToBytes", "nextTick", "utf8ToBytes", "toBytes", "concatBytes", "pad", "Hash", "isPlainObject", "defaults", "wrapConstructor", "randomBytes", "HMAC", "hash", "pad", "hmac", "hash", "i", "setBigUint64", "isLE", "_32n", "SHA2", "Chi", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA224", "U32_MASK64", "_32n", "fromBig", "split", "toBig", "shrSH", "shrSL", "rotrSH", "rotrSL", "rotrBH", "rotrBL", "rotr32H", "rotr32L", "rotlSH", "rotlSL", "rotlBH", "rotlBL", "add", "add3L", "add3H", "add4L", "add4H", "add5L", "add5H", "u64", "SHA512_Kh", "SHA512_Kl", "SHA512_W_H", "SHA512_W_L", "SHA512", "SHA512_224", "SHA512_256", "SHA384", "assertNumber", "chain", "encode", "decode", "alphabet", "join", "from", "padding", "normalize", "convertRadix", "done", "gcd", "radix2carry", "convertRadix2", "radix", "bytes", "radix2", "unsafeWrapper", "checksum", "genBase58", "XMR_BLOCK_LEN", "slice", "base58check", "sha256", "BECH_ALPHABET", "POLYMOD_GENERATORS", "bech32Polymod", "bechChecksum", "genBech32", "_words", "CODERS", "coderTypeError", "wordlist", "normalize", "generateMnemonic", "validateMnemonic", "mnemonicToSeedSync", "decode", "encode", "Buffer", "encode", "decode", "decode", "encode", "Buffer", "Buffer", "isBuffer", "init", "inited", "lookup", "revLookup", "Arr", "tripletToBase64", "encodeChunk", "output", "isLE", "write", "kMaxLength", "createBuffer", "allocUnsafe", "from", "fromArrayBuffer", "fromString", "fromObject", "assertSize", "alloc", "fill", "checked", "byteLength", "fromArrayLike", "internalIsBuffer", "isnan", "isArray", "utf8ToBytes", "base64ToBytes", "slowToString", "hexSlice", "utf8Slice", "asciiSlice", "latin1Slice", "base64Slice", "utf16leSlice", "swap", "bidirectionalIndexOf", "arrayIndexOf", "read", "i", "hexWrite", "utf8Write", "blitBuffer", "asciiWrite", "asciiToBytes", "latin1Write", "base64Write", "ucs2Write", "utf16leToBytes", "decodeCodePointsArray", "MAX_ARGUMENTS_LENGTH", "toHex", "bytes", "checkOffset", "checkInt", "objectWriteUInt16", "objectWriteUInt32", "checkIEEE754", "writeFloat", "writeDouble", "base64clean", "stringtrim", "INVALID_BASE64_RE", "isFastBuffer", "isSlowBuffer", "toString", "init_buffer", "compare", "isEncoding", "concat", "swap16", "swap32", "swap64", "equals", "includes", "indexOf", "lastIndexOf", "toJSON", "slice", "readUIntLE", "readUIntBE", "readUInt8", "readUInt16LE", "readUInt16BE", "readUInt32LE", "readUInt32BE", "readIntLE", "readIntBE", "readInt8", "readInt16LE", "readInt16BE", "readInt32LE", "readInt32BE", "readFloatLE", "readFloatBE", "readDoubleLE", "readDoubleBE", "writeUIntLE", "writeUIntBE", "writeUInt8", "writeUInt16LE", "writeUInt16BE", "writeUInt32LE", "writeUInt32BE", "writeIntLE", "writeIntBE", "writeInt8", "writeInt16LE", "writeInt16BE", "writeInt32LE", "writeInt32BE", "writeFloatLE", "writeFloatBE", "writeDoubleLE", "writeDoubleBE", "copy", "module", "module", "module", "module", "Buffer", "f", "module", "Buffer", "decode", "encode", "Buffer", "f", "network", "network", "decode", "output", "network", "module", "inherits", "module", "Buffer", "fill", "self", "listeners", "copy", "emit", "domain", "addListener", "once", "removeListener", "removeAllListeners", "keys", "module", "module", "defaultSetTimout", "defaultClearTimeout", "runTimeout", "cachedSetTimeout", "e", "runClearTimeout", "cachedClearTimeout", "cleanUpNextTick", "draining", "currentQueue", "queue", "queueIndex", "drainQueue", "nextTick", "Item", "noop", "binding", "cwd", "chdir", "umask", "hrtime", "performanceNow", "performance", "uptime", "startTime", "title", "platform", "browser", "env", "argv", "version", "versions", "release", "config", "on", "addListener", "once", "off", "removeListener", "removeAllListeners", "emit", "init_process", "inherits", "inspect", "isArray", "isBoolean", "isBuffer", "isDate", "isFunction", "isNumber", "isObject", "isRegExp", "isString", "isUndefined", "f", "x", "hash", "keys", "output", "hasOwnProperty", "Buffer", "add", "init_process", "module", "module", "keys", "Buffer", "inspect", "BufferList", "join", "concat", "module", "err", "self", "module", "NodeError", "endsWith", "includes", "module", "module", "deprecate", "config", "module", "Writable", "CorkedRequest", "Duplex", "WritableState", "Stream", "Buffer", "nop", "onwrite", "realHasInstance", "writeAfterEnd", "validChunk", "writeOrBuffer", "clearBuffer", "setDefaultEncoding", "get", "decodeChunk", "doWrite", "onwriteError", "finishMaybe", "onwriteStateUpdate", "needFinish", "afterWrite", "onwriteDrain", "endWritable", "prefinish", "module", "keys", "Duplex", "Readable", "Writable", "onend", "get", "onEndNT", "self", "Buffer", "isEncoding", "StringDecoder", "self", "module", "once", "noop", "onlegacyfinish", "onfinish", "onend", "onerror", "onclose", "onrequest", "module", "done", "createReadableStreamAsyncIterator", "module", "module", "Readable", "Duplex", "ReadableState", "EElistenerCount", "Stream", "Buffer", "debug", "BufferList", "StringDecoder", "from", "prependListener", "get", "readableAddChunk", "onEofChunk", "chunkInvalid", "maybeReadMore", "emitReadable", "MAX_HWM", "computeNewHighWaterMark", "howMuchToRead", "endReadable", "fromList", "emitReadable_", "flow", "maybeReadMore_", "onend", "pipeOnDrain", "indexOf", "nReadingNextTick", "self", "resume", "resume_", "n", "endReadableNT", "module", "Transform", "Duplex", "afterTransform", "prefinish", "done", "module", "PassThrough", "Transform", "module", "once", "noop", "from", "module", "module", "Buffer", "Transform", "inherits", "module", "inherits", "Buffer", "rotl", "module", "Buffer", "inherits", "RIPEMD160", "rotl", "module", "Buffer", "Hash", "hash", "module", "inherits", "Hash", "Buffer", "W", "module", "inherits", "Hash", "Buffer", "W", "require_sha256", "module", "inherits", "Hash", "Buffer", "W", "f", "module", "inherits", "Hash", "Buffer", "require_sha512", "module", "inherits", "Hash", "Buffer", "W", "module", "inherits", "SHA512", "Hash", "Buffer", "require_sha", "module", "init_buffer", "Buffer", "Buffer", "init_buffer", "prependListener", "listenerCount", "Buffer", "nextTick", "self", "forEach", "f", "indexOf", "init_process", "onend", "nextTick", "Buffer", "init_buffer", "init_process", "nextTick", "self", "init_process", "onend", "module", "require_string_decoder", "module", "module", "Buffer", "Transform", "StringDecoder", "inherits", "done", "require_browser", "module", "inherits", "RIPEMD160", "Hash", "hash", "require_crypto", "ripemd160", "sha256", "hash160", "TAGS", "TAGGED_HASH_PREFIXES", "Buffer", "taggedHash", "module", "ALPHABET", "encode", "i", "j", "decode", "module", "ALPHABET", "module", "base58", "Buffer", "encode", "checksum", "decode", "module", "version", "hash", "network", "Buffer", "hash2", "network", "version", "hash", "Buffer", "hash2", "ALPHABET", "pad", "bytes", "encode", "split", "decode", "Buffer", "version", "network", "hash", "Buffer", "version", "network", "hash", "hash2", "hex", "Buffer", "assert", "bool", "module", "Buffer", "encode", "number", "decode", "Buffer", "slice", "hash", "version", "version", "network", "hash", "networks", "output", "network", "version", "hash", "Buffer", "Buffer", "Buffer", "hex", "hash", "output", "hex", "Buffer", "hash", "GlobalTypes", "InputTypes", "OutputTypes", "decode", "encode", "Buffer", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "encode", "Buffer", "decode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "decode", "encode", "Buffer", "readUInt32BE", "readUInt8", "output", "Buffer", "Buffer", "hex", "__export", "self", "hex", "require_utils", "output", "isArray", "version", "Buffer", "Psbt", "Buffer", "output", "Buffer", "slice", "Buffer", "output", "hash", "require_psbt", "Psbt", "Buffer", "version", "output", "network", "hash", "self", "bytes", "require_src", "crypto", "networks", "toString", "isBuffer", "prototype", "keys", "descriptors", "filter", "hasOwnProperty", "noop", "alphabet", "config", "toJSON", "filter", "Buffer", "prototype", "toString", "encode", "keys", "isFormData", "isFileList", "transitional", "filter", "self", "keys", "format", "prototype", "config", "config", "validateStatus", "write", "domain", "read", "standardBrowserEnv", "nonStandardBrowserEnv", "bytes", "config", "done", "transitional", "config", "config2", "config", "merge", "version", "keys", "validators", "config", "transitional", "chain", "forEachMethodNoData", "forEachMethodWithData", "config", "Axios", "AxiosError", "CanceledError", "isCancel", "CancelToken", "VERSION", "all", "isAxiosError", "spread", "toFormData", "AxiosHeaders", "HttpStatusCode", "mergeConfig", "network", "config", "d", "window", "f", "bytes", "hex", "pad", "number", "gcd", "hash", "hex", "bytes", "crypto", "hash", "randomBytes", "crypto", "hexes", "nextTick", "utf8ToBytes", "hash", "crypto", "isLE", "_32n", "assertNumber", "encode", "decode", "alphabet", "from", "done", "padding", "bytes", "checksum", "slice", "sha256", "encode", "decode", "_words", "hash", "crypto", "createView", "rotr", "isLE", "hexes", "bytesToHex", "hex", "hexToBytes", "utf8ToBytes", "toBytes", "concatBytes", "pad", "Hash", "wrapConstructor", "toBytes", "Hash", "hash", "toBytes", "pad", "setBigUint64", "isLE", "_32n", "SHA2", "Hash", "createView", "toBytes", "SHA2", "wrapConstructor", "Chi", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "rotr", "sha256", "wrapConstructor", "SHA2", "wrapConstructor", "number", "bool", "bytes", "hash", "exists", "output", "assert", "assert_default", "crypto", "createView", "rotr", "isLE", "hexes", "utf8ToBytes", "toBytes", "concatBytes", "pad", "Hash", "wrapConstructor", "toBytes", "randomBytes", "crypto", "setBigUint64", "isLE", "_32n", "SHA2", "Hash", "createView", "assert_default", "toBytes", "Chi", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "rotr", "SHA224", "sha256", "wrapConstructor", "sha224", "bytesToHex", "concatBytes", "ensureBytes", "hexToBytes", "hexToNumber", "numberToHexUnpadded", "utf8ToBytes", "_0n", "_1n", "_2n", "hexes", "bytes", "hex", "title", "pad", "validators", "_0n", "_1n", "_2n", "_3n", "_8n", "mod", "pow2", "invert", "number", "gcd", "Fp", "ge", "f", "_0n", "_1n", "bitLen", "isLE", "_0n", "f", "_1n", "mod", "invert", "bytes", "hash", "isLE", "ensureBytes", "mod", "_1n", "_0n", "_1n", "constTimeNegate", "window", "f", "endo", "Fp", "hex", "slice", "s", "_0n", "_1n", "CURVE", "isWithinCurveOrder", "bytesToHex", "ensureBytes", "mod", "pointPrecomputes", "Point", "f", "a", "weierstrass", "compressedLen", "uncompressedLen", "isValidFieldElement", "modN", "invert", "concatBytes", "bytes", "number", "from", "Signature", "hexToBytes", "utils", "getPublicKey", "isProbPub", "getSharedSecret", "hash", "randomBytes", "r", "tv5", "c1", "c2", "utf8ToBytes", "concatBytes", "hash", "mod", "Point", "HMAC", "Hash", "hash", "assert_default", "toBytes", "pad", "hmac", "hash", "hmac", "concatBytes", "randomBytes", "weierstrass", "_1n", "_2n", "divNearest", "sqrtMod", "_3n", "pow2", "Fp", "mod", "sha256", "_0n", "TAGGED_HASH_PREFIXES", "concatBytes", "numTo32b", "Point", "schnorrGetPublicKey", "schnorrSign", "randomBytes", "ensureBytes", "schnorrVerify", "schnorr", "Point", "base58check", "sha256", "bytesToNumber", "bytes", "bytesToHex", "hexToBytes", "utf8ToBytes", "createView", "concatBytes", "versions", "version", "mod", "hash", "HMAC", "hash", "pad", "hmac", "__defProp", "__export", "all", "utils_exports", "__export", "filter", "f", "__export", "listeners", "listeners2", "hex", "__export", "domain", "hmac", "error", "filter", "network"]
}
